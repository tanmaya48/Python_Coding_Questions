from question import minimumCost
tests = ['assert minimumCost(5, [[0, 1, 7], [1, 3, 7], [1, 2, 1]], [[0, 3], [3, 4]]) == [1, -1]', 'assert minimumCost(3, [[0, 2, 7], [0, 1, 15], [1, 2, 6], [1, 2, 1]], [[1, 2]]) == [0]', 'assert minimumCost(3, [[1, 0, 4], [0, 2, 5], [0, 2, 3], [0, 2, 14], [0, 2, 12], [2, 0, 14], [0, 2, 4]], [[2, 1]]) == [0]', 'assert minimumCost(8, [[3, 6, 6], [6, 1, 0], [1, 3, 1]], [[5, 4], [7, 3]]) == [-1, -1]', 'assert minimumCost(9, [[8, 2, 0], [4, 7, 3], [5, 8, 1], [1, 3, 5]], [[1, 6], [1, 0], [4, 1], [5, 3], [0, 4], [3, 4], [2, 3], [0, 8]]) == [-1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(5, [[3, 1, 8], [4, 3, 7], [3, 2, 14], [1, 2, 13], [3, 2, 6], [3, 2, 4], [3, 0, 1], [3, 1, 12]], [[0, 4], [2, 1], [0, 3], [3, 2], [2, 4], [4, 1], [3, 2]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[1, 0, 5], [2, 1, 0], [0, 2, 4], [0, 2, 2], [1, 2, 7], [1, 2, 7]], [[0, 1]]) == [0]', 'assert minimumCost(3, [[2, 1, 12], [0, 2, 15], [2, 0, 0], [2, 1, 15], [0, 2, 11]], [[2, 0], [1, 0], [2, 1], [1, 2], [1, 0], [2, 0]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(5, [[1, 4, 12], [1, 3, 8], [3, 2, 10], [3, 4, 13], [3, 0, 7], [3, 1, 3], [0, 1, 6], [1, 2, 8]], [[3, 0], [0, 2]]) == [0, 0]', 'assert minimumCost(5, [[4, 1, 0], [4, 0, 1], [3, 4, 0], [3, 1, 0], [4, 3, 1]], [[3, 0], [4, 2], [1, 0]]) == [0, -1, 0]', 'assert minimumCost(10, [[9, 0, 4], [5, 8, 4], [0, 3, 8], [5, 4, 5]], [[6, 2]]) == [-1]', 'assert minimumCost(6, [[5, 0, 11]], [[1, 0], [4, 2], [4, 5], [3, 5]]) == [-1, -1, -1, -1]', 'assert minimumCost(7, [[6, 0, 0], [4, 1, 1], [5, 4, 0], [1, 2, 2], [3, 0, 2], [2, 0, 1], [0, 4, 2], [1, 6, 1], [1, 3, 1], [3, 0, 1]], [[5, 4], [0, 5], [4, 0], [1, 5], [1, 3], [1, 5]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[3, 2, 3], [1, 2, 3], [3, 1, 5], [1, 2, 5], [0, 1, 2], [1, 0, 4], [3, 2, 4]], [[0, 3], [3, 0], [1, 3], [0, 3], [3, 2], [3, 1], [1, 0]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(10, [[7, 0, 11], [6, 3, 8], [6, 1, 3], [7, 3, 0], [2, 3, 9], [8, 9, 12], [0, 6, 3], [0, 2, 4]], [[7, 0], [4, 2], [6, 2]]) == [0, -1, 0]', 'assert minimumCost(6, [[4, 0, 3]], [[4, 0], [2, 3], [0, 4], [2, 0], [3, 1]]) == [3, -1, 3, -1, -1]', 'assert minimumCost(6, [[4, 5, 7], [3, 1, 7], [5, 2, 5], [1, 0, 0], [0, 4, 5], [3, 4, 8]], [[4, 1], [5, 3], [1, 0], [0, 1], [1, 0], [0, 1], [5, 0], [3, 5]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[1, 5, 1], [4, 3, 3], [3, 5, 3], [1, 0, 1], [3, 0, 0]], [[0, 2], [4, 5], [5, 1], [0, 4], [0, 1], [0, 4], [4, 2], [4, 0]]) == [-1, 0, 0, 0, 0, 0, -1, 0]', 'assert minimumCost(10, [[7, 0, 1], [0, 9, 2], [7, 9, 4]], [[3, 6], [2, 7], [6, 3], [7, 3], [2, 5], [1, 8]]) == [-1, -1, -1, -1, -1, -1]', 'assert minimumCost(4, [[1, 3, 5], [0, 1, 8], [1, 2, 8], [2, 0, 6], [0, 1, 8], [2, 1, 8]], [[3, 2], [0, 2], [0, 2]]) == [0, 0, 0]', 'assert minimumCost(4, [[2, 3, 1], [1, 3, 5], [1, 2, 6], [3, 0, 7], [1, 3, 7], [0, 2, 5], [0, 1, 7]], [[2, 1], [1, 2], [0, 1], [2, 0], [0, 2], [1, 2], [3, 2], [0, 3], [2, 1], [1, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[5, 0, 7], [6, 1, 5], [0, 3, 8], [5, 1, 9], [0, 6, 2], [5, 0, 1], [2, 4, 9], [3, 1, 1]], [[6, 0], [0, 1], [0, 2], [2, 5], [2, 4]]) == [0, 0, -1, -1, 9]', 'assert minimumCost(7, [[2, 1, 3], [1, 0, 3], [5, 1, 3], [0, 1, 2], [1, 2, 0], [0, 6, 1], [1, 6, 1], [6, 3, 3]], [[2, 0], [5, 4], [1, 0], [2, 4], [5, 3], [4, 0]]) == [0, -1, 0, -1, 0, -1]', 'assert minimumCost(8, [[5, 2, 1], [1, 6, 1], [3, 7, 1], [2, 3, 1], [5, 3, 0], [5, 6, 1], [6, 2, 0], [4, 3, 0], [0, 3, 1]], [[3, 6], [7, 1], [0, 4], [1, 7], [3, 5], [2, 4], [7, 5]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[1, 8, 7], [5, 4, 0], [8, 1, 6], [7, 6, 0], [1, 5, 6], [1, 7, 0], [4, 8, 3]], [[1, 8], [7, 4], [3, 2], [1, 4], [1, 5], [3, 5]]) == [0, 0, -1, 0, 0, -1]', 'assert minimumCost(5, [[3, 4, 4], [3, 2, 8], [2, 4, 8], [2, 1, 7], [2, 4, 8]], [[0, 1], [2, 0], [0, 2], [2, 3], [1, 3], [4, 0]]) == [-1, -1, -1, 0, 0, -1]', 'assert minimumCost(4, [[0, 1, 0], [0, 3, 3], [1, 2, 3], [1, 3, 3], [2, 0, 0], [1, 3, 4], [0, 1, 3]], [[1, 3], [0, 3], [0, 3], [3, 2], [3, 0], [2, 0], [0, 2]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(5, [[1, 4, 3], [2, 1, 0], [0, 1, 1], [1, 2, 2], [2, 3, 1]], [[1, 3], [1, 0], [2, 0], [1, 3]]) == [0, 0, 0, 0]', 'assert minimumCost(4, [[2, 1, 2], [3, 0, 6], [1, 3, 5], [2, 0, 9], [2, 0, 2], [3, 1, 5], [3, 2, 5]], [[0, 2], [3, 0]]) == [0, 0]', 'assert minimumCost(6, [[3, 1, 1], [4, 0, 0], [3, 0, 5], [5, 0, 2], [5, 2, 0], [2, 5, 1], [2, 1, 3], [1, 2, 1], [4, 3, 2], [3, 1, 5]], [[0, 2], [1, 4], [1, 2], [2, 1], [4, 2]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(4, [[3, 1, 9], [1, 2, 12], [2, 1, 11], [2, 3, 6], [2, 1, 11], [3, 2, 7], [2, 0, 8], [2, 3, 11]], [[1, 3], [2, 0], [1, 0], [3, 2], [0, 3], [0, 2], [2, 0]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[3, 0, 2], [5, 4, 12], [6, 3, 7], [4, 2, 2], [6, 2, 2]], [[6, 0]]) == [0]', 'assert minimumCost(9, [[7, 2, 1], [3, 5, 0], [3, 5, 0], [3, 2, 0], [2, 6, 1], [8, 0, 0]], [[8, 0], [8, 4], [3, 7], [3, 2], [8, 2], [8, 5]]) == [0, -1, 0, 0, -1, -1]', 'assert minimumCost(9, [[0, 5, 8], [6, 3, 2], [2, 4, 8], [6, 5, 4], [8, 7, 0], [1, 8, 8], [3, 8, 2], [6, 5, 4], [7, 0, 9]], [[3, 4], [7, 2], [5, 3], [3, 1], [3, 7], [2, 4], [7, 8], [3, 8]]) == [-1, -1, 0, 0, 0, 8, 0, 0]', 'assert minimumCost(3, [[0, 2, 1], [1, 0, 0], [0, 1, 1]], [[2, 0], [0, 1], [1, 0], [2, 0], [1, 0], [0, 1], [2, 0], [1, 0], [1, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[5, 2, 6], [4, 0, 4], [2, 5, 2]], [[2, 0], [2, 1]]) == [-1, -1]', 'assert minimumCost(3, [[2, 1, 0], [2, 1, 2], [2, 0, 3], [1, 0, 3], [2, 0, 5], [2, 0, 0], [1, 0, 3]], [[2, 1], [2, 1], [1, 2]]) == [0, 0, 0]', 'assert minimumCost(4, [[3, 1, 1], [0, 2, 7], [0, 2, 1], [0, 3, 4], [1, 2, 5], [3, 0, 6]], [[0, 3], [0, 3], [3, 2], [1, 2], [2, 1], [1, 2], [0, 3], [1, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[3, 0, 5]], [[2, 0], [0, 1], [1, 3], [0, 1], [3, 2], [2, 0]]) == [-1, -1, -1, -1, -1, -1]', 'assert minimumCost(9, [[6, 2, 11], [1, 4, 1], [2, 1, 9], [6, 0, 0], [5, 0, 1], [3, 8, 8], [8, 5, 3], [6, 5, 1]], [[7, 0], [0, 4], [5, 3], [2, 4]]) == [-1, 0, 0, 0]', 'assert minimumCost(7, [[4, 3, 3], [5, 1, 1], [2, 3, 4], [3, 5, 0]], [[4, 5], [3, 4], [3, 1], [6, 1], [4, 2], [6, 1], [5, 6], [2, 0], [3, 5], [0, 4]]) == [0, 0, 0, -1, 0, -1, -1, -1, 0, -1]', 'assert minimumCost(7, [[4, 2, 3], [4, 1, 0], [6, 2, 3]], [[0, 5], [2, 5], [3, 0], [4, 3]]) == [-1, -1, -1, -1]', 'assert minimumCost(3, [[0, 2, 0], [2, 1, 1], [0, 2, 1], [0, 1, 0], [0, 2, 1], [0, 2, 0], [1, 0, 0], [2, 0, 0]], [[0, 1], [1, 2], [2, 1], [2, 1], [1, 2]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(3, [[1, 0, 8], [0, 2, 12], [1, 0, 9], [2, 0, 14]], [[1, 0], [2, 0], [1, 2], [1, 2], [2, 0], [1, 2], [2, 0], [2, 1]]) == [8, 8, 8, 8, 8, 8, 8, 8]', 'assert minimumCost(8, [[2, 6, 7], [0, 3, 1], [7, 6, 6], [0, 5, 4], [0, 6, 7], [4, 2, 4], [0, 5, 1], [5, 7, 8], [3, 1, 3]], [[6, 5], [2, 4], [5, 7], [2, 7], [3, 7], [3, 7], [7, 0]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[3, 7, 0], [5, 4, 9], [6, 1, 1], [6, 5, 7], [5, 7, 4], [5, 7, 8], [8, 3, 0], [4, 0, 8], [3, 7, 0]], [[1, 6], [3, 4], [0, 3], [0, 7], [0, 1], [4, 0], [5, 6], [2, 8], [4, 1]]) == [0, 0, 0, 0, 0, 0, 0, -1, 0]', 'assert minimumCost(7, [[3, 2, 9]], [[2, 5], [1, 2]]) == [-1, -1]', 'assert minimumCost(4, [[1, 3, 5], [3, 1, 5], [3, 0, 4]], [[1, 2], [3, 0], [3, 1], [2, 3], [3, 0], [0, 1], [2, 3], [1, 2]]) == [-1, 4, 4, -1, 4, 4, -1, -1]', 'assert minimumCost(3, [[2, 0, 1], [0, 1, 3], [1, 0, 12], [1, 2, 1], [1, 2, 0], [0, 2, 8], [2, 1, 7]], [[0, 2], [1, 0]]) == [0, 0]', 'assert minimumCost(9, [[3, 2, 3], [6, 3, 3]], [[3, 6], [8, 7], [7, 1], [5, 1], [6, 4], [8, 0]]) == [3, -1, -1, -1, -1, -1]', 'assert minimumCost(3, [[1, 0, 0], [1, 2, 2], [0, 1, 5], [1, 0, 5], [0, 2, 1], [1, 2, 5], [0, 2, 6], [1, 2, 4], [1, 2, 2]], [[1, 2], [2, 0], [2, 0]]) == [0, 0, 0]', 'assert minimumCost(4, [[0, 1, 5], [1, 3, 5], [0, 3, 3], [0, 2, 5], [0, 3, 1], [3, 0, 3], [3, 1, 2], [3, 2, 5], [3, 2, 3], [0, 3, 1]], [[1, 2], [0, 3], [3, 2], [3, 0], [3, 0], [3, 0]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[0, 3, 1], [1, 6, 3], [5, 3, 1], [3, 0, 4], [2, 6, 3]], [[0, 5], [2, 3], [1, 4], [3, 4], [6, 0]]) == [0, -1, -1, -1, -1]', 'assert minimumCost(6, [[0, 4, 4]], [[2, 5], [0, 2], [0, 5], [2, 4], [1, 2], [4, 2], [0, 2]]) == [-1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(9, [[2, 4, 1], [7, 1, 1], [0, 3, 0], [3, 1, 5], [7, 4, 3], [6, 4, 2], [0, 7, 6]], [[5, 8], [0, 2], [3, 4], [5, 4], [0, 6]]) == [-1, 0, 0, -1, 0]', 'assert minimumCost(3, [[0, 1, 2], [0, 2, 4], [0, 1, 2]], [[0, 1], [1, 0], [1, 2], [1, 2], [2, 0], [0, 2], [2, 0]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[2, 4, 1], [2, 1, 0], [0, 3, 2], [5, 2, 1], [4, 7, 2], [1, 4, 1], [4, 1, 2], [8, 6, 1]], [[0, 3], [6, 7], [1, 3], [0, 4], [5, 2], [6, 5], [7, 1]]) == [2, -1, -1, -1, 0, -1, 0]', 'assert minimumCost(3, [[1, 2, 2], [1, 2, 9], [0, 2, 7], [0, 2, 8]], [[2, 0], [0, 2], [1, 0]]) == [0, 0, 0]', 'assert minimumCost(4, [[2, 1, 0], [0, 3, 2], [2, 1, 1], [1, 2, 10], [0, 1, 7], [0, 3, 5]], [[3, 2], [2, 3], [1, 3], [1, 0], [0, 2], [0, 3], [0, 1], [3, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[5, 2, 3], [2, 3, 3], [4, 0, 3], [4, 5, 0], [2, 1, 2], [1, 5, 1]], [[3, 5], [1, 2], [1, 3], [4, 2], [6, 5], [1, 0], [0, 6]]) == [0, 0, 0, 0, -1, 0, -1]', 'assert minimumCost(3, [[2, 0, 4], [0, 1, 3], [2, 0, 0], [2, 0, 0], [2, 1, 1], [1, 0, 3], [0, 1, 4], [2, 1, 0], [1, 0, 0]], [[2, 0], [2, 0], [1, 0], [1, 2], [1, 2], [1, 2], [2, 1], [0, 1], [1, 0], [2, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[3, 0, 8], [4, 3, 4], [3, 4, 4], [1, 0, 1], [5, 7, 4], [1, 7, 5], [6, 5, 0], [4, 2, 4], [2, 7, 1]], [[5, 1], [0, 4], [6, 5], [3, 2], [1, 2]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(9, [[3, 7, 2], [8, 0, 6], [7, 6, 4], [5, 0, 5], [2, 7, 2], [6, 0, 5], [0, 8, 4], [6, 1, 4]], [[6, 0], [1, 8], [4, 1], [0, 4], [6, 4], [2, 4]]) == [0, 0, -1, -1, -1, -1]', 'assert minimumCost(8, [[4, 1, 5], [4, 5, 4], [5, 7, 3], [0, 1, 0]], [[5, 6], [3, 2], [7, 1]]) == [-1, -1, 0]', 'assert minimumCost(9, [[0, 7, 3], [4, 6, 0], [0, 7, 2]], [[4, 2]]) == [-1]', 'assert minimumCost(3, [[0, 1, 2], [0, 1, 3], [0, 1, 1], [2, 0, 1], [2, 0, 1], [2, 0, 3], [1, 2, 0], [0, 1, 1], [2, 0, 1]], [[0, 2], [1, 2], [0, 2], [0, 1]]) == [0, 0, 0, 0]', 'assert minimumCost(7, [[1, 5, 5], [5, 2, 4], [6, 4, 2], [0, 5, 8], [5, 2, 8]], [[5, 4], [5, 1], [0, 4], [4, 0], [4, 5], [4, 1], [6, 1]]) == [-1, 0, -1, -1, -1, -1, -1]', 'assert minimumCost(9, [[7, 0, 4], [2, 5, 0], [8, 6, 4], [2, 7, 3], [4, 0, 5]], [[2, 6]]) == [-1]', 'assert minimumCost(8, [[6, 5, 1], [6, 2, 2], [4, 1, 2], [6, 2, 2], [3, 1, 0], [0, 3, 1], [2, 6, 3], [5, 4, 1], [1, 7, 3], [4, 2, 2]], [[4, 2], [1, 7], [5, 7], [1, 4], [6, 3], [4, 1]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[6, 0, 12], [2, 3, 10], [1, 0, 8], [1, 3, 5], [0, 1, 5], [6, 2, 10], [1, 4, 4], [5, 0, 8], [3, 5, 14], [5, 3, 1]], [[6, 5], [1, 4], [2, 1], [2, 6]]) == [0, 0, 0, 0]', 'assert minimumCost(6, [[0, 2, 5]], [[4, 1], [2, 5], [5, 1], [1, 0], [5, 4], [3, 4], [2, 4]]) == [-1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(9, [[2, 3, 9], [8, 5, 11], [3, 6, 3], [3, 8, 1]], [[4, 6], [2, 6], [2, 1], [3, 0], [6, 3]]) == [-1, 1, -1, -1, 1]', 'assert minimumCost(8, [[7, 2, 2], [6, 2, 2], [6, 2, 9]], [[0, 4], [4, 6], [2, 3], [1, 5], [1, 5], [4, 6]]) == [-1, -1, -1, -1, -1, -1]', 'assert minimumCost(7, [[2, 4, 4], [3, 2, 10], [1, 2, 8], [6, 4, 4], [0, 2, 4], [1, 2, 7], [2, 0, 10], [2, 6, 0], [3, 0, 8]], [[5, 3], [3, 4]]) == [-1, 0]', 'assert minimumCost(10, [[8, 9, 3], [0, 2, 8], [5, 6, 10], [8, 9, 2], [5, 4, 4], [9, 1, 9], [4, 2, 3], [7, 9, 4], [6, 8, 1], [8, 4, 5]], [[9, 2], [8, 1], [3, 7], [0, 8], [3, 0], [2, 5], [0, 2], [2, 9]]) == [0, 0, -1, 0, -1, 0, 0, 0]', 'assert minimumCost(7, [[6, 3, 11], [0, 6, 2], [3, 6, 1]], [[2, 5]]) == [-1]', 'assert minimumCost(9, [[3, 4, 0], [3, 7, 2], [2, 5, 2], [1, 5, 2], [4, 1, 1], [0, 8, 1], [5, 7, 2], [6, 0, 0], [0, 4, 0], [8, 1, 2]], [[1, 8], [8, 2], [0, 2], [7, 3], [3, 0], [8, 3]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[3, 1, 10], [3, 7, 0], [7, 3, 10], [1, 3, 10], [5, 3, 13], [4, 1, 9], [2, 5, 0], [4, 6, 11], [0, 5, 12], [2, 5, 10]], [[0, 7], [5, 1], [3, 1], [0, 3], [4, 3], [3, 5], [7, 2], [1, 5], [5, 7], [6, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[6, 4, 2], [6, 1, 4], [6, 1, 1], [4, 0, 0], [0, 3, 1]], [[4, 6], [2, 3], [6, 0], [2, 5]]) == [0, -1, 0, -1]', 'assert minimumCost(3, [[1, 0, 0], [0, 2, 0], [1, 0, 6], [1, 0, 0], [0, 1, 3]], [[2, 1], [2, 0], [2, 1]]) == [0, 0, 0]', 'assert minimumCost(4, [[0, 2, 4], [3, 1, 7], [2, 3, 2], [2, 3, 4], [3, 2, 10], [0, 2, 3], [2, 1, 10], [3, 0, 10]], [[1, 2], [2, 1], [2, 1], [0, 2], [0, 1], [1, 2], [1, 0]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[5, 2, 2], [0, 2, 3], [1, 3, 1], [3, 5, 6], [1, 5, 1], [1, 4, 6], [2, 5, 1], [0, 4, 4], [6, 0, 6]], [[5, 3], [0, 5], [2, 4], [3, 4], [4, 5]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(3, [[1, 2, 1], [1, 0, 4], [1, 0, 3], [0, 1, 0], [0, 2, 7], [1, 0, 6], [1, 2, 0], [0, 1, 1], [2, 1, 6]], [[2, 1], [0, 1]]) == [0, 0]', 'assert minimumCost(6, [[4, 2, 0], [0, 2, 1], [5, 0, 1]], [[4, 2], [5, 4], [2, 1]]) == [0, 0, -1]', 'assert minimumCost(7, [[1, 6, 1], [1, 2, 0], [1, 2, 9], [0, 3, 0]], [[0, 1], [1, 5], [6, 1], [1, 3], [4, 1], [5, 4]]) == [-1, -1, 0, -1, -1, -1]', 'assert minimumCost(4, [[0, 2, 10], [3, 1, 6], [3, 0, 6], [0, 1, 4], [1, 2, 7], [3, 0, 6], [0, 1, 6], [1, 2, 7], [3, 1, 8]], [[1, 0], [1, 0]]) == [0, 0]', 'assert minimumCost(5, [[3, 1, 3]], [[3, 0]]) == [-1]', 'assert minimumCost(5, [[0, 1, 5]], [[1, 0], [0, 1], [2, 3]]) == [5, 5, -1]', 'assert minimumCost(6, [[4, 0, 1], [2, 0, 1], [5, 2, 0], [5, 4, 0], [1, 5, 1], [4, 2, 1], [2, 5, 1], [0, 5, 0]], [[5, 3], [4, 5], [2, 3], [4, 2], [4, 0], [1, 5], [4, 2], [4, 2], [1, 4], [5, 2]]) == [-1, 0, -1, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[0, 2, 3], [0, 1, 3], [1, 2, 2], [0, 1, 1], [0, 3, 4], [2, 3, 0], [2, 0, 2], [2, 0, 1], [1, 2, 0]], [[3, 1], [3, 2], [1, 3], [1, 0], [1, 3], [2, 0], [0, 2], [0, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[4, 1, 1]], [[1, 2], [1, 4], [4, 3], [4, 1], [1, 0], [1, 2], [3, 0]]) == [-1, 1, -1, 1, -1, -1, -1]', 'assert minimumCost(5, [[3, 1, 0], [4, 3, 1]], [[3, 0], [1, 3], [2, 1], [3, 0], [0, 3], [0, 4], [1, 3], [4, 1]]) == [-1, 0, -1, -1, -1, -1, 0, 0]', 'assert minimumCost(4, [[0, 3, 0], [0, 2, 2], [2, 0, 4], [3, 2, 3], [0, 1, 6], [1, 3, 0], [2, 0, 4], [3, 2, 6]], [[2, 0], [0, 3]]) == [0, 0]', 'assert minimumCost(4, [[1, 3, 0], [3, 1, 0], [3, 2, 2], [2, 0, 1], [2, 1, 1], [0, 3, 1], [3, 0, 0]], [[2, 1], [2, 1]]) == [0, 0]', 'assert minimumCost(8, [[3, 7, 1], [7, 6, 1], [0, 4, 1], [6, 2, 0], [7, 6, 1], [4, 2, 1], [6, 0, 2], [2, 4, 2], [3, 2, 2]], [[6, 5], [4, 2], [5, 0], [0, 1], [6, 1]]) == [-1, 0, -1, -1, -1]', 'assert minimumCost(7, [[5, 2, 6], [4, 6, 2], [1, 3, 9], [4, 6, 9], [1, 6, 2], [1, 4, 2], [6, 3, 0]], [[3, 6], [1, 6], [5, 2], [6, 3], [6, 4], [3, 1], [1, 3], [1, 4]]) == [0, 0, 6, 0, 0, 0, 0, 0]', 'assert minimumCost(5, [[0, 1, 0], [4, 1, 2], [2, 0, 2], [1, 4, 4], [4, 3, 3], [1, 3, 1], [0, 4, 6], [2, 0, 4], [3, 4, 0], [1, 0, 1]], [[1, 4], [3, 1], [0, 4], [3, 0], [3, 0], [0, 4], [2, 4], [1, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[4, 5, 1], [0, 2, 1], [1, 3, 3], [1, 3, 3], [0, 1, 3], [4, 3, 3], [5, 3, 3], [2, 5, 0]], [[0, 2]]) == [0]', 'assert minimumCost(4, [[3, 1, 2], [2, 0, 6], [3, 0, 1]], [[3, 2], [1, 2], [1, 2], [0, 1], [0, 2], [3, 0], [3, 0], [1, 0], [1, 0], [3, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(5, [[3, 1, 12], [1, 2, 2], [0, 2, 9], [0, 4, 10], [4, 0, 6], [0, 2, 12], [2, 1, 7], [1, 3, 6], [1, 0, 4], [2, 1, 5]], [[0, 2], [4, 0], [3, 1], [3, 1], [4, 3], [1, 3], [3, 4], [3, 1], [2, 4]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[4, 2, 8], [2, 8, 0], [0, 2, 3], [8, 7, 10]], [[0, 2], [8, 1], [5, 1], [0, 4], [4, 5], [2, 5], [3, 6], [6, 3]]) == [0, -1, -1, 0, -1, -1, -1, -1]', 'assert minimumCost(3, [[2, 1, 10], [2, 0, 8], [2, 0, 11], [1, 2, 10], [1, 0, 8], [1, 0, 5], [1, 0, 2]], [[2, 0], [0, 2], [2, 1], [1, 2], [2, 0], [2, 1]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[6, 1, 5], [5, 1, 3], [6, 1, 1], [2, 6, 4], [4, 3, 2], [3, 5, 4], [6, 0, 1], [5, 3, 5], [6, 0, 4], [6, 0, 6]], [[0, 1], [4, 1], [1, 2], [4, 2], [2, 3], [5, 4], [4, 0], [1, 5], [1, 3], [3, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(5, [[2, 3, 5], [0, 1, 4], [1, 3, 2], [1, 2, 0], [0, 1, 5], [0, 1, 2]], [[1, 0], [4, 2], [2, 4]]) == [0, -1, -1]', 'assert minimumCost(3, [[1, 2, 10], [0, 1, 4], [2, 0, 11], [0, 2, 0]], [[2, 0], [1, 0], [2, 0], [0, 2], [1, 0], [1, 2], [2, 1]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[0, 2, 3], [0, 3, 9], [1, 3, 2], [3, 2, 10], [3, 2, 1], [1, 0, 10], [0, 3, 10], [1, 0, 4], [1, 3, 6], [1, 2, 8]], [[2, 1], [3, 0], [1, 3], [2, 0], [0, 2], [1, 3]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[1, 2, 1], [3, 6, 5], [6, 3, 12], [6, 0, 7], [6, 2, 8], [1, 5, 1], [2, 0, 1]], [[3, 2], [3, 0], [4, 1]]) == [0, 0, -1]', 'assert minimumCost(7, [[1, 4, 2], [2, 3, 6], [5, 4, 2], [4, 5, 4], [0, 2, 6]], [[5, 1]]) == [0]', 'assert minimumCost(5, [[2, 4, 4], [1, 2, 2], [1, 4, 0], [4, 3, 0], [0, 4, 1]], [[1, 2], [1, 2], [1, 0], [4, 3], [2, 0], [2, 3], [0, 3], [2, 4], [2, 3], [1, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[4, 1, 2], [1, 5, 5], [0, 2, 3], [2, 5, 5], [1, 0, 9], [5, 3, 2], [6, 1, 12]], [[2, 1], [6, 0], [6, 4], [3, 4]]) == [0, 0, 0, 0]', 'assert minimumCost(10, [[3, 6, 3], [7, 8, 2], [2, 3, 0], [6, 5, 0]], [[0, 2], [9, 5], [9, 2], [0, 1], [7, 2], [6, 2], [5, 1], [4, 3]]) == [-1, -1, -1, -1, -1, 0, -1, -1]', 'assert minimumCost(5, [[1, 3, 4], [1, 4, 1], [3, 1, 2], [0, 4, 1], [0, 4, 3]], [[4, 2], [0, 2]]) == [-1, -1]', 'assert minimumCost(4, [[0, 2, 2], [0, 2, 13], [3, 0, 14], [3, 0, 9]], [[3, 2], [3, 1]]) == [0, -1]', 'assert minimumCost(8, [[1, 0, 2], [4, 0, 3], [6, 4, 1], [0, 6, 1], [6, 1, 2], [0, 6, 3], [6, 3, 2]], [[6, 7], [5, 4]]) == [-1, -1]', 'assert minimumCost(3, [[0, 2, 4], [1, 0, 10], [0, 2, 10], [2, 1, 9], [1, 0, 2]], [[1, 2], [0, 2], [1, 2], [2, 0], [2, 0], [2, 1], [2, 1]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[0, 5, 4], [0, 5, 0], [1, 0, 5], [1, 3, 7], [2, 3, 3], [4, 1, 7], [2, 4, 6]], [[5, 1], [4, 5], [4, 1], [2, 5], [1, 2]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(9, [[2, 5, 2], [7, 6, 2], [5, 6, 3], [6, 4, 2], [5, 2, 0], [7, 2, 1], [0, 8, 1], [4, 1, 3]], [[0, 7], [4, 2], [4, 1], [6, 7], [8, 1]]) == [-1, 0, 0, 0, -1]', 'assert minimumCost(8, [[7, 2, 2], [6, 4, 5], [5, 6, 4], [7, 1, 6], [1, 4, 3]], [[1, 6], [3, 5], [0, 1], [3, 0], [3, 6], [2, 3], [1, 3], [4, 2], [6, 0]]) == [0, -1, -1, -1, -1, -1, -1, 0, -1]', 'assert minimumCost(10, [[2, 9, 2]], [[4, 3], [2, 0], [8, 3], [5, 6], [3, 7], [8, 0]]) == [-1, -1, -1, -1, -1, -1]', 'assert minimumCost(3, [[0, 2, 1], [0, 2, 2], [1, 2, 3], [2, 0, 3], [2, 0, 3], [2, 1, 2], [1, 0, 0], [1, 0, 4]], [[0, 2]]) == [0]', 'assert minimumCost(4, [[3, 1, 0], [0, 1, 6], [3, 2, 9], [3, 1, 10], [1, 0, 0], [0, 3, 4]], [[2, 3], [0, 3]]) == [0, 0]', 'assert minimumCost(7, [[2, 4, 1], [3, 6, 1], [6, 2, 2], [6, 4, 1], [0, 2, 2], [1, 4, 3], [3, 0, 0], [1, 2, 3], [3, 4, 3]], [[3, 6], [6, 0], [4, 6], [2, 4], [0, 2], [4, 2], [2, 1]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[3, 6, 0], [7, 2, 4]], [[1, 6]]) == [-1]', 'assert minimumCost(8, [[2, 1, 1], [4, 0, 1], [0, 1, 0], [1, 6, 6], [3, 4, 1], [0, 5, 0]], [[6, 5], [1, 6], [7, 0], [1, 6], [4, 3], [3, 2], [6, 3], [1, 2], [0, 5], [1, 5]]) == [0, 0, -1, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[2, 0, 3], [0, 1, 10], [1, 0, 4], [1, 0, 5]], [[2, 1], [0, 1], [1, 0], [2, 0], [2, 1]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(8, [[3, 6, 3], [6, 7, 5], [0, 1, 3], [0, 6, 5], [2, 7, 0]], [[6, 4], [6, 7], [7, 4], [6, 4], [2, 1], [1, 2], [4, 1], [0, 1], [5, 1], [3, 1]]) == [-1, 0, -1, -1, 0, 0, -1, 0, -1, 0]', 'assert minimumCost(10, [[8, 0, 0], [3, 2, 4], [8, 3, 4], [2, 6, 7], [5, 2, 2], [6, 3, 6], [8, 0, 3]], [[8, 9], [7, 8]]) == [-1, -1]', 'assert minimumCost(8, [[6, 7, 4], [7, 0, 4], [4, 2, 2], [0, 4, 1], [2, 7, 5], [0, 3, 2], [7, 4, 7], [3, 5, 1], [5, 6, 7]], [[6, 0], [0, 1], [5, 1], [5, 4], [3, 1], [3, 0]]) == [0, -1, -1, 0, -1, 0]', 'assert minimumCost(4, [[0, 1, 0], [0, 1, 13]], [[0, 1], [1, 3], [0, 1], [3, 0], [2, 1], [2, 3], [3, 0], [2, 1], [1, 3]]) == [0, -1, 0, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(10, [[6, 7, 2], [0, 4, 5], [7, 6, 3], [6, 4, 1], [5, 4, 5]], [[5, 3], [8, 6], [1, 9], [8, 0], [2, 0], [1, 6], [2, 3], [5, 2]]) == [-1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(5, [[3, 2, 3], [4, 0, 0], [4, 3, 0]], [[1, 2], [2, 3], [0, 3], [0, 3], [0, 1], [4, 0], [3, 1], [4, 3]]) == [-1, 0, 0, 0, -1, 0, -1, 0]', 'assert minimumCost(8, [[5, 6, 12], [2, 1, 8], [0, 2, 11], [5, 3, 14], [5, 0, 4], [5, 2, 4], [5, 1, 1]], [[4, 1], [6, 7], [2, 3]]) == [-1, -1, 0]', 'assert minimumCost(10, [[5, 0, 8], [9, 8, 6], [5, 2, 0], [3, 8, 4], [0, 9, 0], [5, 9, 4], [5, 2, 2], [3, 5, 8], [3, 5, 6]], [[2, 1], [5, 9], [7, 3], [1, 9], [5, 9], [8, 6], [6, 2], [5, 2], [0, 7], [3, 9]]) == [-1, 0, -1, -1, 0, -1, -1, 0, -1, 0]', 'assert minimumCost(4, [[0, 2, 2], [2, 1, 0], [0, 2, 3], [2, 3, 1]], [[2, 0], [0, 1], [3, 2], [3, 0], [3, 2], [1, 2], [2, 3], [0, 3], [0, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[4, 3, 5], [2, 3, 2], [1, 0, 5], [1, 0, 5], [5, 3, 5], [1, 0, 0], [2, 4, 6], [1, 3, 5], [5, 0, 6], [0, 2, 6]], [[3, 5], [4, 5], [4, 1], [5, 4]]) == [0, 0, 0, 0]', 'assert minimumCost(3, [[0, 2, 12]], [[2, 0], [2, 1], [1, 2], [0, 2], [2, 0], [1, 2]]) == [12, -1, -1, 12, 12, -1]', 'assert minimumCost(5, [[0, 3, 2], [3, 2, 5], [4, 3, 4], [4, 2, 3], [2, 1, 5], [1, 4, 7], [4, 2, 4], [3, 0, 5], [0, 3, 4]], [[0, 1], [1, 4], [0, 2], [1, 0], [3, 4], [2, 3], [3, 4], [3, 2], [4, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(10, [[6, 0, 0], [8, 5, 10], [3, 1, 13], [7, 9, 6], [2, 3, 6], [0, 6, 5], [5, 4, 9], [2, 4, 11], [2, 5, 3], [3, 4, 4]], [[5, 8], [4, 8], [2, 5], [7, 9], [6, 1], [8, 6], [5, 4], [3, 2], [0, 3], [1, 4]]) == [0, 0, 0, 6, -1, -1, 0, 0, -1, 0]', 'assert minimumCost(10, [[4, 5, 10], [7, 9, 15], [8, 3, 15], [7, 0, 4], [8, 3, 8], [9, 2, 5]], [[9, 1], [6, 0], [6, 3], [1, 5], [9, 2], [8, 9], [5, 4]]) == [-1, -1, -1, -1, 4, -1, 10]', 'assert minimumCost(9, [[7, 8, 7], [2, 8, 2], [6, 1, 10], [4, 7, 1]], [[6, 2], [2, 1], [6, 3], [2, 4], [5, 6], [1, 3], [5, 8]]) == [-1, -1, -1, 0, -1, -1, -1]', 'assert minimumCost(8, [[4, 6, 7], [7, 5, 4], [1, 4, 6]], [[6, 5], [0, 2]]) == [-1, -1]', 'assert minimumCost(7, [[0, 5, 0]], [[5, 4], [4, 5], [1, 2], [3, 1]]) == [-1, -1, -1, -1]', 'assert minimumCost(9, [[6, 7, 0], [1, 7, 1], [5, 6, 7]], [[4, 7], [7, 2], [4, 2], [2, 6], [6, 7], [7, 8], [6, 4], [3, 8], [7, 3], [1, 2]]) == [-1, -1, -1, -1, 0, -1, -1, -1, -1, -1]', 'assert minimumCost(5, [[2, 4, 3], [1, 4, 10], [3, 4, 15], [1, 4, 14], [4, 0, 0]], [[2, 1], [2, 0], [4, 3], [1, 3], [1, 3], [4, 2], [2, 3], [3, 2], [3, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[0, 7, 9], [2, 5, 10], [3, 4, 3], [1, 8, 9], [7, 5, 5], [6, 7, 3], [6, 4, 1], [5, 0, 4], [3, 8, 2], [6, 8, 4]], [[6, 2]]) == [0]', 'assert minimumCost(5, [[1, 3, 1], [3, 2, 0], [4, 3, 1]], [[3, 2], [3, 2], [4, 3], [1, 4], [2, 0], [2, 4], [0, 1], [0, 3]]) == [0, 0, 0, 0, -1, 0, -1, -1]', 'assert minimumCost(10, [[7, 4, 1], [7, 4, 0], [2, 0, 0], [0, 1, 1], [7, 4, 0], [2, 9, 1], [2, 1, 1]], [[0, 8], [6, 5], [3, 5], [6, 8], [6, 1], [3, 2], [3, 4], [9, 3]]) == [-1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(4, [[3, 0, 3], [3, 1, 2], [2, 0, 2]], [[0, 3], [0, 1], [0, 3], [2, 1], [3, 2], [0, 1], [2, 1], [2, 1], [0, 1], [0, 1]]) == [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]', 'assert minimumCost(7, [[3, 5, 12]], [[5, 1], [3, 6], [2, 3], [4, 5], [1, 5]]) == [-1, -1, -1, -1, -1]', 'assert minimumCost(5, [[2, 1, 3], [4, 0, 0], [4, 3, 4]], [[3, 1], [3, 2]]) == [-1, -1]', 'assert minimumCost(8, [[1, 5, 3], [4, 5, 4]], [[6, 3], [6, 3], [1, 7], [2, 3], [0, 4], [6, 1]]) == [-1, -1, -1, -1, -1, -1]', 'assert minimumCost(4, [[1, 0, 0], [2, 3, 1]], [[3, 2]]) == [1]', 'assert minimumCost(3, [[0, 1, 6], [1, 2, 0], [2, 1, 1], [2, 1, 7], [1, 2, 5], [0, 2, 0], [2, 0, 8], [1, 2, 8]], [[2, 1], [2, 0], [2, 1], [0, 2], [0, 2], [1, 2]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[5, 4, 4], [3, 1, 13], [4, 5, 1], [3, 0, 1], [0, 3, 12], [3, 1, 1], [4, 1, 10], [0, 3, 14], [2, 1, 8]], [[4, 1], [4, 5], [2, 0]]) == [0, 0, 0]', 'assert minimumCost(6, [[1, 2, 0], [0, 3, 1], [0, 5, 1], [1, 4, 0], [0, 5, 0], [4, 0, 0], [0, 2, 1], [5, 3, 1], [5, 4, 0]], [[2, 3], [4, 1], [0, 2], [5, 1], [2, 3], [4, 0], [3, 0], [2, 5], [1, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[2, 5, 7], [0, 4, 14], [1, 5, 0], [0, 1, 7], [4, 5, 10]], [[4, 5], [4, 1]]) == [0, 0]', 'assert minimumCost(5, [[3, 2, 8], [2, 0, 5], [4, 0, 4]], [[4, 3], [0, 2], [4, 3]]) == [0, 0, 0]', 'assert minimumCost(10, [[9, 4, 3], [7, 4, 13], [3, 6, 11], [0, 5, 0], [0, 4, 8], [8, 6, 6], [2, 0, 1], [6, 7, 10], [3, 4, 9]], [[4, 1], [7, 2], [3, 8], [4, 0], [9, 2], [5, 2], [1, 6], [0, 1], [6, 3]]) == [-1, 0, 0, 0, 0, 0, -1, -1, 0]', 'assert minimumCost(10, [[6, 2, 7], [6, 2, 11], [8, 9, 11], [0, 7, 15], [0, 7, 2], [9, 4, 10], [3, 6, 8]], [[4, 7], [0, 9], [3, 1], [9, 8], [5, 8], [3, 1]]) == [-1, -1, -1, 10, -1, -1]', 'assert minimumCost(7, [[2, 6, 0], [1, 6, 6], [6, 1, 4], [4, 1, 3], [5, 6, 3]], [[3, 2], [4, 6], [0, 6], [4, 2], [1, 3], [3, 5], [2, 1], [3, 0]]) == [-1, 0, -1, 0, -1, -1, 0, -1]', 'assert minimumCost(3, [[2, 0, 3], [1, 2, 0], [0, 1, 3], [2, 1, 1], [1, 2, 5], [1, 0, 5], [0, 1, 0], [0, 2, 2]], [[2, 0], [2, 1], [2, 1], [2, 1], [1, 2], [0, 1]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[6, 2, 1], [7, 8, 1], [8, 2, 3], [3, 5, 4]], [[4, 3], [5, 6]]) == [-1, -1]', 'assert minimumCost(5, [[2, 3, 4], [0, 3, 3], [0, 3, 1], [4, 3, 2], [3, 1, 0], [2, 1, 1], [1, 3, 2], [4, 0, 0], [1, 0, 2], [0, 4, 1]], [[1, 0], [4, 2], [4, 3], [4, 1], [4, 2], [3, 2]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[2, 0, 8], [1, 2, 3], [2, 1, 6], [1, 2, 6], [1, 2, 5], [1, 0, 7], [0, 2, 10], [2, 0, 6], [1, 2, 7]], [[1, 2], [0, 1], [1, 0], [0, 1], [2, 1], [2, 0], [0, 2], [2, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[6, 0, 2]], [[1, 4], [1, 2], [6, 1], [0, 6], [7, 2], [3, 0], [5, 2], [5, 1], [3, 4]]) == [-1, -1, -1, 2, -1, -1, -1, -1, -1]', 'assert minimumCost(7, [[1, 4, 4], [2, 5, 2], [0, 4, 0], [5, 1, 1]], [[4, 2], [5, 6], [2, 6], [4, 5]]) == [0, -1, -1, 0]', 'assert minimumCost(7, [[0, 2, 0], [6, 0, 0], [0, 4, 1], [0, 5, 0], [3, 4, 0], [0, 4, 1], [1, 4, 0], [2, 6, 1], [5, 0, 0], [2, 6, 0]], [[5, 6]]) == [0]', 'assert minimumCost(4, [[2, 1, 8], [1, 2, 2], [2, 3, 3]], [[1, 2], [0, 1], [3, 0], [3, 1], [1, 0], [1, 0], [0, 2], [3, 1], [0, 1]]) == [0, -1, -1, 0, -1, -1, -1, 0, -1]', 'assert minimumCost(8, [[7, 5, 6], [2, 0, 5], [2, 5, 8], [7, 2, 6], [3, 5, 6], [5, 2, 11], [6, 4, 0]], [[5, 7], [2, 3], [5, 4], [4, 2], [5, 2], [6, 5], [3, 4], [3, 7]]) == [0, 0, -1, -1, 0, -1, -1, 0]', 'assert minimumCost(5, [[3, 4, 1], [0, 1, 0], [4, 1, 1], [2, 1, 4], [1, 2, 1]], [[0, 3], [1, 4], [2, 1], [0, 2], [4, 1], [4, 3], [3, 2], [1, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[2, 7, 2], [8, 1, 1], [2, 0, 6], [7, 8, 2], [2, 1, 3], [0, 5, 5], [2, 0, 3], [3, 6, 2], [4, 7, 0], [5, 4, 1]], [[0, 6], [0, 3], [5, 2], [3, 1], [2, 0]]) == [-1, -1, 0, -1, 0]', 'assert minimumCost(5, [[4, 3, 2], [4, 3, 7], [4, 2, 3], [2, 4, 7], [1, 3, 4], [2, 3, 3], [0, 2, 1], [2, 0, 4]], [[1, 4], [2, 1], [1, 2]]) == [0, 0, 0]', 'assert minimumCost(10, [[7, 0, 5], [7, 2, 1]], [[5, 7], [9, 4], [7, 9], [5, 7], [1, 0]]) == [-1, -1, -1, -1, -1]', 'assert minimumCost(6, [[4, 2, 5], [1, 0, 8], [4, 5, 5]], [[4, 3], [5, 0], [5, 3], [0, 1], [0, 2], [4, 5], [0, 2], [4, 2]]) == [-1, -1, -1, 8, -1, 5, -1, 5]', 'assert minimumCost(4, [[0, 2, 1], [1, 0, 1], [3, 0, 0], [1, 0, 1], [2, 0, 0]], [[0, 3], [2, 1], [2, 0], [3, 1], [0, 1], [1, 3], [1, 0], [3, 1], [1, 2], [1, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[2, 0, 4]], [[3, 2], [2, 1], [0, 3]]) == [-1, -1, -1]', 'assert minimumCost(7, [[2, 3, 5], [6, 2, 8], [4, 0, 9]], [[1, 3], [1, 0], [0, 4], [6, 3], [4, 5], [0, 2]]) == [-1, -1, 9, 0, -1, -1]', 'assert minimumCost(10, [[0, 7, 2], [5, 3, 0]], [[0, 8], [2, 5], [2, 9], [2, 1], [7, 8], [3, 4], [6, 3], [3, 8], [2, 4], [0, 7]]) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, 2]', 'assert minimumCost(4, [[2, 3, 8], [3, 1, 8], [0, 1, 3]], [[1, 2]]) == [0]', 'assert minimumCost(3, [[2, 1, 6], [0, 1, 2], [0, 1, 2], [1, 0, 7], [0, 2, 7], [1, 2, 2]], [[1, 0], [2, 1], [2, 0]]) == [2, 2, 2]', 'assert minimumCost(7, [[2, 6, 1], [2, 6, 4], [2, 0, 0], [6, 2, 7], [4, 0, 1], [4, 2, 3]], [[4, 1], [6, 4], [4, 5], [0, 4], [6, 1], [5, 3]]) == [-1, 0, -1, 0, -1, -1]', 'assert minimumCost(6, [[0, 4, 4]], [[0, 4], [4, 3], [5, 2], [3, 5], [0, 4], [2, 3]]) == [4, -1, -1, -1, 4, -1]', 'assert minimumCost(4, [[0, 2, 6], [0, 1, 4], [0, 3, 6], [1, 3, 2], [1, 0, 3], [2, 0, 6], [1, 0, 12], [3, 1, 1], [0, 3, 4]], [[0, 1], [3, 2], [3, 2], [0, 1], [0, 1], [3, 2], [3, 0], [0, 1], [2, 0], [3, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[6, 2, 4]], [[6, 3], [1, 5], [1, 4], [7, 6], [2, 7], [4, 7], [1, 6], [2, 6]]) == [-1, -1, -1, -1, -1, -1, -1, 4]', 'assert minimumCost(9, [[7, 2, 0], [0, 2, 1], [4, 1, 0], [3, 0, 1], [4, 7, 1], [5, 3, 0]], [[5, 3], [0, 3], [6, 5], [3, 4], [7, 4], [6, 5], [1, 7], [6, 8]]) == [0, 0, -1, 0, 0, -1, 0, -1]', 'assert minimumCost(9, [[0, 5, 8], [8, 5, 8], [1, 4, 0], [3, 5, 5], [4, 0, 6], [3, 8, 5], [6, 3, 1], [2, 7, 0], [7, 6, 2]], [[5, 8], [4, 0], [1, 7]]) == [0, 0, 0]', 'assert minimumCost(5, [[3, 4, 0], [0, 2, 1], [4, 3, 0]], [[4, 2], [2, 4], [3, 4], [0, 2], [0, 2], [3, 0], [4, 1], [3, 4], [1, 3]]) == [-1, -1, 0, 1, 1, -1, -1, 0, -1]', 'assert minimumCost(9, [[3, 1, 7], [2, 7, 9], [7, 4, 8], [7, 1, 7], [1, 7, 9], [3, 8, 2], [1, 3, 7], [5, 1, 5], [6, 7, 7]], [[1, 0], [3, 4], [5, 0], [1, 6], [6, 5], [4, 7]]) == [-1, 0, -1, 0, 0, 0]', 'assert minimumCost(4, [[3, 0, 9], [2, 1, 8]], [[1, 2], [0, 2], [1, 0], [1, 3], [3, 0], [1, 2], [2, 3]]) == [8, -1, -1, -1, 9, 8, -1]', 'assert minimumCost(10, [[5, 8, 0], [4, 2, 0], [3, 7, 4]], [[6, 8], [3, 1], [8, 3], [5, 2], [7, 6], [8, 0], [6, 3]]) == [-1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(7, [[1, 4, 6], [4, 2, 2], [3, 2, 8], [4, 1, 7]], [[1, 2], [4, 2], [6, 2], [6, 0], [5, 3], [6, 2], [0, 5], [4, 2], [4, 0], [2, 0]]) == [0, 0, -1, -1, -1, -1, -1, 0, -1, -1]', 'assert minimumCost(5, [[4, 1, 11], [0, 2, 11], [0, 3, 9], [0, 4, 0]], [[0, 2], [0, 3]]) == [0, 0]', 'assert minimumCost(4, [[0, 3, 0]], [[2, 1], [2, 1], [0, 3], [2, 3], [3, 2], [2, 1], [3, 0], [3, 0], [2, 0]]) == [-1, -1, 0, -1, -1, -1, 0, 0, -1]', 'assert minimumCost(7, [[2, 4, 4], [1, 3, 2], [1, 3, 9], [5, 6, 8], [0, 3, 1], [1, 6, 11], [1, 5, 2], [5, 1, 8], [4, 0, 7], [3, 5, 0]], [[2, 5], [5, 0], [5, 6], [1, 3], [5, 2]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(6, [[1, 0, 6], [4, 3, 1], [0, 4, 6], [2, 4, 2], [1, 0, 4], [0, 2, 2], [3, 1, 5], [3, 4, 1], [4, 2, 0], [4, 3, 1]], [[1, 0], [5, 0], [4, 5], [5, 4], [5, 0]]) == [0, -1, -1, -1, -1]', 'assert minimumCost(3, [[1, 0, 10], [2, 1, 9], [1, 0, 2], [2, 1, 11], [2, 0, 1], [0, 1, 8], [0, 2, 7], [0, 1, 10]], [[1, 0], [0, 1], [2, 1], [0, 1], [0, 2], [1, 0], [0, 1], [2, 1], [0, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[0, 3, 2], [4, 2, 4], [3, 1, 3], [4, 5, 1], [3, 5, 4], [5, 0, 5], [5, 1, 1], [0, 4, 5], [3, 0, 4], [1, 4, 5]], [[2, 0], [1, 2]]) == [0, 0]', 'assert minimumCost(8, [[4, 0, 1], [6, 0, 0], [0, 1, 2], [5, 6, 4], [3, 7, 3], [5, 7, 0], [4, 0, 3], [7, 4, 2]], [[7, 5], [3, 7], [7, 1], [6, 1], [7, 6]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(5, [[1, 0, 1], [3, 1, 2], [1, 0, 3], [0, 4, 1], [4, 1, 1], [2, 0, 2], [0, 1, 2], [0, 1, 3]], [[1, 3], [0, 2], [3, 0]]) == [0, 0, 0]', 'assert minimumCost(10, [[4, 0, 3], [2, 0, 0], [1, 5, 4], [8, 4, 0], [7, 6, 3], [0, 5, 0]], [[0, 8], [3, 6], [9, 6], [0, 1], [0, 5], [9, 8], [0, 8], [8, 1]]) == [0, -1, -1, 0, 0, -1, 0, 0]', 'assert minimumCost(7, [[4, 3, 3]], [[4, 2], [6, 4], [2, 3], [3, 5], [3, 6], [0, 6], [4, 6], [0, 3], [2, 1]]) == [-1, -1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(6, [[5, 3, 0], [0, 1, 1], [3, 4, 4], [2, 4, 3], [3, 5, 4], [4, 1, 1], [2, 5, 4], [5, 0, 4], [1, 3, 2]], [[1, 4], [0, 1], [1, 0], [5, 4]]) == [0, 0, 0, 0]', 'assert minimumCost(7, [[1, 5, 0], [5, 6, 2], [4, 6, 2], [3, 2, 1], [5, 1, 4], [1, 4, 2]], [[6, 1], [2, 4], [5, 4], [6, 1], [1, 3], [2, 4], [2, 6], [3, 0], [2, 5], [1, 6]]) == [0, -1, 0, 0, -1, -1, -1, -1, -1, 0]', 'assert minimumCost(3, [[1, 2, 1], [0, 2, 3], [0, 1, 0], [0, 1, 0], [2, 1, 2], [0, 1, 4]], [[2, 1], [1, 0], [0, 1], [1, 2], [1, 0], [2, 1], [0, 2]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[5, 0, 6], [1, 5, 6], [0, 2, 13]], [[5, 4], [4, 0], [5, 3], [1, 0], [7, 4], [2, 0], [2, 7], [2, 7], [2, 0], [6, 1]]) == [-1, -1, -1, 4, -1, 4, -1, -1, 4, -1]', 'assert minimumCost(7, [[0, 1, 10], [4, 1, 12], [2, 0, 9]], [[2, 4], [1, 6], [0, 5]]) == [8, -1, -1]', 'assert minimumCost(6, [[5, 0, 10], [3, 0, 2], [2, 1, 9]], [[3, 4], [1, 4], [5, 4], [5, 2], [2, 5], [5, 0], [1, 4]]) == [-1, -1, -1, -1, -1, 2, -1]', 'assert minimumCost(7, [[2, 3, 1], [0, 3, 0], [1, 3, 2], [6, 5, 0], [4, 5, 1], [5, 3, 6], [6, 1, 8], [0, 6, 9], [2, 4, 3]], [[6, 1], [4, 1], [1, 2], [1, 3], [0, 1], [6, 3], [0, 2], [0, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[3, 1, 3], [1, 0, 1], [0, 2, 1], [1, 3, 1], [1, 2, 4], [0, 1, 0], [1, 3, 3], [2, 1, 4]], [[0, 1]]) == [0]', 'assert minimumCost(5, [[4, 3, 7], [0, 3, 7], [0, 2, 8], [0, 1, 1], [0, 1, 5], [1, 3, 7], [1, 3, 9], [3, 4, 2]], [[1, 2], [3, 0], [1, 3], [4, 1], [2, 3], [2, 0], [2, 0], [2, 1]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[2, 3, 0], [1, 0, 9], [2, 1, 5], [0, 1, 7], [3, 2, 8], [0, 3, 4]], [[0, 3], [2, 1], [0, 1], [3, 1], [1, 0], [2, 3]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[4, 1, 9], [3, 0, 7], [0, 2, 5], [4, 0, 11], [0, 3, 10], [1, 0, 1]], [[1, 5]]) == [-1]', 'assert minimumCost(8, [[6, 4, 1], [3, 0, 0], [2, 5, 1], [6, 1, 1], [2, 7, 0], [0, 5, 0], [4, 6, 3], [7, 6, 3], [4, 7, 2], [4, 6, 3]], [[1, 0], [4, 3], [5, 1], [6, 1]]) == [0, 0, 0, 0]', 'assert minimumCost(8, [[0, 5, 0], [7, 1, 4]], [[5, 7], [7, 4]]) == [-1, -1]', 'assert minimumCost(10, [[2, 9, 4], [0, 5, 3]], [[5, 0], [5, 7]]) == [3, -1]', 'assert minimumCost(8, [[0, 1, 3], [4, 3, 5], [3, 6, 1]], [[2, 0], [5, 7], [4, 7], [5, 1], [1, 2], [1, 5], [1, 6], [6, 4], [3, 5], [2, 4]]) == [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1]', 'assert minimumCost(3, [[0, 1, 6], [0, 2, 1], [0, 2, 5], [1, 2, 4], [2, 0, 1], [2, 0, 5], [2, 0, 1], [0, 2, 6], [0, 1, 5]], [[2, 1], [0, 2], [2, 1], [1, 0], [2, 1], [1, 0], [1, 2]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[6, 0, 7]], [[6, 8], [8, 1], [6, 2], [3, 1], [3, 4]]) == [-1, -1, -1, -1, -1]', 'assert minimumCost(7, [[4, 1, 4], [4, 2, 0], [0, 1, 6], [3, 5, 0], [2, 1, 7], [6, 0, 4]], [[3, 4], [5, 2], [5, 6], [5, 0], [5, 6], [3, 0], [2, 5], [4, 1]]) == [-1, -1, -1, -1, -1, -1, -1, 0]', 'assert minimumCost(9, [[3, 2, 1], [0, 6, 1], [1, 0, 1], [2, 1, 1], [2, 8, 1]], [[7, 4], [5, 8], [3, 8], [8, 7], [6, 2], [1, 6], [8, 3], [3, 2]]) == [-1, -1, 1, -1, 1, 1, 1, 1]', 'assert minimumCost(3, [[0, 2, 3], [1, 0, 4], [1, 0, 10], [2, 0, 2], [1, 0, 5], [0, 2, 10]], [[0, 1], [0, 1], [0, 2]]) == [0, 0, 0]', 'assert minimumCost(7, [[6, 2, 1], [0, 4, 2], [4, 5, 3], [4, 6, 0], [0, 1, 1], [5, 1, 3], [3, 0, 3], [5, 1, 1]], [[6, 0], [3, 2], [2, 5], [5, 1], [6, 4], [1, 0], [1, 6], [3, 0], [5, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(5, [[3, 4, 4], [2, 0, 8], [3, 1, 2], [4, 1, 0], [1, 4, 6], [2, 3, 1], [4, 1, 6], [0, 3, 2], [4, 2, 9]], [[1, 4], [0, 2], [2, 0], [0, 3], [3, 4], [4, 0], [4, 0], [0, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[1, 0, 2], [2, 3, 1], [0, 2, 0], [2, 3, 3], [0, 2, 4], [3, 2, 4]], [[1, 2], [2, 0], [0, 2], [1, 2], [0, 1], [1, 2], [2, 0], [0, 1]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[1, 3, 3], [1, 3, 2], [2, 5, 4], [4, 0, 1], [2, 0, 2]], [[6, 3], [4, 5], [0, 1], [1, 5]]) == [-1, 0, -1, -1]', 'assert minimumCost(8, [[5, 2, 1], [1, 7, 3], [2, 0, 3], [6, 4, 2], [7, 3, 4], [5, 7, 2], [4, 5, 2], [3, 1, 1], [4, 5, 0]], [[6, 7], [7, 6], [0, 6], [3, 7]]) == [0, 0, 0, 0]', 'assert minimumCost(4, [[1, 0, 8], [2, 0, 5], [0, 1, 7], [0, 2, 5], [1, 0, 7], [1, 0, 1], [0, 1, 2]], [[2, 3], [3, 1]]) == [-1, -1]', 'assert minimumCost(7, [[6, 3, 4], [6, 3, 1], [1, 3, 3], [4, 0, 4]], [[6, 0], [1, 2], [1, 3], [2, 6], [1, 3], [2, 3], [0, 1], [1, 3]]) == [-1, -1, 0, -1, 0, -1, -1, 0]', 'assert minimumCost(6, [[3, 1, 3], [1, 3, 3], [0, 3, 4], [0, 1, 1], [5, 3, 4], [2, 1, 5], [3, 1, 1], [5, 0, 1], [2, 0, 3], [2, 1, 5]], [[1, 2], [0, 3], [5, 1], [1, 5], [2, 5]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(10, [[2, 3, 9], [8, 1, 11], [9, 0, 2], [4, 7, 10], [8, 0, 14], [2, 6, 6], [2, 5, 7], [6, 7, 12]], [[6, 9], [0, 7], [0, 4], [9, 6]]) == [-1, -1, -1, -1]', 'assert minimumCost(7, [[4, 0, 2], [1, 5, 2], [6, 5, 1], [4, 0, 2], [3, 0, 1], [1, 4, 2], [0, 6, 2]], [[2, 0], [0, 5], [3, 2], [4, 5], [0, 4]]) == [-1, 0, -1, 0, 0]', 'assert minimumCost(5, [[2, 4, 3], [0, 1, 3], [1, 0, 1], [0, 2, 2], [4, 3, 1]], [[4, 3]]) == [0]', 'assert minimumCost(6, [[3, 2, 1], [1, 4, 1], [5, 2, 0]], [[5, 1], [0, 1], [4, 0], [0, 1], [2, 4], [5, 2], [5, 2], [4, 2], [0, 3]]) == [-1, -1, -1, -1, -1, 0, 0, -1, -1]', 'assert minimumCost(8, [[0, 5, 0], [3, 7, 2], [7, 6, 0], [2, 4, 1], [0, 4, 1], [7, 1, 0]], [[7, 1], [1, 5], [6, 1], [1, 3], [2, 0], [4, 7], [3, 2], [3, 2], [5, 2]]) == [0, -1, 0, 0, 0, -1, -1, -1, 0]', 'assert minimumCost(10, [[5, 7, 0], [8, 5, 1], [7, 0, 0], [9, 7, 2], [2, 4, 2], [9, 6, 2], [1, 0, 2], [2, 6, 2], [0, 7, 0]], [[1, 0], [1, 4], [0, 7], [9, 1], [4, 0]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(8, [[0, 3, 0], [2, 7, 0], [3, 7, 2], [2, 4, 0], [2, 1, 0], [6, 2, 1], [2, 6, 2]], [[7, 0], [2, 5], [5, 3], [6, 1], [2, 7], [1, 0], [3, 6]]) == [0, -1, -1, 0, 0, 0, 0]', 'assert minimumCost(5, [[3, 2, 5], [3, 4, 5], [1, 4, 5]], [[1, 3], [3, 4], [3, 1], [0, 3]]) == [5, 5, 5, -1]', 'assert minimumCost(3, [[1, 0, 14], [1, 2, 11]], [[2, 1], [2, 1], [1, 2], [0, 2], [0, 1], [0, 1], [0, 1], [0, 1], [2, 1]]) == [10, 10, 10, 10, 10, 10, 10, 10, 10]', 'assert minimumCost(7, [[5, 1, 7], [3, 6, 3], [3, 5, 9], [5, 6, 4], [1, 6, 0], [6, 3, 8], [0, 6, 7], [4, 0, 8]], [[5, 0], [1, 6], [1, 0], [6, 1], [0, 6], [0, 5]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[1, 3, 2], [4, 0, 1], [5, 1, 4], [5, 0, 1], [1, 6, 6], [3, 4, 6], [1, 4, 1], [6, 5, 2], [1, 3, 4]], [[5, 3], [1, 2], [4, 1], [6, 3]]) == [0, -1, 0, 0]', 'assert minimumCost(10, [[9, 7, 0], [8, 1, 3], [9, 2, 4], [6, 2, 3], [9, 6, 3], [0, 1, 13], [0, 3, 5], [7, 6, 2], [6, 7, 7]], [[1, 2], [3, 4], [3, 2], [3, 6]]) == [-1, -1, -1, -1]', 'assert minimumCost(5, [[0, 4, 1]], [[0, 3], [1, 2], [2, 3], [0, 3], [2, 3], [1, 2], [0, 3], [3, 0], [2, 4], [2, 3]]) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(5, [[3, 1, 1], [0, 1, 5], [3, 2, 1], [2, 0, 3], [3, 2, 5], [2, 3, 1], [3, 4, 1], [1, 0, 0]], [[1, 0], [4, 2], [0, 1], [3, 1], [1, 4]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(8, [[4, 6, 2], [7, 4, 3], [6, 7, 4], [7, 6, 2], [3, 2, 3], [5, 6, 0], [1, 5, 0], [2, 1, 0], [3, 5, 3], [1, 2, 1]], [[0, 1]]) == [-1]', 'assert minimumCost(5, [[1, 2, 9], [4, 2, 6]], [[1, 3]]) == [-1]', 'assert minimumCost(10, [[6, 1, 1], [8, 6, 0], [1, 6, 0], [2, 1, 0]], [[0, 6]]) == [-1]', 'assert minimumCost(8, [[3, 7, 1]], [[7, 3], [5, 4], [2, 1], [2, 6], [5, 2], [6, 2], [7, 1]]) == [1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(10, [[7, 5, 5], [0, 4, 12], [5, 4, 4], [2, 6, 3], [1, 9, 0], [4, 1, 12], [2, 5, 0]], [[0, 3], [9, 3], [9, 1], [8, 6]]) == [-1, -1, 0, -1]', 'assert minimumCost(10, [[1, 7, 2], [3, 4, 4], [0, 9, 1], [2, 9, 6], [3, 4, 2], [4, 8, 6], [5, 7, 5]], [[9, 7], [2, 7], [6, 8], [2, 1], [0, 4], [0, 9], [3, 5]]) == [-1, -1, -1, -1, -1, 0, -1]', 'assert minimumCost(7, [[0, 5, 10], [1, 0, 5], [1, 6, 9], [0, 5, 11]], [[4, 0], [4, 0], [2, 4], [0, 4], [5, 2], [6, 1], [5, 0]]) == [-1, -1, -1, -1, -1, 0, 0]', 'assert minimumCost(5, [[0, 3, 1], [4, 0, 4], [0, 3, 4], [1, 2, 1], [4, 1, 1], [2, 1, 3], [0, 3, 2], [4, 3, 4], [0, 1, 2]], [[0, 2], [1, 4], [2, 0], [0, 3], [2, 3], [4, 1], [2, 4], [3, 1], [0, 2], [0, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(10, [[4, 9, 3], [2, 0, 1], [2, 4, 2], [7, 9, 11], [0, 9, 5]], [[1, 6], [1, 9], [1, 4], [5, 4], [2, 8], [7, 6], [4, 9], [1, 9], [6, 1]]) == [-1, -1, -1, -1, -1, -1, 0, -1, -1]', 'assert minimumCost(6, [[3, 4, 0], [1, 3, 4], [3, 0, 2], [2, 1, 10], [3, 2, 3], [3, 1, 8], [5, 2, 8]], [[4, 2]]) == [0]', 'assert minimumCost(9, [[5, 4, 0], [4, 1, 1], [8, 0, 4], [0, 7, 4], [0, 5, 1], [4, 1, 1], [1, 4, 0], [2, 4, 2], [0, 4, 2], [1, 2, 1]], [[6, 1], [8, 5], [0, 4], [2, 5], [7, 5], [3, 1], [2, 0]]) == [-1, 0, 0, 0, 0, -1, 0]', 'assert minimumCost(3, [[2, 0, 2], [2, 1, 5], [0, 1, 3], [2, 0, 7], [2, 1, 1], [1, 2, 2], [1, 2, 0], [1, 2, 5]], [[2, 1], [2, 0], [0, 2], [1, 2], [1, 2], [2, 0], [2, 0], [0, 2], [1, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[6, 4, 6], [4, 2, 6], [2, 6, 5], [3, 6, 4], [5, 0, 7], [2, 0, 5], [1, 6, 1], [4, 5, 6], [3, 0, 5]], [[5, 0], [1, 5], [1, 2], [4, 0], [5, 6], [0, 1], [2, 1], [4, 6], [0, 3], [3, 4]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[6, 1, 7], [3, 5, 7], [4, 1, 8], [5, 6, 12], [3, 7, 8], [6, 1, 0], [4, 2, 0], [5, 4, 1]], [[5, 3], [6, 4], [6, 3]]) == [0, 0, 0]', 'assert minimumCost(10, [[2, 3, 1], [2, 1, 1], [8, 5, 0], [2, 0, 0], [5, 2, 4], [2, 8, 3]], [[9, 5], [3, 9], [6, 4], [0, 1], [3, 6], [4, 6], [2, 5], [8, 6], [7, 5]]) == [-1, -1, -1, 0, -1, -1, 0, -1, -1]', 'assert minimumCost(5, [[4, 3, 1], [1, 2, 5], [1, 2, 3], [1, 4, 3], [4, 0, 0]], [[4, 3], [2, 1], [1, 4], [2, 0], [1, 4], [4, 2], [1, 2], [4, 1], [0, 3], [1, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[3, 1, 1], [2, 3, 0], [2, 0, 1], [0, 3, 1], [0, 1, 1], [2, 3, 2]], [[3, 1]]) == [0]', 'assert minimumCost(10, [[6, 1, 3], [2, 4, 0], [2, 3, 3], [5, 1, 7]], [[4, 2]]) == [0]', 'assert minimumCost(8, [[2, 1, 3], [7, 5, 0], [2, 7, 8]], [[4, 2], [4, 7], [3, 2], [4, 3], [7, 2], [2, 6], [5, 3], [0, 3], [1, 5]]) == [-1, -1, -1, -1, 0, -1, -1, -1, 0]', 'assert minimumCost(9, [[0, 2, 1], [4, 0, 5], [8, 2, 1], [4, 6, 0], [7, 4, 7]], [[7, 3], [2, 1]]) == [-1, -1]', 'assert minimumCost(5, [[4, 0, 1], [4, 2, 1], [3, 4, 0], [3, 1, 2]], [[0, 1], [0, 4]]) == [0, 0]', 'assert minimumCost(6, [[4, 1, 5], [4, 2, 5], [3, 0, 1]], [[4, 0], [0, 4], [2, 1], [1, 5], [2, 5], [2, 4], [4, 0], [0, 2]]) == [-1, -1, 5, -1, -1, 5, -1, -1]', 'assert minimumCost(9, [[7, 3, 6], [3, 4, 4], [8, 1, 12], [5, 1, 11], [5, 2, 2], [0, 6, 1], [2, 1, 9], [1, 3, 13], [6, 4, 12], [1, 6, 5]], [[5, 1], [7, 8], [4, 6], [6, 3], [7, 2], [0, 4]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[6, 3, 4], [7, 0, 8], [5, 6, 1], [1, 5, 8], [0, 1, 5], [0, 6, 1], [2, 5, 8], [4, 5, 2], [7, 6, 1], [0, 1, 3]], [[3, 7], [4, 5], [0, 4], [6, 1], [7, 2], [3, 1], [6, 4], [0, 7], [6, 5]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[5, 2, 8], [8, 5, 12], [8, 3, 11], [4, 2, 5], [5, 4, 8], [3, 0, 9], [8, 1, 9], [4, 6, 1], [6, 8, 2], [5, 8, 1]], [[4, 2]]) == [0]', 'assert minimumCost(6, [[5, 2, 0], [1, 3, 4], [1, 0, 5], [0, 2, 1], [1, 5, 6], [5, 4, 2]], [[5, 4], [0, 2], [1, 0], [4, 3], [1, 5], [0, 2], [4, 3], [3, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[0, 1, 5], [0, 1, 2], [2, 3, 6], [0, 3, 6], [2, 0, 7], [0, 2, 0]], [[2, 3], [0, 2], [0, 3]]) == [0, 0, 0]', 'assert minimumCost(3, [[1, 0, 0], [2, 1, 1], [2, 0, 0], [1, 2, 0], [2, 1, 0], [2, 0, 2], [0, 2, 1], [2, 1, 0], [2, 0, 3]], [[2, 0], [0, 2], [1, 0], [1, 0], [0, 2], [0, 2], [1, 0], [2, 1], [2, 0], [0, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(10, [[6, 8, 9], [4, 7, 0], [2, 8, 7], [5, 7, 10], [3, 0, 9], [5, 9, 1]], [[5, 1], [4, 8], [8, 9]]) == [-1, -1, -1]', 'assert minimumCost(8, [[5, 3, 0], [5, 1, 0], [4, 0, 1]], [[3, 0], [4, 2], [3, 6], [5, 4], [5, 0], [1, 2]]) == [-1, -1, -1, -1, -1, -1]', 'assert minimumCost(6, [[2, 4, 6], [4, 0, 2], [2, 0, 3], [2, 1, 2], [1, 4, 5], [3, 1, 6], [0, 4, 2], [3, 1, 4], [2, 3, 0], [5, 1, 2]], [[1, 4], [1, 3], [1, 2]]) == [0, 0, 0]', 'assert minimumCost(4, [[2, 1, 1], [3, 2, 4], [2, 1, 3], [3, 1, 2], [1, 2, 6]], [[2, 1], [0, 2], [2, 1], [3, 0], [0, 3]]) == [0, -1, 0, -1, -1]', 'assert minimumCost(9, [[2, 3, 10], [7, 3, 7], [0, 7, 12], [0, 4, 2], [1, 5, 12], [5, 4, 4], [8, 7, 3], [5, 1, 10], [6, 7, 1], [1, 8, 2]], [[1, 7], [2, 5], [1, 6], [8, 4], [5, 8]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(3, [[1, 0, 3], [1, 0, 1], [0, 1, 3], [0, 2, 3], [2, 0, 1], [2, 0, 2], [2, 0, 0]], [[1, 0]]) == [0]', 'assert minimumCost(3, [[2, 1, 0], [0, 1, 0], [2, 1, 1], [1, 0, 0], [0, 2, 1], [2, 1, 1], [2, 0, 1], [2, 1, 1], [2, 0, 0], [0, 1, 0]], [[1, 0], [2, 0], [2, 0], [0, 1], [2, 1]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(7, [[5, 6, 3], [6, 0, 4], [0, 3, 1], [4, 1, 1], [3, 1, 1], [6, 1, 3], [3, 2, 4], [6, 5, 1], [6, 1, 1], [3, 1, 3]], [[4, 1], [2, 5], [6, 4], [0, 4], [6, 5], [6, 2], [0, 2], [3, 6], [1, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(10, [[1, 7, 2], [0, 4, 0], [7, 5, 3]], [[0, 3]]) == [-1]', 'assert minimumCost(5, [[2, 3, 0], [3, 1, 2], [2, 3, 6], [2, 4, 4]], [[4, 3], [0, 3], [0, 1], [4, 3], [2, 1], [3, 2], [2, 1], [0, 2], [1, 3], [1, 3]]) == [0, -1, -1, 0, 0, 0, 0, -1, 0, 0]', 'assert minimumCost(5, [[3, 0, 0], [2, 4, 0], [3, 0, 1], [4, 0, 1], [1, 3, 0], [3, 1, 1], [0, 3, 1], [0, 3, 1]], [[4, 0], [3, 0], [1, 2], [1, 3], [2, 0], [4, 1], [4, 2], [0, 2], [0, 3], [2, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[2, 0, 0], [1, 2, 2], [2, 0, 0]], [[0, 1]]) == [0]', 'assert minimumCost(10, [[9, 0, 1], [3, 4, 6], [1, 4, 3], [5, 0, 6], [0, 7, 5], [5, 9, 7], [0, 1, 5], [3, 4, 4]], [[2, 8], [0, 6], [9, 1], [1, 5], [5, 0], [1, 4], [3, 9], [0, 7], [3, 7], [6, 8]]) == [-1, -1, 0, 0, 0, 0, 0, 0, 0, -1]', 'assert minimumCost(6, [[4, 0, 1], [0, 3, 2]], [[4, 0], [2, 0]]) == [0, -1]', 'assert minimumCost(7, [[6, 0, 1], [0, 4, 1], [3, 1, 0], [2, 4, 1], [5, 3, 1], [3, 6, 1], [6, 3, 0]], [[1, 2], [6, 1], [1, 0], [2, 4], [1, 5], [5, 6], [3, 1], [6, 3], [1, 4]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[6, 3, 6], [2, 0, 11], [4, 1, 9]], [[7, 4], [0, 4], [4, 6], [0, 5], [6, 7]]) == [-1, -1, -1, -1, -1]', 'assert minimumCost(6, [[1, 2, 4], [1, 4, 7]], [[4, 1], [0, 4], [0, 2], [1, 4], [2, 1], [5, 3], [4, 1], [3, 1]]) == [4, -1, -1, 4, 4, -1, 4, -1]', 'assert minimumCost(10, [[2, 6, 5], [7, 5, 2], [2, 5, 7], [4, 0, 6], [1, 0, 3], [1, 3, 6], [1, 5, 0], [7, 2, 1]], [[6, 7], [8, 3], [3, 7], [4, 6], [5, 7], [7, 2], [9, 0], [9, 8], [3, 4], [5, 8]]) == [0, -1, 0, 0, 0, 0, -1, -1, 0, -1]', 'assert minimumCost(10, [[8, 5, 13], [3, 2, 0], [6, 3, 7], [0, 4, 12], [9, 6, 11], [9, 3, 2], [3, 1, 11], [3, 5, 6], [5, 2, 9], [5, 7, 11]], [[1, 3], [0, 2], [8, 2], [5, 6], [0, 5], [5, 0], [7, 1], [3, 4], [3, 7]]) == [0, -1, 0, 0, -1, -1, 0, -1, 0]', 'assert minimumCost(8, [[4, 0, 2], [3, 1, 2], [5, 1, 0], [4, 5, 1], [3, 4, 2], [7, 3, 0]], [[5, 7], [3, 0], [7, 2], [4, 7], [4, 3], [5, 2], [6, 4], [3, 1], [7, 2], [6, 5]]) == [0, 0, -1, 0, 0, -1, -1, 0, -1, -1]', 'assert minimumCost(9, [[5, 0, 6], [4, 1, 5], [4, 1, 4], [6, 2, 6], [0, 4, 7], [1, 5, 7], [7, 1, 6], [6, 4, 3], [7, 1, 7], [1, 6, 4]], [[0, 8], [5, 8], [6, 0], [8, 1], [2, 8], [6, 8], [0, 6], [7, 1], [5, 2]]) == [-1, -1, 0, -1, -1, -1, 0, 0, 0]', 'assert minimumCost(7, [[0, 1, 0], [2, 6, 1], [5, 6, 0], [5, 6, 1], [3, 2, 1]], [[3, 4], [0, 2], [3, 0], [3, 1]]) == [-1, -1, -1, -1]', 'assert minimumCost(9, [[6, 4, 2], [8, 0, 1], [4, 2, 4], [1, 8, 3], [4, 5, 2], [0, 4, 0], [5, 1, 3], [2, 1, 0], [7, 6, 0]], [[4, 3], [6, 2]]) == [-1, 0]', 'assert minimumCost(10, [[4, 3, 0], [0, 6, 0], [7, 6, 0], [6, 1, 0], [5, 1, 0], [6, 8, 0], [3, 5, 0], [6, 9, 1], [3, 4, 1]], [[0, 5]]) == [0]', 'assert minimumCost(9, [[7, 6, 2], [5, 1, 1], [1, 2, 2], [4, 8, 1], [8, 0, 0], [3, 4, 0], [6, 0, 1], [8, 3, 2], [8, 2, 0], [2, 7, 2]], [[6, 8], [1, 8], [0, 3], [8, 5], [0, 8], [7, 2], [7, 3], [8, 1], [0, 1], [5, 1]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[3, 1, 0], [1, 3, 1]], [[3, 1]]) == [0]', 'assert minimumCost(8, [[7, 4, 1], [2, 7, 0], [7, 2, 0], [4, 1, 0], [7, 4, 1], [7, 3, 0], [3, 6, 1], [2, 1, 1], [0, 6, 0], [6, 7, 1]], [[4, 0], [2, 1], [1, 4], [7, 4], [2, 7], [0, 6], [1, 0], [0, 2], [5, 7], [0, 7]]) == [0, 0, 0, 0, 0, 0, 0, 0, -1, 0]', 'assert minimumCost(9, [[0, 3, 10], [5, 4, 11], [1, 6, 10], [6, 5, 14], [4, 6, 14], [4, 7, 10], [7, 0, 5], [5, 1, 4], [4, 1, 7], [4, 7, 0]], [[7, 8], [6, 4], [1, 3], [7, 3], [7, 2], [1, 0]]) == [-1, 0, 0, 0, -1, 0]', 'assert minimumCost(9, [[6, 3, 0], [7, 4, 4]], [[2, 0], [0, 2], [3, 7], [3, 7], [4, 6], [2, 7], [4, 6]]) == [-1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(8, [[1, 2, 6], [0, 2, 7], [0, 1, 0], [1, 0, 7], [5, 7, 7], [5, 4, 3], [2, 0, 10], [3, 1, 1]], [[4, 6], [6, 3], [0, 7], [4, 7], [4, 1], [2, 4], [5, 7], [0, 2]]) == [-1, -1, -1, 3, -1, -1, 3, 0]', 'assert minimumCost(5, [[0, 1, 0], [1, 2, 0], [0, 4, 5], [4, 3, 7], [0, 3, 0], [0, 3, 8], [3, 1, 6], [2, 1, 6]], [[4, 1], [4, 3]]) == [0, 0]', 'assert minimumCost(4, [[0, 3, 3], [2, 1, 8], [2, 3, 5], [0, 3, 3]], [[3, 0], [0, 3], [2, 3], [1, 3], [1, 2], [0, 1], [3, 1], [3, 2], [0, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[0, 1, 4], [1, 2, 4], [5, 2, 1], [1, 4, 0], [4, 5, 0], [5, 1, 4], [3, 0, 1], [5, 0, 3], [1, 3, 0], [4, 3, 1]], [[1, 5], [3, 5], [4, 0], [0, 2], [5, 1], [0, 4], [3, 2], [0, 2], [2, 5], [3, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(10, [[9, 4, 11], [7, 0, 5], [1, 6, 13], [8, 0, 2], [7, 0, 13]], [[8, 2], [1, 3], [8, 4]]) == [-1, -1, -1]', 'assert minimumCost(7, [[5, 1, 1], [4, 6, 2], [0, 5, 2], [6, 1, 2], [1, 2, 1], [6, 3, 3], [3, 2, 0], [2, 6, 3], [0, 5, 0]], [[3, 2], [2, 3], [5, 3]]) == [0, 0, 0]', 'assert minimumCost(6, [[4, 3, 3], [0, 4, 0], [0, 4, 3], [5, 0, 4], [4, 1, 1]], [[1, 3], [0, 3], [3, 0], [2, 3], [5, 2], [0, 5], [4, 1], [4, 0], [4, 5], [1, 5]]) == [0, 0, 0, -1, -1, 0, 0, 0, 0, 0]', 'assert minimumCost(10, [[9, 5, 5], [8, 7, 1], [6, 7, 0], [3, 8, 2], [8, 9, 5], [2, 8, 2], [6, 3, 2]], [[3, 8], [1, 0], [6, 9]]) == [0, -1, 0]', 'assert minimumCost(4, [[1, 0, 2], [3, 0, 7], [1, 0, 2], [2, 1, 11], [2, 1, 13], [3, 1, 4]], [[2, 0], [2, 0]]) == [0, 0]', 'assert minimumCost(6, [[3, 2, 5], [1, 4, 0]], [[3, 0]]) == [-1]', 'assert minimumCost(6, [[2, 1, 3], [4, 0, 1], [5, 1, 7], [0, 2, 7], [5, 3, 4]], [[0, 5], [5, 0], [0, 2], [1, 4], [3, 2], [1, 5], [0, 3], [1, 5], [4, 1], [1, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[2, 5, 10], [1, 3, 7], [5, 3, 6], [4, 3, 1], [4, 5, 4], [5, 2, 8]], [[2, 1], [2, 1], [4, 3], [4, 5], [2, 0], [3, 1], [5, 0], [3, 4], [1, 0], [0, 3]]) == [0, 0, 0, 0, -1, 0, -1, 0, -1, -1]', 'assert minimumCost(7, [[5, 1, 2], [2, 3, 1], [0, 4, 2]], [[2, 4], [4, 5], [2, 6], [3, 4], [5, 2], [6, 5], [4, 6], [0, 4]]) == [-1, -1, -1, -1, -1, -1, -1, 2]', 'assert minimumCost(4, [[2, 0, 1], [1, 0, 4], [1, 0, 5], [2, 1, 5], [1, 0, 0], [3, 0, 4], [1, 3, 5], [3, 0, 5], [3, 0, 3], [1, 2, 6]], [[0, 1], [2, 1], [0, 2], [0, 1], [1, 0]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(4, [[0, 1, 10], [3, 0, 13], [2, 3, 7]], [[0, 2], [0, 3], [2, 0], [2, 1], [1, 0], [0, 2], [2, 0]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[4, 1, 12], [5, 0, 12], [0, 3, 7], [5, 0, 4], [2, 5, 8], [0, 2, 14], [4, 1, 0], [4, 0, 14], [1, 3, 11]], [[0, 1]]) == [0]', 'assert minimumCost(6, [[3, 0, 2], [0, 1, 0], [5, 0, 0], [0, 1, 5], [2, 0, 5], [5, 2, 7], [4, 0, 5], [5, 2, 0], [2, 5, 2], [4, 2, 6]], [[4, 3], [0, 4], [3, 2]]) == [0, 0, 0]', 'assert minimumCost(9, [[7, 0, 0], [7, 1, 1]], [[0, 4], [4, 2], [2, 8], [7, 4], [8, 1], [5, 2], [2, 8]]) == [-1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(4, [[1, 0, 0], [1, 0, 3], [0, 1, 3], [0, 1, 0], [2, 0, 5], [2, 3, 7], [3, 0, 0], [0, 3, 2], [2, 0, 5], [1, 3, 3]], [[2, 0], [2, 1], [0, 3], [0, 3], [3, 1], [2, 3], [2, 0]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[3, 4, 11]], [[1, 5], [2, 5], [5, 2], [4, 2]]) == [-1, -1, -1, -1]', 'assert minimumCost(9, [[0, 3, 0], [2, 0, 4], [8, 7, 1], [8, 2, 2], [1, 8, 0], [0, 5, 0], [6, 0, 3], [0, 6, 2], [8, 7, 5], [0, 7, 4]], [[8, 4], [1, 7]]) == [-1, 0]', 'assert minimumCost(8, [[3, 6, 2], [3, 1, 7], [2, 4, 3], [3, 1, 5], [3, 5, 1]], [[3, 1], [3, 6], [5, 6], [1, 4], [6, 0], [5, 0], [1, 5], [4, 3]]) == [0, 0, 0, -1, -1, -1, 0, -1]', 'assert minimumCost(8, [[6, 4, 8], [2, 0, 5], [2, 7, 8], [5, 6, 7], [5, 6, 10], [3, 5, 8]], [[6, 2], [5, 2], [5, 3], [3, 1]]) == [-1, -1, 0, -1]', 'assert minimumCost(3, [[1, 2, 0], [1, 0, 1], [0, 1, 1], [2, 1, 1], [1, 2, 0], [2, 0, 1], [0, 1, 1], [0, 2, 0]], [[1, 0], [2, 1], [0, 1], [2, 0], [2, 0], [1, 0], [0, 2], [0, 2], [2, 1]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[0, 1, 0], [2, 0, 0]], [[1, 2], [1, 2], [2, 0]]) == [0, 0, 0]', 'assert minimumCost(8, [[2, 4, 2], [5, 3, 4], [7, 2, 4], [3, 0, 3], [5, 6, 2], [5, 2, 4], [0, 6, 0]], [[5, 2], [6, 4], [7, 0], [6, 4], [4, 3], [0, 3], [2, 5], [1, 2], [4, 0], [2, 4]]) == [0, 0, 0, 0, 0, 0, 0, -1, 0, 0]', 'assert minimumCost(8, [[4, 6, 6], [7, 2, 3], [6, 4, 4], [6, 7, 2], [7, 5, 5], [1, 2, 1], [6, 7, 3], [0, 3, 1]], [[0, 5], [6, 4]]) == [-1, 0]', 'assert minimumCost(10, [[7, 1, 2], [4, 1, 1], [2, 4, 3]], [[5, 6], [1, 6]]) == [-1, -1]', 'assert minimumCost(7, [[5, 0, 5]], [[4, 5], [1, 6], [4, 6]]) == [-1, -1, -1]', 'assert minimumCost(3, [[2, 0, 3], [0, 1, 2], [1, 0, 1]], [[0, 2], [2, 1]]) == [0, 0]', 'assert minimumCost(5, [[2, 1, 14], [0, 4, 11], [3, 4, 3], [0, 2, 5], [2, 1, 1], [0, 2, 12], [1, 4, 8], [3, 1, 12], [3, 0, 0], [0, 1, 7]], [[0, 4], [1, 4], [0, 2], [4, 1], [1, 0], [0, 1], [4, 3], [4, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[1, 2, 1], [5, 4, 4], [1, 0, 4]], [[1, 4], [4, 1], [5, 2], [1, 4], [1, 2], [3, 2], [1, 5]]) == [-1, -1, -1, -1, 0, -1, -1]', 'assert minimumCost(7, [[1, 0, 1], [2, 5, 1], [3, 4, 0], [4, 0, 1], [0, 4, 0], [2, 5, 0], [5, 3, 1]], [[5, 6], [3, 2]]) == [-1, 0]', 'assert minimumCost(10, [[7, 4, 3], [8, 6, 3], [8, 9, 2], [9, 2, 2]], [[8, 5]]) == [-1]', 'assert minimumCost(8, [[1, 5, 1], [3, 1, 1], [5, 7, 3], [2, 7, 4]], [[6, 5], [0, 7], [2, 7], [3, 0], [1, 4], [0, 7], [5, 1], [3, 5], [4, 5]]) == [-1, -1, 0, -1, -1, -1, 0, 0, -1]', 'assert minimumCost(9, [[1, 4, 9], [3, 0, 2], [2, 7, 10], [3, 6, 6], [3, 0, 5], [4, 8, 12], [0, 6, 13], [2, 8, 4], [4, 0, 9]], [[3, 5], [0, 4], [5, 7], [6, 1]]) == [-1, 0, -1, 0]', 'assert minimumCost(10, [[5, 6, 5], [1, 6, 0], [9, 2, 5], [0, 7, 4], [5, 8, 6], [6, 8, 2], [4, 1, 4], [4, 1, 6], [1, 7, 6], [5, 3, 1]], [[2, 5], [6, 1], [6, 4]]) == [-1, 0, 0]', 'assert minimumCost(4, [[1, 2, 1]], [[1, 0], [0, 2], [0, 1], [0, 1], [1, 2]]) == [-1, -1, -1, -1, 1]', 'assert minimumCost(10, [[1, 8, 10], [0, 2, 9], [1, 6, 4], [0, 1, 5], [7, 5, 6], [5, 1, 2], [8, 7, 5], [6, 5, 8], [8, 5, 9]], [[8, 5], [4, 0]]) == [0, -1]', 'assert minimumCost(8, [[3, 2, 1], [0, 3, 0], [0, 4, 1], [1, 3, 1], [1, 0, 0], [3, 7, 1], [5, 6, 0], [1, 4, 1], [0, 7, 0]], [[1, 6], [7, 0], [5, 1], [2, 1], [6, 4], [7, 6], [6, 3], [1, 7], [0, 5], [3, 1]]) == [-1, 0, -1, 0, -1, -1, -1, 0, -1, 0]', 'assert minimumCost(8, [[2, 0, 3], [2, 1, 6], [4, 3, 6], [0, 3, 4], [5, 6, 4], [0, 5, 9], [2, 5, 8], [1, 7, 10]], [[2, 3], [7, 2], [0, 7], [7, 3], [2, 6], [0, 4], [0, 3], [1, 6]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[3, 0, 7], [0, 3, 5], [1, 2, 3], [2, 0, 0], [3, 0, 6]], [[1, 0]]) == [0]', 'assert minimumCost(6, [[0, 3, 4], [5, 2, 4]], [[5, 2], [4, 0], [5, 0], [3, 4], [0, 1], [0, 1], [1, 4], [4, 3], [1, 5]]) == [4, -1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(8, [[5, 4, 4], [0, 4, 6], [0, 7, 4], [4, 0, 3], [2, 0, 2], [3, 6, 6], [6, 7, 7], [4, 6, 1]], [[3, 4], [3, 0], [6, 2], [7, 3], [4, 6]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(9, [[1, 5, 9], [8, 5, 7], [7, 2, 0], [6, 7, 7], [2, 8, 6], [2, 7, 4], [5, 7, 5], [7, 0, 11], [3, 4, 6], [5, 8, 10]], [[4, 7], [7, 0], [2, 8], [1, 4]]) == [-1, 0, 0, -1]', 'assert minimumCost(8, [[0, 5, 3], [4, 6, 1], [7, 4, 3], [6, 7, 5], [7, 4, 5], [5, 0, 2], [1, 6, 5], [5, 6, 5], [1, 7, 2]], [[0, 5], [6, 5]]) == [0, 0]', 'assert minimumCost(6, [[1, 3, 8], [3, 0, 9], [2, 1, 0], [3, 0, 5], [0, 3, 2]], [[2, 0], [3, 0], [2, 1], [0, 1]]) == [0, 0, 0, 0]', 'assert minimumCost(3, [[0, 1, 6], [2, 0, 6], [0, 2, 0], [0, 1, 1], [0, 2, 2]], [[2, 1], [2, 1], [2, 1], [0, 1], [2, 0]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(9, [[5, 0, 0]], [[1, 8], [8, 7], [1, 0], [6, 3], [1, 5], [5, 0], [6, 5], [8, 4], [0, 2]]) == [-1, -1, -1, -1, -1, 0, -1, -1, -1]', 'assert minimumCost(8, [[3, 4, 6], [1, 3, 11], [5, 4, 7], [6, 0, 7], [7, 3, 13], [2, 1, 4], [2, 5, 14], [3, 1, 8], [6, 2, 6], [0, 7, 13]], [[4, 0], [3, 2]]) == [0, 0]', 'assert minimumCost(5, [[0, 4, 3], [2, 0, 1], [1, 2, 3], [4, 3, 2], [1, 0, 4], [2, 0, 0], [4, 2, 3], [3, 4, 3], [3, 1, 0]], [[0, 4], [4, 1], [0, 1], [1, 0]]) == [0, 0, 0, 0]', 'assert minimumCost(3, [[0, 2, 3], [1, 2, 3], [1, 0, 0], [0, 1, 6]], [[1, 2], [2, 0], [2, 0], [1, 2], [0, 2]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(9, [[7, 0, 1], [8, 2, 0]], [[0, 6], [3, 8], [2, 1], [1, 4]]) == [-1, -1, -1, -1]', 'assert minimumCost(6, [[0, 1, 6], [5, 0, 5], [4, 1, 0], [2, 1, 1], [5, 4, 3], [1, 4, 1], [1, 5, 4], [5, 1, 3], [3, 2, 1]], [[5, 3], [1, 4]]) == [0, 0]', 'assert minimumCost(9, [[5, 8, 1], [0, 6, 6], [5, 3, 7], [1, 8, 2], [7, 4, 3], [1, 8, 7], [2, 3, 0], [8, 2, 0], [8, 5, 2], [6, 5, 4]], [[4, 0], [7, 8], [0, 3], [8, 2], [2, 7], [5, 1], [1, 2]]) == [-1, -1, 0, 0, -1, 0, 0]', 'assert minimumCost(10, [[6, 2, 3], [0, 7, 4], [9, 5, 1], [9, 0, 10], [1, 4, 10], [3, 4, 6], [0, 8, 8], [9, 4, 0]], [[5, 6], [6, 9], [4, 9], [6, 7], [0, 6], [9, 5], [8, 9], [8, 5]]) == [-1, -1, 0, -1, -1, 0, 0, 0]', 'assert minimumCost(8, [[3, 0, 0], [4, 7, 1], [7, 5, 3], [5, 0, 0], [2, 4, 1], [6, 5, 0], [3, 5, 0], [0, 3, 2], [1, 4, 2]], [[5, 6], [1, 6], [1, 3], [0, 6], [6, 4], [2, 5], [5, 6]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[8, 6, 0], [2, 0, 8], [3, 8, 0], [3, 7, 5], [3, 1, 6]], [[7, 2], [0, 3], [2, 5], [2, 6], [8, 7], [0, 7]]) == [-1, -1, -1, -1, 0, -1]', 'assert minimumCost(10, [[4, 3, 2], [6, 7, 2], [0, 8, 1], [6, 7, 2]], [[0, 5], [9, 0]]) == [-1, -1]', 'assert minimumCost(3, [[2, 1, 2], [1, 0, 2], [2, 0, 0]], [[2, 1], [2, 0], [0, 1], [2, 0]]) == [0, 0, 0, 0]', 'assert minimumCost(5, [[2, 3, 3], [1, 3, 5], [1, 2, 8], [4, 3, 0], [4, 3, 4], [0, 4, 0], [3, 1, 1]], [[2, 3], [0, 3], [4, 0], [2, 3], [3, 4]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(10, [[5, 4, 1], [8, 5, 0], [0, 8, 2]], [[3, 2], [9, 1], [9, 4], [7, 2], [4, 0], [3, 2], [0, 7], [2, 4], [6, 4], [2, 4]]) == [-1, -1, -1, -1, 0, -1, -1, -1, -1, -1]', 'assert minimumCost(4, [[2, 1, 0], [0, 2, 1], [2, 3, 2], [1, 2, 0], [0, 3, 0], [0, 2, 2]], [[2, 3], [0, 2], [1, 3], [3, 0], [0, 3], [3, 2], [2, 3]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[3, 2, 3], [5, 4, 9], [1, 2, 13], [5, 4, 9], [1, 2, 5], [5, 1, 3], [0, 1, 3]], [[5, 0], [3, 4], [2, 3], [2, 5], [4, 0]]) == [1, 1, 1, 1, 1]', 'assert minimumCost(4, [[2, 1, 5], [0, 3, 15], [3, 2, 7]], [[0, 3], [3, 0], [2, 3]]) == [5, 5, 5]', 'assert minimumCost(4, [[0, 1, 0]], [[3, 2], [3, 0], [3, 0], [0, 2], [2, 3], [0, 1], [2, 0]]) == [-1, -1, -1, -1, -1, 0, -1]', 'assert minimumCost(3, [[1, 0, 1], [0, 2, 0], [2, 1, 3], [2, 0, 3], [0, 2, 1], [2, 1, 4], [1, 2, 0]], [[0, 1], [0, 2], [1, 0]]) == [0, 0, 0]', 'assert minimumCost(8, [[4, 2, 3], [0, 4, 4], [2, 3, 0], [0, 5, 0], [7, 3, 1]], [[2, 7]]) == [0]', 'assert minimumCost(6, [[3, 1, 8], [0, 4, 3], [1, 5, 1], [2, 0, 3], [4, 1, 7], [5, 4, 4], [5, 3, 6], [2, 4, 0], [1, 0, 0]], [[0, 5], [1, 2], [2, 0], [1, 5]]) == [0, 0, 0, 0]', 'assert minimumCost(6, [[5, 0, 5], [2, 4, 0], [0, 4, 6], [1, 0, 2]], [[2, 1], [5, 4]]) == [0, 0]', 'assert minimumCost(5, [[0, 3, 0], [2, 1, 9], [4, 1, 3], [4, 3, 9], [2, 3, 5], [4, 1, 9], [1, 0, 5], [0, 1, 5], [1, 4, 7]], [[3, 4], [4, 1], [0, 4], [4, 2], [0, 3], [3, 4]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[1, 6, 3], [6, 1, 7], [3, 5, 1], [1, 0, 0], [6, 1, 5], [1, 6, 2], [0, 2, 4], [0, 1, 1]], [[4, 1], [1, 2], [1, 6], [3, 6], [6, 7], [4, 1]]) == [-1, 0, 0, -1, -1, -1]', 'assert minimumCost(10, [[1, 6, 5], [7, 5, 9]], [[6, 0], [2, 8]]) == [-1, -1]', 'assert minimumCost(10, [[7, 8, 4], [6, 9, 1], [9, 8, 12], [0, 4, 11], [9, 7, 4], [0, 5, 1], [0, 6, 10], [2, 0, 5], [5, 7, 9]], [[4, 5], [1, 4], [3, 0], [3, 5], [6, 8], [5, 2], [8, 0]]) == [0, -1, -1, -1, 0, 0, 0]', 'assert minimumCost(8, [[7, 1, 3], [7, 0, 4], [6, 4, 5], [3, 2, 5], [7, 1, 7], [6, 5, 1], [3, 5, 9]], [[0, 5], [4, 0], [4, 2], [5, 4], [2, 3]]) == [-1, -1, 1, 1, 1]', 'assert minimumCost(6, [[0, 2, 10], [5, 2, 10], [5, 3, 3], [1, 2, 0], [1, 3, 1], [3, 1, 0], [3, 2, 0], [5, 1, 2], [1, 5, 9]], [[0, 5], [5, 3], [4, 0], [3, 0], [2, 1], [3, 0], [5, 1]]) == [0, 0, -1, 0, 0, 0, 0]', 'assert minimumCost(10, [[3, 1, 7], [8, 1, 3], [4, 9, 6], [8, 2, 6], [0, 8, 6], [5, 6, 1], [9, 2, 8], [1, 6, 2]], [[7, 8], [1, 6], [1, 8], [1, 8], [2, 1], [5, 2]]) == [-1, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[0, 1, 0], [2, 1, 1], [0, 2, 0], [2, 0, 0], [0, 1, 0], [2, 0, 0], [2, 0, 1], [2, 0, 0], [2, 0, 0], [1, 0, 0]], [[2, 0], [1, 2], [2, 0], [0, 2], [1, 0], [0, 1], [0, 1]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[2, 7, 3], [2, 1, 3], [6, 5, 3], [4, 5, 3], [5, 7, 2], [5, 0, 1], [7, 3, 0], [4, 6, 2], [2, 3, 2], [2, 6, 1]], [[3, 5], [5, 3], [5, 2]]) == [0, 0, 0]', 'assert minimumCost(10, [[7, 2, 6], [8, 3, 6], [6, 7, 2], [1, 7, 0], [0, 2, 1], [4, 7, 1]], [[0, 3], [3, 6], [5, 3], [0, 3]]) == [-1, -1, -1, -1]', 'assert minimumCost(6, [[4, 0, 3], [2, 5, 5], [5, 3, 9], [0, 5, 8], [2, 3, 8], [0, 2, 0], [4, 3, 5], [3, 5, 1], [5, 2, 2]], [[3, 0], [3, 4]]) == [0, 0]', 'assert minimumCost(9, [[6, 7, 3], [4, 0, 3]], [[7, 6], [7, 4], [5, 8], [0, 7], [4, 1], [3, 6], [1, 2], [0, 1]]) == [3, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(5, [[0, 3, 4], [2, 4, 7], [2, 0, 7], [2, 3, 4], [3, 2, 6], [1, 3, 2], [0, 3, 6], [3, 2, 8]], [[0, 1], [1, 4], [1, 2], [3, 2], [4, 0], [0, 1], [1, 4]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[0, 2, 4], [0, 1, 8], [1, 2, 0], [3, 2, 9], [1, 0, 6], [1, 3, 6], [3, 0, 2]], [[3, 0], [0, 1]]) == [0, 0]', 'assert minimumCost(10, [[6, 8, 7], [6, 3, 2], [3, 4, 2], [8, 7, 1], [3, 2, 9], [3, 8, 3], [1, 5, 7], [9, 1, 2], [5, 1, 3]], [[2, 5], [3, 9], [9, 8]]) == [-1, -1, -1]', 'assert minimumCost(9, [[1, 0, 8], [7, 4, 1], [6, 8, 6], [0, 5, 3]], [[3, 1], [8, 3], [0, 3], [3, 6], [2, 7], [4, 8], [5, 0]]) == [-1, -1, -1, -1, -1, -1, 0]', 'assert minimumCost(7, [[1, 0, 0], [2, 3, 9], [1, 2, 3], [4, 5, 8]], [[6, 1], [4, 2], [1, 4]]) == [-1, -1, -1]', 'assert minimumCost(10, [[0, 6, 7], [6, 5, 6], [3, 9, 6], [1, 0, 5], [7, 0, 1], [7, 6, 1]], [[3, 5], [8, 7], [6, 2], [4, 1]]) == [-1, -1, -1, -1]', 'assert minimumCost(8, [[0, 3, 0], [5, 4, 1]], [[1, 5], [3, 7], [2, 5]]) == [-1, -1, -1]', 'assert minimumCost(6, [[3, 5, 12]], [[0, 2], [5, 0], [1, 5]]) == [-1, -1, -1]', 'assert minimumCost(4, [[1, 0, 10], [0, 3, 2], [1, 2, 11]], [[0, 1], [0, 3], [3, 0], [1, 3], [2, 1]]) == [2, 2, 2, 2, 2]', 'assert minimumCost(6, [[3, 4, 0], [3, 4, 1]], [[2, 1], [3, 5], [2, 1], [3, 1], [1, 4], [3, 5]]) == [-1, -1, -1, -1, -1, -1]', 'assert minimumCost(8, [[2, 5, 0], [2, 3, 5], [5, 0, 2], [2, 4, 1], [4, 2, 0]], [[7, 1], [1, 7], [2, 4], [4, 6], [7, 3]]) == [-1, -1, 0, -1, -1]', 'assert minimumCost(8, [[2, 3, 13], [2, 4, 5], [2, 1, 5], [7, 3, 1], [2, 6, 8], [3, 5, 8], [0, 2, 2], [4, 7, 9], [0, 5, 3]], [[7, 4], [1, 2], [5, 6], [2, 6], [1, 2], [1, 5], [5, 2], [5, 3], [0, 4], [2, 7]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[0, 1, 0], [1, 0, 5], [2, 0, 3], [0, 1, 4]], [[2, 0], [1, 2], [0, 1], [1, 2], [2, 0], [0, 1], [2, 0]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[0, 4, 8], [4, 5, 10], [4, 0, 12], [3, 0, 4], [6, 1, 10], [5, 4, 9], [5, 0, 12], [6, 3, 2], [2, 0, 4], [2, 1, 9]], [[6, 4], [3, 4]]) == [0, 0]', 'assert minimumCost(4, [[0, 1, 4], [0, 1, 1], [1, 3, 3], [2, 0, 5], [1, 3, 3], [0, 2, 8], [2, 3, 3], [2, 1, 0], [1, 2, 3], [2, 0, 9]], [[3, 1], [3, 1], [2, 0], [1, 0], [3, 0], [2, 1], [1, 2]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[5, 2, 2], [3, 5, 2], [4, 3, 9], [4, 0, 8], [1, 0, 8], [6, 3, 2], [6, 4, 8], [2, 3, 0]], [[1, 2], [5, 1], [0, 1], [0, 4], [6, 3], [5, 0], [2, 4], [3, 0], [3, 4]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[4, 0, 6], [0, 4, 2], [1, 0, 8]], [[1, 5], [1, 4], [0, 5], [2, 1]]) == [-1, 0, -1, -1]', 'assert minimumCost(10, [[2, 8, 3], [0, 2, 2], [2, 3, 4], [8, 3, 1], [1, 3, 2], [5, 8, 4]], [[3, 0]]) == [0]', 'assert minimumCost(7, [[6, 4, 6], [1, 2, 6], [2, 4, 6], [4, 6, 0], [0, 6, 0], [6, 1, 3], [0, 6, 2], [0, 1, 4], [5, 3, 6], [6, 4, 1]], [[2, 4], [5, 4], [3, 6], [3, 6]]) == [0, -1, -1, -1]', 'assert minimumCost(4, [[2, 3, 2]], [[3, 1], [2, 1], [1, 2], [2, 1]]) == [-1, -1, -1, -1]', 'assert minimumCost(3, [[0, 2, 3], [1, 0, 2], [1, 2, 8], [2, 1, 3], [1, 2, 3], [0, 1, 7], [2, 1, 5], [2, 0, 4]], [[0, 2], [2, 1], [1, 0], [1, 0]]) == [0, 0, 0, 0]', 'assert minimumCost(8, [[5, 0, 11], [2, 6, 10], [6, 4, 13]], [[1, 0], [3, 6]]) == [-1, -1]', 'assert minimumCost(4, [[3, 0, 4]], [[3, 1], [1, 3], [0, 2], [2, 1], [2, 0], [3, 2], [2, 0], [1, 2], [0, 2], [2, 3]]) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(9, [[6, 5, 2], [5, 4, 7], [4, 7, 10], [8, 2, 9], [2, 1, 1], [6, 2, 2], [0, 4, 11], [6, 4, 5], [6, 5, 3], [8, 4, 10]], [[0, 8], [6, 2], [7, 1], [7, 4], [4, 2], [8, 0], [0, 7], [0, 1], [4, 7], [1, 8]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[2, 0, 6]], [[0, 1], [1, 2], [0, 1]]) == [-1, -1, -1]', 'assert minimumCost(8, [[0, 7, 14]], [[2, 7], [0, 2], [4, 6], [0, 7], [5, 1], [4, 6], [4, 3], [6, 0]]) == [-1, -1, -1, 14, -1, -1, -1, -1]', 'assert minimumCost(5, [[3, 0, 10], [1, 3, 2], [1, 4, 5], [1, 2, 9]], [[2, 1], [1, 0], [1, 2], [4, 2]]) == [0, 0, 0, 0]', 'assert minimumCost(7, [[3, 1, 13], [1, 0, 12], [0, 1, 0], [0, 5, 14]], [[5, 4], [1, 3], [3, 0]]) == [-1, 0, 0]', 'assert minimumCost(10, [[3, 9, 13], [2, 9, 3], [3, 9, 14], [0, 4, 1]], [[2, 6]]) == [-1]', 'assert minimumCost(7, [[3, 1, 9], [5, 4, 11], [5, 0, 10], [2, 6, 0], [4, 3, 12], [5, 0, 3], [2, 1, 10]], [[2, 5], [1, 4]]) == [0, 0]', 'assert minimumCost(3, [[2, 0, 4], [0, 2, 2]], [[1, 2], [2, 0], [0, 2], [1, 0], [1, 0], [1, 0]]) == [-1, 0, 0, -1, -1, -1]', 'assert minimumCost(10, [[9, 6, 0], [9, 5, 9], [7, 6, 0]], [[1, 4]]) == [-1]', 'assert minimumCost(5, [[1, 2, 5], [2, 4, 5], [4, 0, 4], [2, 0, 4], [0, 2, 13], [0, 3, 10], [4, 2, 4], [2, 4, 2], [1, 2, 8], [2, 3, 2]], [[0, 2], [2, 0], [3, 1], [4, 1], [2, 1], [2, 4], [2, 1], [3, 1], [1, 3], [2, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(7, [[3, 2, 0], [4, 5, 8], [5, 3, 10], [5, 3, 0], [1, 6, 11], [3, 4, 6], [5, 6, 2], [6, 5, 12]], [[1, 2], [0, 3], [2, 1], [6, 3], [2, 0], [5, 4], [3, 6], [5, 2]]) == [0, -1, 0, 0, -1, 0, 0, 0]', 'assert minimumCost(8, [[4, 1, 1], [4, 6, 2]], [[7, 2], [7, 2], [2, 0], [5, 4], [1, 5], [6, 5], [4, 2], [7, 5], [4, 7]]) == [-1, -1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(4, [[3, 2, 2], [3, 0, 4], [0, 2, 3], [2, 3, 0], [3, 2, 5], [0, 2, 2], [2, 3, 5], [3, 1, 0]], [[2, 3], [3, 1], [1, 3], [2, 1], [0, 1], [2, 1], [2, 3], [0, 1], [2, 3], [1, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(6, [[1, 2, 4], [3, 5, 3], [5, 2, 0], [4, 3, 0], [0, 4, 2], [2, 0, 2]], [[4, 5], [5, 3], [3, 2], [2, 3], [3, 5]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(5, [[1, 0, 13], [0, 4, 9], [2, 3, 12], [0, 2, 6], [0, 2, 5]], [[0, 1], [1, 4], [4, 0]]) == [0, 0, 0]', 'assert minimumCost(10, [[7, 3, 8], [9, 5, 12], [9, 1, 8], [9, 5, 5], [0, 1, 12], [7, 1, 4], [2, 5, 6], [0, 6, 3], [6, 7, 3], [5, 1, 10]], [[5, 7], [6, 7], [6, 3], [3, 1], [8, 9], [9, 7], [9, 4], [9, 6], [7, 8]]) == [0, 0, 0, 0, -1, 0, -1, 0, -1]', 'assert minimumCost(3, [[1, 2, 2], [2, 1, 1], [1, 2, 2], [0, 2, 0], [0, 2, 1]], [[0, 1], [0, 1], [1, 0], [2, 0], [1, 0], [0, 1], [1, 2]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[0, 1, 1], [2, 3, 0], [1, 0, 5], [2, 0, 4], [3, 1, 5], [0, 3, 4], [3, 1, 9], [3, 1, 9]], [[0, 2], [0, 2], [2, 1], [0, 2], [1, 2], [3, 2], [0, 3], [1, 2], [1, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[1, 0, 0], [0, 2, 1], [0, 1, 1]], [[2, 0], [2, 1]]) == [0, 0]', 'assert minimumCost(7, [[0, 3, 7], [2, 1, 7], [0, 1, 3], [6, 4, 0]], [[6, 3], [1, 6], [4, 5], [3, 4]]) == [-1, -1, -1, -1]', 'assert minimumCost(6, [[0, 5, 5]], [[3, 2]]) == [-1]', 'assert minimumCost(6, [[5, 4, 3], [5, 2, 0], [4, 2, 1], [1, 2, 0], [4, 5, 1]], [[5, 0], [1, 5], [4, 1], [0, 2], [5, 3], [0, 3], [1, 5]]) == [-1, 0, 0, -1, -1, -1, 0]', 'assert minimumCost(4, [[2, 3, 3]], [[3, 0], [3, 0], [0, 3], [0, 1]]) == [-1, -1, -1, -1]', 'assert minimumCost(7, [[1, 0, 4], [5, 1, 4], [6, 5, 0], [5, 3, 3], [6, 5, 2], [1, 5, 0], [4, 1, 4]], [[2, 3], [3, 0], [3, 1], [6, 0], [0, 6], [5, 4], [6, 3], [1, 0], [3, 4], [4, 3]]) == [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[1, 5, 8], [0, 7, 8], [0, 5, 4], [6, 1, 8], [1, 0, 4], [3, 0, 4], [4, 5, 9], [7, 2, 10]], [[4, 3], [1, 3], [0, 4]]) == [0, 0, 0]', 'assert minimumCost(6, [[1, 0, 4], [2, 1, 0], [5, 0, 3], [4, 2, 5], [3, 4, 6], [3, 5, 7], [1, 4, 2], [3, 2, 0]], [[3, 4], [3, 1]]) == [0, 0]', 'assert minimumCost(5, [[1, 2, 3], [3, 1, 1]], [[0, 4]]) == [-1]', 'assert minimumCost(3, [[2, 0, 5], [0, 1, 5]], [[2, 1], [1, 2], [2, 0], [0, 2], [2, 1]]) == [5, 5, 5, 5, 5]', 'assert minimumCost(10, [[6, 4, 10]], [[7, 0], [6, 9], [5, 3], [7, 6], [2, 0], [3, 1], [7, 9], [6, 1], [6, 1], [1, 7]]) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(9, [[3, 2, 4], [4, 6, 0], [3, 2, 8], [6, 7, 1], [3, 1, 9], [4, 1, 10], [4, 3, 13], [4, 8, 14]], [[5, 4], [1, 6], [8, 5], [1, 3]]) == [-1, 0, -1, 0]', 'assert minimumCost(3, [[2, 0, 11], [2, 0, 3], [2, 0, 14], [2, 1, 14], [2, 1, 13], [1, 0, 1], [1, 0, 11], [1, 0, 5], [1, 0, 7], [2, 0, 9]], [[1, 0], [1, 0]]) == [0, 0]', 'assert minimumCost(4, [[3, 0, 13], [3, 1, 3], [3, 1, 13], [3, 2, 2]], [[0, 1], [3, 1], [3, 1], [0, 3]]) == [0, 0, 0, 0]', 'assert minimumCost(4, [[1, 3, 7], [0, 3, 10], [0, 3, 8], [2, 0, 10]], [[0, 3], [1, 0], [2, 1], [0, 1], [2, 1], [0, 2], [1, 2], [2, 1], [0, 1], [3, 1]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[0, 1, 1], [2, 0, 1], [2, 1, 1], [0, 2, 1], [1, 0, 1], [1, 0, 1]], [[1, 0], [2, 0], [2, 1], [0, 2], [1, 0], [1, 2], [1, 2]]) == [1, 1, 1, 1, 1, 1, 1]', 'assert minimumCost(6, [[0, 3, 12], [3, 2, 3], [1, 2, 10], [4, 5, 2], [2, 4, 9], [1, 0, 7], [4, 3, 2]], [[4, 2], [0, 1], [2, 3], [0, 3], [5, 4], [3, 5], [5, 2], [0, 3]]) == [0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(4, [[3, 1, 4], [2, 0, 1], [2, 1, 3], [2, 3, 4], [0, 2, 1], [0, 2, 4], [0, 2, 1]], [[0, 3]]) == [0]', 'assert minimumCost(5, [[2, 0, 0], [4, 1, 2], [4, 0, 2], [3, 2, 2], [1, 0, 0], [1, 3, 2], [0, 3, 0], [3, 2, 2], [3, 1, 0]], [[2, 3], [2, 4], [0, 3], [2, 4], [4, 1], [1, 2]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(8, [[3, 7, 1], [5, 0, 0], [3, 2, 0], [2, 6, 0], [0, 4, 0], [2, 7, 0], [4, 6, 1], [4, 0, 1], [4, 2, 1], [1, 2, 1]], [[7, 3], [6, 3], [0, 2], [7, 2], [1, 3], [4, 2]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[0, 4, 0], [6, 7, 4], [4, 3, 3], [4, 0, 0], [5, 6, 1], [8, 1, 0]], [[6, 2], [6, 4], [7, 5], [7, 3], [2, 3], [6, 0], [6, 3], [5, 6], [8, 7], [0, 2]]) == [-1, -1, 0, -1, -1, -1, -1, 0, -1, -1]', 'assert minimumCost(3, [[1, 0, 9], [0, 2, 4], [1, 2, 4], [1, 0, 5], [2, 1, 4], [1, 2, 2], [1, 2, 10]], [[1, 2], [0, 2]]) == [0, 0]', 'assert minimumCost(5, [[1, 0, 7], [3, 1, 5], [0, 4, 2], [1, 0, 6], [2, 0, 0], [4, 2, 1], [1, 4, 6]], [[4, 2], [3, 4], [0, 2], [0, 2], [2, 1], [3, 1]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(10, [[1, 9, 11], [2, 0, 8], [4, 1, 9], [9, 8, 2], [7, 1, 12], [8, 5, 12], [8, 0, 13], [5, 6, 5]], [[1, 8], [7, 6], [0, 7], [3, 1], [7, 3], [1, 3], [5, 7], [4, 0]]) == [0, 0, 0, -1, -1, -1, 0, 0]', 'assert minimumCost(5, [[4, 0, 1], [0, 3, 11], [1, 2, 5], [1, 4, 12], [1, 0, 2], [2, 0, 8], [4, 2, 14], [3, 4, 6], [1, 0, 0], [2, 1, 5]], [[3, 0], [0, 2], [2, 0], [3, 2]]) == [0, 0, 0, 0]', 'assert minimumCost(7, [[2, 3, 5], [5, 4, 3], [4, 0, 6], [3, 6, 8], [3, 1, 0], [2, 1, 7], [2, 3, 5], [4, 5, 6]], [[2, 4], [2, 6], [4, 0], [4, 1], [2, 0], [2, 0], [5, 4]]) == [-1, 0, 2, -1, -1, -1, 2]', 'assert minimumCost(3, [[0, 1, 2], [1, 0, 2], [2, 1, 6], [2, 1, 0], [1, 2, 2], [2, 0, 4], [0, 2, 3]], [[2, 0], [2, 0], [2, 0], [1, 2], [1, 0], [2, 1], [2, 0], [2, 0], [1, 2]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(5, [[1, 2, 1], [1, 2, 0], [0, 4, 1], [1, 2, 1], [1, 4, 0]], [[2, 4], [4, 3]]) == [0, -1]', 'assert minimumCost(6, [[0, 4, 1], [3, 4, 1], [5, 2, 0], [4, 5, 1], [4, 5, 0], [0, 1, 0], [3, 1, 0], [3, 1, 0], [5, 3, 0]], [[4, 1], [0, 3]]) == [0, 0]', 'assert minimumCost(6, [[4, 3, 2], [0, 4, 6], [1, 5, 10], [4, 5, 1], [5, 1, 7], [2, 5, 10], [0, 5, 4]], [[4, 1], [3, 5], [5, 1], [4, 5], [3, 5]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(10, [[1, 6, 0], [6, 8, 0], [0, 5, 0], [2, 0, 1], [5, 2, 1], [9, 6, 1]], [[7, 8], [9, 8], [2, 0], [3, 1], [3, 6], [0, 8], [4, 9], [0, 4], [9, 1], [7, 3]]) == [-1, 0, 0, -1, -1, -1, -1, -1, 0, -1]', 'assert minimumCost(10, [[8, 4, 1], [7, 2, 2], [4, 5, 0], [6, 2, 3], [8, 7, 1], [9, 7, 0]], [[1, 4], [9, 2], [8, 0], [1, 0], [9, 7]]) == [-1, 0, -1, -1, 0]', 'assert minimumCost(10, [[1, 7, 1], [8, 1, 1], [2, 6, 2], [4, 2, 2], [4, 3, 3]], [[3, 4], [0, 8], [4, 1], [9, 3], [3, 5], [6, 3], [9, 5], [0, 4]]) == [2, -1, -1, -1, -1, 2, -1, -1]', 'assert minimumCost(3, [[1, 0, 2], [1, 2, 1], [0, 2, 4], [1, 2, 4], [2, 1, 2], [0, 2, 0], [2, 1, 0], [0, 1, 5]], [[0, 2]]) == [0]', 'assert minimumCost(5, [[0, 2, 3], [1, 3, 5], [4, 3, 0], [1, 3, 8], [0, 3, 0]], [[1, 4]]) == [0]', 'assert minimumCost(3, [[1, 2, 6]], [[2, 1]]) == [6]', 'assert minimumCost(9, [[2, 3, 7], [1, 5, 3], [5, 4, 8], [0, 2, 7], [3, 7, 11], [0, 2, 9], [0, 5, 6]], [[6, 5], [0, 3], [6, 2], [0, 8]]) == [-1, 0, -1, -1]', 'assert minimumCost(9, [[2, 0, 3], [3, 5, 4], [3, 6, 9], [2, 4, 6], [2, 4, 10], [4, 6, 8], [6, 4, 6], [7, 1, 4]], [[7, 8], [4, 2], [0, 1], [2, 7], [3, 6]]) == [-1, 0, -1, -1, 0]', 'assert minimumCost(8, [[5, 3, 0], [5, 2, 3], [1, 3, 2], [2, 0, 4], [7, 4, 4], [7, 6, 3], [0, 1, 3]], [[0, 7], [1, 3], [4, 1], [4, 2], [6, 0], [6, 4], [0, 7], [7, 0], [5, 1]]) == [-1, 0, -1, -1, -1, 0, -1, -1, 0]', 'assert minimumCost(9, [[0, 4, 4], [4, 7, 0], [8, 3, 3], [4, 7, 4], [6, 0, 4], [0, 3, 0], [0, 2, 1], [1, 7, 3], [3, 1, 0]], [[6, 1], [8, 6], [6, 2], [3, 2], [1, 5], [4, 2], [8, 7], [3, 5]]) == [0, 0, 0, 0, -1, 0, 0, -1]', 'assert minimumCost(8, [[5, 1, 7], [4, 5, 0], [4, 5, 13]], [[4, 3], [3, 7], [4, 2], [3, 6], [3, 5], [5, 1], [5, 6], [6, 5], [4, 0], [7, 1]]) == [-1, -1, -1, -1, -1, 0, -1, -1, -1, -1]', 'assert minimumCost(6, [[1, 4, 13], [1, 3, 9], [4, 0, 2]], [[2, 1], [5, 0]]) == [-1, -1]', 'assert minimumCost(6, [[3, 0, 12], [4, 3, 10], [0, 5, 0], [5, 4, 3], [3, 2, 1], [5, 2, 9], [5, 0, 5], [3, 0, 3]], [[2, 0], [3, 5], [0, 5], [5, 1], [5, 2], [2, 5], [5, 3], [3, 5]]) == [0, 0, 0, -1, 0, 0, 0, 0]', 'assert minimumCost(6, [[1, 2, 0], [0, 5, 7], [0, 3, 11], [0, 5, 4], [0, 3, 9]], [[1, 3], [1, 0], [3, 5], [4, 0], [4, 1]]) == [-1, -1, 0, -1, -1]', 'assert minimumCost(8, [[2, 0, 0], [2, 3, 2], [1, 4, 0], [5, 7, 1], [2, 0, 1], [0, 6, 1], [4, 7, 2], [5, 1, 1], [4, 2, 2], [3, 4, 1]], [[7, 2], [6, 3], [1, 3]]) == [0, 0, 0]', 'assert minimumCost(5, [[3, 0, 0]], [[4, 2], [3, 1], [4, 1], [3, 1], [3, 1], [0, 2], [0, 1]]) == [-1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(5, [[2, 0, 4], [2, 1, 0], [4, 2, 0], [4, 1, 1], [2, 3, 5], [3, 0, 10], [3, 0, 7]], [[0, 4], [4, 3], [4, 1], [2, 3]]) == [0, 0, 0, 0]', 'assert minimumCost(8, [[5, 0, 0], [1, 7, 3], [0, 2, 3], [2, 1, 1], [0, 5, 2], [4, 0, 0]], [[7, 3]]) == [-1]', 'assert minimumCost(8, [[4, 6, 6], [7, 1, 2], [4, 1, 3], [2, 6, 5], [3, 5, 1], [6, 4, 5], [2, 4, 1], [1, 6, 0], [5, 2, 6]], [[0, 4], [4, 0], [4, 7], [2, 7], [7, 1], [0, 7], [0, 3], [3, 6], [1, 3], [1, 7]]) == [-1, -1, 0, 0, 0, -1, -1, 0, 0, 0]', 'assert minimumCost(10, [[5, 7, 12]], [[6, 0]]) == [-1]', 'assert minimumCost(3, [[1, 0, 1], [1, 2, 0], [0, 2, 1], [2, 0, 1], [1, 2, 0]], [[1, 0], [2, 0], [1, 0], [1, 0]]) == [0, 0, 0, 0]', 'assert minimumCost(4, [[0, 3, 2], [0, 1, 3]], [[2, 3], [0, 3], [2, 0], [3, 0], [3, 1], [3, 1], [1, 2], [0, 2], [0, 2]]) == [-1, 2, -1, 2, 2, 2, -1, -1, -1]', 'assert minimumCost(3, [[2, 0, 2], [0, 1, 6], [1, 2, 4], [0, 1, 6]], [[2, 0], [0, 1], [1, 2]]) == [0, 0, 0]', 'assert minimumCost(5, [[1, 2, 0]], [[0, 1], [1, 0], [4, 0], [2, 4], [0, 1], [4, 2], [2, 4], [2, 3]]) == [-1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(6, [[4, 3, 0], [5, 1, 2], [4, 1, 10], [0, 2, 5], [1, 2, 5], [2, 5, 5], [3, 2, 6]], [[5, 3], [0, 4], [4, 2], [5, 1], [3, 1], [4, 1]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(10, [[0, 2, 3], [7, 0, 8]], [[4, 3], [1, 0], [2, 6], [1, 4], [7, 8], [4, 9], [1, 2], [8, 6]]) == [-1, -1, -1, -1, -1, -1, -1, -1]', 'assert minimumCost(6, [[0, 1, 1], [1, 5, 1], [1, 4, 0], [5, 1, 1], [3, 2, 1], [1, 2, 0], [0, 3, 0], [4, 2, 1]], [[0, 3], [1, 5], [4, 2], [5, 1], [4, 0], [5, 2]]) == [0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[0, 4, 7], [4, 5, 4], [5, 7, 2], [4, 0, 3], [6, 3, 7], [4, 6, 1], [5, 6, 4], [4, 8, 1], [7, 0, 6], [4, 0, 0]], [[3, 1], [3, 0], [0, 8], [2, 0], [2, 4], [4, 0], [3, 7], [0, 4], [3, 4]]) == [-1, 0, 0, -1, -1, 0, 0, 0, 0]', 'assert minimumCost(4, [[3, 2, 3], [0, 2, 0], [3, 2, 2], [0, 3, 0], [0, 2, 5], [0, 1, 3], [3, 1, 1], [2, 3, 5], [3, 1, 3], [0, 1, 1]], [[3, 2], [0, 3], [0, 2], [1, 2], [0, 1], [0, 1], [2, 0], [3, 1], [2, 1]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[7, 6, 2], [2, 1, 2], [4, 3, 2]], [[6, 3], [8, 3], [5, 4], [6, 1]]) == [-1, -1, -1, -1]', 'assert minimumCost(7, [[1, 5, 0], [1, 2, 4], [0, 5, 15], [0, 1, 12], [0, 2, 10], [4, 1, 3]], [[5, 1], [0, 6], [6, 2], [2, 3], [1, 5]]) == [0, -1, -1, -1, 0]', 'assert minimumCost(10, [[1, 6, 1], [4, 7, 0], [8, 2, 8], [6, 8, 5], [1, 4, 8], [5, 3, 0]], [[0, 9], [6, 9], [2, 9], [9, 2], [9, 5], [6, 1]]) == [-1, -1, -1, -1, -1, 0]', 'assert minimumCost(10, [[9, 3, 3], [9, 1, 5], [3, 6, 5], [5, 2, 4], [0, 5, 0], [4, 7, 1], [2, 4, 1], [0, 1, 1], [3, 5, 4], [0, 9, 4]], [[6, 4], [4, 7], [4, 3], [0, 9], [0, 7], [5, 2], [2, 6], [6, 9], [1, 8]]) == [0, 0, 0, 0, 0, 0, 0, 0, -1]', 'assert minimumCost(9, [[8, 1, 6], [1, 3, 4], [2, 8, 5], [2, 0, 0], [6, 7, 3], [0, 6, 1], [4, 8, 1]], [[0, 8], [2, 5], [1, 5], [3, 2], [5, 2], [0, 1], [7, 8]]) == [0, -1, -1, 0, -1, 0, 0]', 'assert minimumCost(6, [[2, 5, 1], [2, 3, 1], [3, 0, 1], [5, 2, 1], [0, 4, 1], [2, 0, 0], [3, 4, 0]], [[1, 4], [3, 2], [3, 0], [5, 2]]) == [-1, 0, 0, 0]', 'assert minimumCost(10, [[2, 6, 15], [4, 9, 5], [3, 1, 5], [6, 8, 8], [6, 5, 8], [0, 7, 13], [2, 4, 12], [6, 7, 5], [7, 1, 14], [3, 9, 7]], [[5, 1], [3, 0], [3, 7], [1, 7], [0, 4], [8, 4], [3, 9], [4, 2], [2, 0]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(5, [[2, 1, 4], [3, 4, 3], [2, 0, 4], [2, 1, 3], [0, 3, 1], [0, 1, 1], [4, 3, 0]], [[4, 2], [0, 1], [0, 3], [0, 1], [2, 0]]) == [0, 0, 0, 0, 0]', 'assert minimumCost(7, [[0, 6, 3], [6, 5, 8]], [[5, 6], [2, 5]]) == [0, -1]', 'assert minimumCost(7, [[0, 5, 3], [1, 0, 3], [5, 2, 1]], [[0, 1]]) == [1]', 'assert minimumCost(5, [[4, 1, 2], [3, 0, 1], [4, 1, 5]], [[3, 0], [3, 2], [2, 4]]) == [1, -1, -1]', 'assert minimumCost(6, [[0, 1, 1], [0, 2, 3], [4, 0, 3], [3, 5, 1], [3, 1, 1], [5, 2, 2], [4, 0, 3], [1, 5, 0]], [[1, 2], [0, 3]]) == [0, 0]', 'assert minimumCost(9, [[2, 5, 4], [0, 5, 0], [7, 1, 1], [3, 5, 4], [3, 8, 1], [6, 2, 4], [0, 3, 4]], [[3, 7], [8, 7], [6, 1], [6, 1], [5, 3], [0, 5], [0, 1]]) == [-1, -1, -1, -1, 0, 0, -1]', 'assert minimumCost(6, [[2, 0, 0], [5, 2, 0], [5, 0, 1], [2, 4, 0], [4, 5, 0], [5, 2, 0]], [[5, 2], [0, 1], [4, 1], [3, 5], [5, 0], [1, 5]]) == [0, -1, -1, -1, 0, -1]', 'assert minimumCost(6, [[2, 5, 12], [2, 5, 7], [2, 0, 5], [1, 2, 11], [1, 3, 6], [3, 1, 14], [3, 5, 3], [0, 4, 0], [5, 2, 10], [0, 2, 1]], [[4, 2], [3, 5], [4, 0], [0, 4], [5, 4], [4, 3], [5, 2]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(9, [[0, 7, 0], [4, 8, 1], [2, 7, 1], [8, 3, 0], [5, 3, 1]], [[3, 8], [1, 8], [1, 6], [8, 4], [6, 8], [3, 1], [5, 2], [0, 4], [6, 3]]) == [0, -1, -1, 0, -1, -1, -1, -1, -1]', 'assert minimumCost(10, [[7, 0, 5], [9, 8, 1], [3, 8, 4], [5, 6, 3], [1, 5, 2], [8, 2, 0], [9, 4, 4], [7, 9, 4], [3, 9, 4], [4, 1, 0]], [[2, 8], [3, 1], [1, 8], [2, 3], [3, 9], [4, 7], [4, 6]]) == [0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(3, [[2, 1, 7], [2, 1, 11], [1, 2, 4]], [[2, 0], [1, 2], [0, 2], [1, 2]]) == [-1, 0, -1, 0]', 'assert minimumCost(4, [[2, 0, 2], [3, 1, 4], [2, 3, 4], [2, 0, 11], [2, 3, 1], [1, 2, 7], [3, 1, 9], [2, 3, 14], [0, 3, 8], [2, 1, 9]], [[3, 1], [2, 0], [2, 0], [0, 1]]) == [0, 0, 0, 0]', 'assert minimumCost(8, [[3, 2, 3], [0, 3, 2], [5, 6, 4], [2, 7, 6], [4, 0, 10], [0, 6, 7]], [[2, 0], [7, 4], [0, 7], [2, 0], [1, 6], [5, 7], [4, 7]]) == [0, 0, 0, 0, -1, 0, 0]', 'assert minimumCost(39, [[37, 31, 89855], [17, 15, 92991], [31, 33, 92727], [17, 15, 98039], [15, 33, 94103], [13, 17, 88703], [36, 30, 97847], [12, 15, 97247], [18, 15, 84927], [18, 33, 84543], [30, 17, 88767], [12, 18, 88791], [36, 37, 96855], [30, 18, 89631], [17, 37, 89695], [31, 18, 93719], [0, 22, 32735], [20, 11, 24031], [0, 22, 19839], [2, 25, 32639], [2, 20, 28543], [11, 22, 32095], [21, 0, 28031], [29, 21, 24575], [20, 22, 32223], [32, 11, 23935], [29, 21, 32639], [22, 25, 28671], [32, 11, 24575], [32, 22, 20319], [29, 0, 20447], [21, 2, 23903], [11, 21, 19967], [5, 3, 97786], [27, 5, 89402], [14, 9, 89965], [14, 9, 96172], [28, 8, 90023], [8, 14, 98157], [14, 28, 96111], [28, 8, 90110], [28, 8, 96062], [8, 14, 90101], [28, 14, 90020], [28, 8, 88052], [28, 8, 90047], [14, 28, 90044], [8, 28, 89965], [28, 9, 98292], [28, 14, 98294], [14, 28, 90111], [9, 28, 98278], [26, 34, 90073], [34, 26, 90077], [23, 34, 98015], [26, 23, 89853], [19, 24, 97215], [19, 24, 97102], [6, 38, 24493], [38, 6, 24508], [38, 6, 24559], [6, 38, 24319], [38, 6, 24573], [6, 38, 24573], [6, 38, 24557], [38, 6, 24558], [24, 7, 37967], [29, 35, 2688], [3, 15, 71055], [19, 12, 20759], [12, 30, 57574], [30, 26, 34698], [24, 18, 350], [26, 21, 78671], [20, 38, 35493], [10, 20, 46818], [14, 30, 75339], [12, 27, 18737]], [[6, 38], [21, 0], [2, 22], [23, 34], [11, 2], [23, 26], [19, 24], [6, 38], [34, 23], [15, 33], [9, 28], [14, 8], [34, 23], [24, 19], [38, 6], [26, 23], [13, 18], [36, 15], [29, 0], [5, 27], [34, 26], [8, 28], [28, 9], [0, 29], [25, 29]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(37, [[28, 13, 58339], [5, 1, 42982], [1, 6, 62431], [5, 6, 49038], [20, 1, 49043], [28, 5, 64470], [13, 20, 48055], [6, 20, 44018], [6, 13, 49094], [1, 6, 41951], [13, 1, 46026], [28, 20, 42982], [20, 1, 47091], [20, 5, 63423], [1, 6, 58354], [16, 5, 48102], [28, 1, 63414], [20, 13, 60362], [6, 1, 47022], [6, 16, 48039], [1, 20, 62411], [28, 5, 61346], [20, 13, 60306], [28, 1, 42887], [16, 28, 60374], [6, 16, 65438], [5, 1, 63431], [6, 13, 60362], [5, 16, 64390], [5, 16, 49110], [13, 6, 42910], [20, 1, 41886], [20, 13, 46007], [28, 20, 44007], [20, 13, 47054], [5, 20, 61343], [16, 20, 61363], [13, 5, 58303], [6, 13, 42882], [5, 16, 43959], [6, 1, 64406], [1, 20, 42934], [16, 28, 41975], [1, 13, 65495], [6, 13, 44962], [0, 29, 81629], [0, 33, 97503], [32, 29, 81407], [25, 31, 79839], [32, 27, 97791], [36, 27, 97503], [30, 29, 73435], [25, 33, 79867], [32, 36, 73469], [30, 36, 88025], [25, 31, 87263], [27, 36, 95997], [32, 27, 79327], [32, 33, 87769], [32, 29, 81117], [25, 33, 79839], [0, 33, 73177], [33, 32, 87773], [33, 30, 98045], [29, 36, 87549], [33, 27, 79867], [0, 33, 98015], [2, 17, 51070], [19, 10, 47975], [4, 18, 52198], [7, 9, 38903], [17, 10, 50150], [12, 14, 32718], [14, 23, 28031], [12, 23, 15723], [23, 14, 28666], [14, 23, 11647], [35, 34, 99003], [26, 24, 98995], [34, 24, 99315], [26, 34, 99260], [15, 33, 10825], [27, 16, 17585], [26, 3, 43054], [7, 33, 43242], [35, 27, 57005]], [[12, 23], [19, 17], [35, 26], [10, 19], [10, 2], [35, 26], [4, 18], [20, 16], [35, 24], [25, 30], [26, 34], [4, 18], [12, 23], [26, 34]]) == [11594, 33638, 0, 33638, 33638, 0, 52198, 0, 0, 0, 0, 52198, 11594, 0]', 'assert minimumCost(80, [[42, 13, 57271], [68, 21, 57343], [51, 75, 48041], [51, 77, 48956], [32, 75, 46970], [32, 75, 62329], [77, 45, 47018], [77, 75, 62248], [75, 32, 46058], [51, 77, 63481], [45, 51, 62319], [77, 32, 46009], [32, 51, 63484], [45, 75, 63353], [32, 51, 62271], [51, 32, 63466], [77, 51, 64383], [45, 32, 62446], [45, 32, 65405], [77, 51, 65337], [75, 32, 65391], [6, 35, 95967], [7, 6, 97751], [56, 40, 79599], [6, 76, 95991], [41, 16, 81919], [78, 52, 81879], [55, 37, 65503], [70, 63, 49055], [37, 70, 44975], [55, 70, 59327], [19, 66, 65199], [64, 29, 64399], [34, 30, 84478], [57, 50, 93610], [25, 59, 53173]], [[42, 13], [34, 30], [16, 41], [42, 13], [35, 76], [77, 51], [21, 68], [64, 29], [70, 55], [63, 37], [41, 16], [34, 30], [76, 35]]) == [57271, 84478, 81919, 57271, 95447, 45864, 57343, 64399, 42895, 42895, 81919, 84478, 95447]', 'assert minimumCost(48, [[39, 6, 7935], [22, 8, 20479], [6, 23, 7923], [6, 8, 32755], [42, 22, 32511], [6, 23, 20215], [24, 42, 7931], [11, 32, 97775], [9, 35, 93691], [37, 34, 98287], [4, 3, 94191], [27, 18, 97791], [14, 44, 85467], [14, 44, 96767], [14, 44, 92407], [14, 44, 96415], [14, 44, 96499], [44, 14, 97175], [14, 44, 90007], [29, 21, 61367], [26, 21, 64505], [21, 26, 48054], [29, 26, 49140], [26, 29, 64503], [29, 21, 61434], [15, 12, 98207], [17, 13, 98235], [0, 38, 64127], [47, 1, 61245], [1, 0, 64255], [43, 5, 21725], [10, 43, 22109], [5, 10, 26460], [10, 2, 94079], [11, 18, 15129]], [[8, 42], [27, 18], [11, 32], [11, 32], [21, 29], [13, 17], [9, 35], [38, 0], [10, 5], [17, 13], [9, 35], [37, 34], [34, 37], [18, 27], [11, 32], [32, 11], [15, 12]]) == [3827, 14601, 14601, 14601, 43952, 98235, 93691, 59965, 17500, 98235, 93691, 98287, 98287, 14601, 14601, 14601, 98207]', 'assert minimumCost(12, [[5, 8, 60234], [2, 4, 51042], [11, 7, 56263], [10, 4, 55250], [11, 8, 58311], [11, 4, 58338], [7, 2, 54259], [4, 8, 63463], [9, 1, 23417], [3, 4, 40741], [6, 7, 65600], [11, 3, 37922]], [[7, 4], [1, 9], [11, 7], [1, 9], [7, 4], [10, 2], [7, 8], [10, 5], [2, 10], [2, 4], [4, 7], [9, 1], [8, 2], [1, 9], [4, 8], [1, 9], [1, 9], [9, 1], [2, 11], [11, 10], [11, 5], [8, 10], [8, 2]]) == [0, 23417, 0, 23417, 0, 0, 0, 0, 0, 0, 0, 23417, 0, 23417, 0, 23417, 23417, 23417, 0, 0, 0, 0, 0]', 'assert minimumCost(100, [[5, 83, 14253], [11, 92, 16293], [57, 92, 14247], [4, 0, 14293], [24, 48, 16215], [13, 66, 15863], [16, 7, 14711], [16, 61, 32247], [53, 47, 81917], [47, 97, 81849], [76, 97, 81913], [97, 47, 81851], [53, 76, 77819], [53, 76, 98239], [10, 71, 32607], [33, 70, 32607], [55, 10, 32765], [19, 70, 32717], [70, 33, 32589], [55, 71, 32591], [46, 62, 30013], [85, 17, 30067], [34, 46, 23925], [30, 22, 30131], [62, 85, 32187], [67, 2, 31928], [67, 38, 32638], [2, 42, 32632], [42, 2, 31482], [42, 2, 31347], [67, 38, 28602], [38, 67, 28081], [42, 38, 26867], [88, 38, 28208], [38, 49, 27263], [88, 67, 27956], [49, 42, 28667], [49, 38, 27324], [88, 38, 27762], [88, 38, 27199], [38, 49, 26744], [67, 8, 30769], [98, 69, 79802], [63, 32, 98219], [37, 15, 96187], [15, 63, 98235], [63, 37, 96235], [37, 32, 98223], [69, 98, 81834], [15, 69, 79866], [98, 32, 81918], [37, 98, 96186], [98, 63, 98235], [37, 98, 81850], [98, 63, 81839], [98, 63, 81914], [63, 69, 81855], [32, 15, 98299], [73, 72, 93861], [12, 72, 73659], [12, 72, 83706], [12, 72, 98016], [94, 86, 97911], [86, 94, 81783], [94, 86, 98047], [86, 94, 71543], [86, 94, 88055], [86, 94, 89855], [3, 13, 80550], [89, 44, 85162], [31, 51, 40992]], [[97, 76], [13, 66], [0, 4], [17, 34], [5, 83], [67, 38], [24, 48], [66, 13], [55, 71], [83, 5], [62, 34]]) == [77753, 14502, 14293, 21809, 14253, 26672, 16215, 14502, 32589, 14253, 21809]', 'assert minimumCost(88, [[67, 22, 32767], [75, 14, 32767], [85, 44, 32751], [80, 44, 24575], [67, 75, 32767], [44, 22, 24559], [80, 22, 32767], [44, 37, 32767], [50, 80, 24575], [37, 80, 24575], [68, 23, 24575], [56, 22, 32751], [85, 80, 24559], [37, 80, 32767], [85, 67, 24559], [4, 7, 31725], [62, 7, 3054], [62, 54, 28620], [7, 4, 11133], [71, 45, 96123], [20, 29, 96017], [5, 20, 96051], [78, 47, 96021], [78, 46, 88023], [15, 57, 30970], [69, 42, 17904], [38, 15, 23805], [41, 30, 17917], [25, 8, 32249], [27, 87, 15998], [2, 73, 96222]], [[23, 68], [44, 67], [7, 54], [56, 80], [45, 71], [15, 57], [5, 29], [69, 42], [45, 71], [2, 73]]) == [24575, 24559, 2892, 24559, 96123, 22776, 96017, 17904, 96123, 96222]', 'assert minimumCost(53, [[13, 46, 97644], [30, 45, 73213], [10, 40, 81276], [44, 48, 14332], [52, 2, 30671], [14, 39, 96127], [14, 8, 71550], [14, 7, 73530], [51, 39, 80703], [23, 51, 78394], [4, 5, 81652], [4, 5, 79863], [21, 49, 24574], [22, 27, 20947], [22, 27, 29659], [27, 22, 32503], [30, 45, 90478], [9, 34, 17397]], [[51, 23], [7, 39], [4, 5], [45, 30], [30, 45], [13, 46], [52, 2], [22, 27], [44, 48], [5, 4], [44, 48], [5, 4]]) == [70202, 70202, 79604, 65900, 65900, 97644, 30671, 20691, 14332, 79604, 14332, 79604]', 'assert minimumCost(23, [[4, 6, 16303], [4, 12, 16319], [6, 8, 15019], [16, 5, 29411], [11, 0, 29435], [3, 6, 13035], [19, 0, 30711], [12, 8, 16359], [8, 0, 15359], [19, 21, 16307], [15, 8, 14315], [12, 15, 16355], [4, 8, 16063], [22, 9, 49148], [22, 9, 65518], [13, 9, 65519], [13, 22, 65516], [13, 9, 45038], [9, 13, 49132], [9, 22, 47087], [9, 22, 65518], [13, 9, 61420], [13, 22, 49133], [22, 13, 61423], [22, 13, 59375], [22, 9, 65518], [9, 13, 65533], [13, 22, 47087], [13, 22, 61437], [13, 22, 65534], [13, 9, 63486], [9, 13, 59390], [22, 9, 65535], [13, 9, 43004], [9, 13, 61439], [9, 22, 59390], [13, 22, 49149], [13, 22, 43007], [22, 13, 43005], [13, 9, 43006], [13, 22, 65518], [9, 22, 42988], [9, 22, 47086], [7, 17, 64251], [14, 17, 49083], [17, 7, 61439], [17, 7, 43707], [17, 7, 65471], [14, 17, 43775], [7, 14, 44795], [7, 17, 45051], [7, 14, 48891], [14, 7, 65279], [14, 17, 60415], [17, 14, 48827], [13, 12, 62131], [13, 0, 68072], [16, 9, 43359], [19, 8, 52163], [8, 18, 31699], [10, 0, 90493], [18, 1, 90123], [18, 22, 95861], [18, 13, 10875], [14, 1, 13675], [10, 7, 69819], [16, 17, 97024], [20, 21, 79276], [13, 17, 81044], [7, 2, 44076], [10, 17, 48115], [10, 3, 7279], [15, 18, 94974], [6, 21, 30078], [2, 21, 18], [18, 22, 92248], [10, 14, 17760], [4, 17, 27674], [19, 14, 31525], [1, 2, 18039], [7, 10, 21879], [12, 21, 10287], [1, 11, 62962], [8, 11, 69145], [17, 0, 89841], [2, 21, 40085], [4, 7, 70426]], [[19, 4], [15, 3], [22, 9], [22, 9], [4, 0], [19, 3], [12, 3], [17, 7], [11, 0], [22, 9], [17, 7], [0, 6], [21, 15], [13, 9], [8, 4], [5, 16], [5, 16], [17, 14]]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', 'assert minimumCost(951, [[346, 209, 65396], [501, 168, 65510], [365, 639, 49022], [620, 398, 49102], [671, 498, 48927], [839, 183, 65356], [633, 464, 28607], [51, 274, 28662], [605, 616, 32486], [659, 437, 28670], [896, 214, 16103], [11, 159, 16366], [586, 254, 28415], [528, 239, 28607], [495, 19, 12198], [372, 634, 16118], [633, 298, 12287], [129, 896, 11959], [362, 937, 28606], [636, 651, 11966], [745, 775, 12006], [732, 836, 16303], [391, 588, 12023], [867, 856, 12279], [616, 680, 32423], [824, 896, 32703], [136, 362, 32703], [543, 293, 32694], [687, 172, 28590], [573, 136, 11967], [531, 616, 28327], [830, 344, 28399], [366, 439, 12263], [823, 616, 32679], [100, 362, 28647], [325, 605, 12263], [424, 948, 12030], [420, 596, 28343], [925, 775, 12030], [863, 830, 28407], [427, 670, 11966], [9, 815, 12215], [906, 300, 11966], [235, 190, 28391], [502, 146, 12222], [616, 589, 16102], [832, 659, 32766], [425, 585, 19269], [125, 507, 15183], [193, 175, 14299], [706, 173, 3806], [625, 692, 28443], [175, 712, 19286], [117, 673, 568], [350, 125, 6066], [733, 709, 22373], [400, 576, 24448], [216, 846, 25165], [878, 343, 13156], [392, 84, 26502], [175, 232, 733], [740, 848, 9831], [848, 850, 22018], [870, 456, 32767], [1, 511, 24575], [463, 847, 32767], [246, 653, 24543], [80, 860, 24558], [94, 217, 24543], [913, 857, 32671], [677, 580, 24558], [938, 33, 32751], [147, 472, 24478], [374, 870, 32751], [847, 721, 24478], [504, 675, 32702], [758, 12, 32703], [685, 295, 32751], [290, 1, 24574], [10, 831, 24463], [527, 703, 96253], [665, 415, 98303], [771, 869, 98159], [560, 459, 98285], [763, 759, 98301], [96, 726, 96253], [92, 523, 96255], [538, 210, 98303], [749, 555, 98173], [158, 560, 98159], [876, 294, 48882], [287, 470, 57339], [499, 28, 65275], [287, 264, 56055], [156, 28, 53247], [253, 470, 36859], [423, 196, 56058], [851, 278, 64254], [844, 542, 43775], [458, 768, 65471], [797, 696, 49087], [943, 76, 48947], [696, 60, 43967], [174, 282, 45022], [207, 91, 64926], [311, 90, 65450], [460, 678, 46986], [635, 131, 61358], [834, 131, 49067], [577, 90, 58847], [919, 311, 61343], [259, 481, 60847], [919, 496, 44491], [849, 514, 32255], [849, 889, 32221], [889, 377, 15839], [155, 904, 16333], [22, 394, 31948], [581, 270, 69575]], [[733, 709], [400, 576], [919, 90], [398, 620], [350, 507], [278, 851], [325, 680], [639, 365], [425, 585], [300, 906], [896, 214], [100, 362], [585, 425], [19, 495], [76, 943], [298, 633], [216, 846], [745, 925], [159, 11], [343, 878], [100, 573], [678, 460], [174, 282], [458, 768], [560, 459], [495, 19], [217, 94], [857, 913], [876, 294], [498, 671], [463, 847], [904, 155], [423, 196], [851, 278], [726, 96], [496, 90], [749, 555], [91, 207], [937, 100], [209, 346], [703, 527], [10, 831], [10, 831], [28, 156], [678, 460], [687, 172], [394, 22], [670, 427]]) == [22373, 24448, 42378, 49102, 4866, 64254, 11942, 49022, 19269, 11966, 11943, 11942, 19269, 12198, 48947, 12223, 25165, 12006, 16366, 13156, 11942, 46986, 45022, 65471, 98157, 12198, 24543, 32671, 48882, 48927, 24478, 16333, 56058, 64254, 96253, 42378, 98173, 64926, 11942, 65396, 96253, 24463, 24463, 52987, 46986, 28590, 31948, 11966]', 'assert minimumCost(474, [[96, 435, 32702], [269, 206, 32703], [128, 338, 32702], [435, 17, 28667], [128, 269, 32762], [347, 8, 28475], [347, 13, 32702], [220, 416, 28542], [416, 242, 28671], [17, 187, 28538], [65, 8, 28474], [106, 400, 28666], [80, 353, 28542], [0, 128, 32703], [46, 17, 28607], [187, 220, 28538], [363, 206, 28666], [269, 46, 28666], [128, 206, 32703], [17, 399, 28670], [99, 27, 32638], [192, 71, 55007], [313, 394, 58111], [414, 301, 58591], [21, 366, 33279], [253, 408, 46591], [449, 191, 45271], [216, 322, 55775], [414, 322, 53719], [193, 70, 43735], [308, 306, 56311], [349, 34, 43231], [362, 260, 36351], [207, 259, 39671], [277, 181, 51191], [113, 150, 35543], [366, 32, 47607], [158, 318, 35575], [279, 209, 55807], [351, 260, 33791], [191, 260, 38367], [110, 45, 47583], [58, 430, 57047], [136, 466, 64511], [207, 248, 35575], [402, 16, 43735], [259, 362, 46807], [232, 395, 51679], [127, 249, 36055], [199, 402, 39383], [402, 181, 34295], [279, 294, 38623], [204, 294, 64727], [333, 282, 99292], [333, 108, 99199], [388, 265, 99099], [210, 240, 99257], [254, 148, 99134], [388, 456, 99164], [178, 278, 99321], [133, 282, 99098], [429, 339, 99231], [115, 254, 99196], [104, 421, 99133], [339, 43, 99096], [346, 241, 99166], [135, 278, 99231], [148, 288, 99320], [69, 387, 99229], [133, 254, 99231], [265, 241, 99294], [382, 346, 99322], [190, 196, 63245], [52, 373, 63471], [218, 196, 63358], [122, 364, 65405], [433, 461, 65372], [343, 140, 65311], [268, 468, 65389], [404, 442, 97269], [310, 385, 96237], [314, 368, 65471], [292, 50, 65535], [378, 60, 57279], [24, 325, 65215], [303, 60, 65279], [453, 320, 65215], [203, 447, 97781], [215, 202, 97781], [243, 215, 95741], [90, 203, 95229], [381, 66, 32570], [473, 47, 10239]], [[310, 385], [366, 32], [339, 429], [115, 108], [203, 447], [268, 468], [249, 127], [314, 368], [387, 69], [193, 70], [364, 122], [60, 378], [104, 421], [308, 306], [181, 16], [333, 282], [69, 387], [104, 421], [378, 60], [368, 314], [52, 373], [140, 343], [99, 27], [308, 306], [461, 433], [433, 461], [16, 199], [136, 466], [232, 395], [394, 313], [395, 232], [69, 387]]) == [96237, 33271, 99096, 99096, 94709, 65389, 36055, 65471, 99229, 43735, 65405, 57023, 99133, 56311, 32983, 99096, 99229, 99133, 57023, 65471, 63471, 65311, 32638, 56311, 65372, 65372, 32983, 64511, 51679, 58111, 51679, 99229]', 'assert minimumCost(340, [[90, 290, 89931], [146, 77, 98267], [328, 205, 90075], [196, 62, 98155], [314, 125, 98283], [332, 150, 98171], [328, 55, 98139], [306, 35, 98255], [182, 216, 98139], [293, 100, 98139], [335, 66, 90091], [295, 10, 98155], [132, 111, 90111], [172, 63, 90063], [129, 9, 98139], [264, 100, 90107], [303, 260, 92095], [135, 169, 97215], [224, 339, 92159], [280, 88, 97215], [183, 135, 96255], [18, 97, 97278], [44, 105, 94207], [135, 114, 98239], [65, 303, 96190], [163, 301, 95231], [26, 65, 96190], [26, 222, 95231], [250, 333, 94143], [228, 65, 91134], [279, 148, 96255], [53, 148, 98302], [208, 105, 97215], [88, 190, 91134], [280, 114, 92095], [333, 302, 95230], [260, 183, 98239], [208, 228, 97279], [88, 60, 92094], [279, 60, 97279], [42, 144, 97215], [135, 333, 93118], [135, 339, 96191], [303, 93, 96255], [301, 148, 94207], [210, 26, 97214], [299, 183, 94142], [187, 280, 91070], [136, 184, 95230], [26, 339, 96254], [279, 49, 93118], [279, 136, 98238], [60, 49, 91071], [339, 208, 91070], [208, 60, 92095], [163, 299, 91070], [207, 88, 97279], [208, 222, 95230], [53, 49, 98239], [26, 163, 96255], [187, 292, 93182], [53, 136, 97214], [105, 207, 94143], [260, 187, 98302], [279, 49, 95167], [49, 93, 94143], [169, 136, 92094], [303, 301, 98239], [292, 148, 97278], [183, 136, 91071], [18, 42, 96190], [190, 18, 93183], [144, 253, 95166], [60, 302, 93119], [280, 208, 96190], [169, 108, 92095], [60, 105, 93119], [260, 184, 94206], [292, 53, 98302], [228, 190, 92159], [292, 208, 97278], [18, 333, 93182], [292, 207, 96255], [65, 299, 96191], [299, 279, 91071], [224, 210, 94142], [208, 190, 96190], [26, 301, 91070], [222, 88, 94206], [18, 93, 92159], [93, 105, 97278], [144, 260, 91071], [88, 97, 98302], [144, 280, 95231], [303, 280, 92158], [210, 97, 95167], [187, 280, 97278], [280, 207, 97214], [302, 97, 93182], [184, 105, 97278], [339, 26, 92094], [163, 49, 91134], [187, 280, 92094], [44, 60, 95230], [184, 136, 93118], [301, 169, 93183], [279, 114, 91071], [279, 208, 98302], [18, 187, 95230], [44, 169, 91071], [136, 93, 94143], [88, 135, 91134], [292, 163, 96190], [60, 97, 93119], [222, 93, 94206], [187, 148, 96254], [93, 148, 93119], [280, 184, 96190], [303, 302, 92159], [267, 296, 65023], [223, 34, 60863], [67, 248, 64959], [261, 25, 60735], [28, 285, 61247], [189, 201, 60799], [248, 99, 61247], [57, 124, 65023], [203, 96, 65535], [201, 13, 61247], [261, 209, 60735], [8, 189, 60735], [103, 296, 64831], [246, 51, 65407], [8, 189, 61247], [214, 212, 61439], [246, 170, 61311], [214, 170, 61375], [213, 337, 65471], [268, 103, 65407], [30, 51, 65023], [265, 30, 60735], [33, 41, 60863], [25, 248, 61247], [165, 30, 61375], [170, 265, 61375], [99, 124, 61375], [234, 73, 64895], [204, 213, 64831], [261, 51, 64895], [259, 201, 64959], [291, 185, 60927], [99, 215, 65343], [267, 246, 65343], [139, 297, 60735], [124, 242, 65535], [78, 198, 61375], [300, 110, 64959], [85, 287, 64895], [242, 204, 61247], [85, 78, 61247], [212, 149, 61439], [259, 248, 61247], [259, 291, 60799], [19, 248, 65407], [57, 268, 60799], [246, 234, 61311], [213, 234, 61247], [283, 318, 64831], [33, 138, 65343], [13, 33, 61375], [8, 234, 61247], [173, 291, 60863], [173, 255, 65023], [285, 64, 65343], [261, 236, 60735], [337, 165, 61247], [173, 78, 64959], [78, 239, 64895], [103, 188, 61247], [212, 165, 64831], [36, 128, 32719], [15, 128, 22351], [288, 11, 25471], [36, 162, 21335], [36, 15, 21374], [11, 128, 27599], [36, 11, 19439], [15, 128, 27606], [36, 15, 29678], [162, 128, 29639], [36, 128, 19286], [162, 36, 18255], [162, 128, 25470], [15, 11, 18302], [162, 288, 20463], [36, 288, 21359], [288, 36, 31687], [11, 36, 18423], [162, 36, 29527], [36, 288, 23502], [162, 128, 18422], [128, 162, 26606], [11, 162, 24422], [11, 15, 19271], [11, 128, 29518], [288, 15, 18374], [288, 128, 31599], [128, 288, 24534], [245, 164, 40954], [47, 219, 53242], [54, 336, 55259], [0, 164, 65369], [336, 0, 38744], [7, 98, 65278], [7, 206, 60406], [56, 29, 61167], [4, 75, 59895], [94, 75, 60143], [166, 56, 60902], [95, 56, 59878], [220, 338, 65271], [113, 226, 65470], [140, 159, 62454], [70, 226, 62447], [133, 160, 65319], [133, 70, 63487], [37, 109, 31737], [37, 270, 6643], [37, 270, 31219], [270, 109, 8181], [270, 109, 5617], [37, 109, 21500], [37, 270, 12793], [326, 282, 55014], [244, 142, 65229], [244, 282, 57325], [282, 244, 63196], [31, 72, 55238], [326, 244, 65277], [221, 72, 65525], [326, 282, 57310], [106, 273, 99327], [127, 202, 27575], [127, 202, 15295], [96, 234, 23682], [72, 166, 20928], [224, 152, 37140], [306, 302, 54205], [300, 254, 22084]], [[202, 127], [273, 106], [221, 31], [31, 221], [111, 132], [205, 55], [66, 335], [202, 127], [270, 37], [41, 248], [205, 328], [282, 326], [106, 273], [190, 65], [283, 318], [318, 283], [37, 270], [216, 182], [129, 9], [4, 94], [164, 336], [28, 285], [244, 282], [9, 129], [224, 187], [29, 166], [300, 110], [306, 35], [219, 47], [125, 314], [142, 244], [47, 219], [62, 196], [106, 273], [37, 270], [34, 223], [219, 47], [31, 221], [280, 279], [150, 332], [221, 72], [318, 283], [206, 7], [125, 314], [109, 37], [10, 295], [297, 139], [300, 110], [63, 172], [70, 113], [125, 314], [111, 132], [220, 338], [111, 132], [94, 4], [215, 78], [100, 293], [301, 26], [98, 206], [140, 159], [335, 66], [106, 273], [9, 129], [245, 336], [295, 10], [159, 140], [109, 270], [127, 202], [150, 332], [19, 239], [10, 295], [332, 150], [293, 264], [66, 335], [142, 282], [55, 205], [90, 290], [285, 64], [62, 196], [63, 172], [139, 297], [209, 214], [34, 223], [293, 100], [125, 314], [106, 273], [31, 72], [54, 245], [94, 4], [335, 66], [10, 295], [314, 125], [9, 129], [133, 226], [150, 332], [264, 293], [15, 36], [54, 164], [136, 190], [9, 129], [297, 139], [220, 338], [223, 34], [132, 111], [129, 9], [56, 29], [164, 336], [47, 219], [133, 226], [172, 63], [140, 159], [35, 306], [110, 300], [196, 62], [146, 77], [291, 188], [300, 110], [318, 283], [236, 246], [295, 10], [326, 282], [94, 4]]) == [11191, 99327, 16576, 16576, 90111, 89947, 90091, 11191, 4592, 19458, 89947, 54980, 99327, 260, 64831, 64831, 4592, 98139, 98139, 59623, 38744, 61247, 54980, 98139, 260, 16576, 21508, 260, 53242, 98283, 54980, 53242, 98155, 99327, 4592, 60863, 53242, 16576, 260, 98171, 16576, 64831, 60150, 98283, 4592, 98155, 60735, 21508, 90063, 62246, 98283, 90111, 65271, 90111, 59623, 19458, 89947, 260, 60150, 62454, 90091, 99327, 98139, 38744, 98155, 62454, 4592, 11191, 98171, 19458, 98155, 98171, 89947, 90091, 54980, 89947, 89931, 61247, 98155, 90063, 60735, 19458, 60863, 89947, 98283, 99327, 16576, 38744, 59623, 90091, 98155, 98283, 98139, 62246, 98171, 89947, 17222, 38744, 260, 98139, 60735, 65271, 60863, 90111, 98139, 16576, 38744, 53242, 62246, 90063, 62454, 260, 21508, 98155, 98267, 19458, 21508, 64831, 19458, 98155, 54980, 59623]', 'assert minimumCost(603, [[235, 422, 16254], [304, 521, 16247], [534, 198, 32639], [296, 421, 16383], [34, 596, 16247], [602, 324, 61287], [31, 330, 65135], [483, 259, 22206], [224, 166, 24254], [241, 446, 24252], [469, 176, 30398], [149, 529, 30655], [178, 41, 30463], [174, 55, 31933], [145, 74, 30204], [441, 536, 93166], [114, 225, 92798], [321, 480, 80893], [257, 366, 97515]], [[225, 114], [178, 41], [536, 441], [55, 174], [257, 366], [296, 421], [41, 178], [321, 480], [441, 536], [235, 422]]) == [92798, 30463, 93166, 31933, 97515, 16383, 30463, 80893, 93166, 16254]', 'assert minimumCost(862, [[673, 92, 64990], [288, 181, 62971], [468, 739, 32511]], [[739, 468]]) == [32511]', 'assert minimumCost(250, [[31, 115, 95962], [10, 116, 70830], [115, 10, 78331], [111, 116, 97251], [243, 110, 97243], [138, 10, 78839], [115, 31, 95215], [115, 111, 96146], [110, 131, 78250], [111, 182, 72087], [55, 115, 72398], [55, 243, 98230], [182, 131, 72895], [182, 115, 81550], [138, 182, 79826], [10, 110, 71143], [55, 110, 71379], [116, 10, 95922], [36, 190, 82939], [246, 140, 95963], [39, 190, 87803], [44, 231, 90105], [236, 51, 90875], [173, 187, 56830], [34, 125, 40438], [109, 82, 48822], [212, 88, 38910], [117, 245, 64703], [68, 43, 55222], [166, 249, 63414], [157, 245, 40191], [117, 249, 38398], [60, 248, 91084], [42, 90, 91404], [217, 204, 90478], [6, 60, 91117], [203, 238, 93118], [204, 136, 94718], [17, 85, 93660], [112, 21, 92510], [40, 53, 92079], [118, 226, 72675], [118, 95, 80885], [226, 118, 97256], [95, 118, 98278], [58, 94, 79615]], [[204, 136], [217, 204], [109, 82], [217, 204], [112, 21], [58, 94], [212, 88], [112, 21], [118, 226], [94, 58], [95, 226]]) == [90478, 90478, 48822, 90478, 92510, 79615, 38910, 92510, 72672, 79615, 72672]', 'assert minimumCost(946, [[161, 207, 30462], [210, 347, 28670], [519, 433, 14079], [789, 653, 26622], [780, 431, 26623], [762, 479, 30462], [102, 773, 30718], [823, 72, 12030], [1, 543, 12287], [588, 876, 16383], [653, 431, 9983], [41, 364, 28415], [875, 876, 14334], [809, 45, 32510], [40, 446, 32511], [809, 653, 14079], [853, 553, 26622], [624, 870, 12031], [1, 880, 26623], [159, 353, 26366], [55, 414, 32511], [49, 446, 32767], [604, 823, 12286], [714, 418, 12286], [880, 277, 12286], [510, 870, 32511], [654, 244, 16382], [118, 102, 10239], [604, 802, 28414], [178, 544, 30718], [789, 298, 12287], [875, 247, 30719], [167, 818, 26367], [943, 428, 26367], [779, 343, 30683], [343, 779, 30665], [779, 343, 32217], [639, 343, 32765], [639, 343, 32729], [343, 779, 30685], [779, 639, 32203], [639, 779, 32253], [343, 639, 30703], [779, 639, 32201], [639, 343, 30685], [639, 779, 32253], [343, 639, 32767], [343, 779, 32719], [779, 639, 30153], [343, 639, 32233], [343, 779, 32253], [779, 343, 32249], [639, 343, 32221], [639, 779, 30191], [343, 639, 32729], [639, 779, 32217], [639, 343, 32251], [639, 343, 32747], [779, 343, 30717], [779, 343, 30671], [343, 639, 32735], [343, 639, 32713], [285, 605, 30300], [327, 630, 30316], [811, 285, 32483], [144, 930, 32595], [492, 107, 32336], [192, 100, 29419], [2, 909, 31608], [315, 527, 31586], [661, 527, 32599], [62, 626, 29259], [756, 804, 31733], [937, 945, 30580], [630, 668, 29378], [709, 740, 30662], [107, 216, 29645], [816, 633, 31342], [658, 429, 31563], [897, 782, 29529], [712, 709, 31445], [709, 235, 29635], [62, 633, 30583], [60, 83, 29258], [922, 518, 31603], [522, 36, 32729], [878, 263, 30530], [618, 166, 30304], [866, 417, 29533], [804, 687, 32707], [285, 756, 29432], [122, 630, 31316], [626, 771, 29530], [378, 740, 32634], [457, 371, 30329], [21, 523, 31340], [219, 371, 29388], [523, 336, 29252], [830, 200, 31474], [666, 922, 30694], [300, 740, 29555], [326, 937, 30456], [843, 608, 30448], [398, 712, 31304], [518, 235, 32474], [740, 726, 29561], [605, 289, 32339], [216, 840, 30678], [677, 113, 29513], [716, 724, 30556], [219, 633, 30665], [216, 26, 32759], [122, 605, 31447], [922, 868, 30546], [38, 157, 30424], [197, 598, 29637], [469, 613, 32730], [124, 112, 30570], [724, 371, 32328], [282, 314, 94159], [444, 563, 97149], [502, 810, 92909], [499, 498, 97277], [566, 484, 97631], [406, 313, 91613], [942, 413, 98143], [413, 913, 95453], [842, 391, 92671], [241, 498, 95967], [151, 849, 91997], [366, 410, 95087], [374, 6, 97135], [748, 419, 92653], [186, 7, 95343], [173, 346, 90701], [676, 181, 91103], [563, 151, 98159], [769, 241, 96623], [442, 25, 97631], [241, 128, 92621], [689, 671, 91997], [225, 303, 92159], [381, 69, 90447], [6, 534, 96383], [819, 425, 90087], [422, 368, 88551], [276, 819, 73535], [850, 359, 97583], [89, 577, 90047], [54, 609, 81775], [52, 893, 72687], [359, 380, 81767], [609, 205, 97727], [276, 155, 97263], [201, 233, 80295], [819, 609, 88495], [368, 850, 90103], [577, 893, 96567], [422, 233, 89007], [54, 368, 73151], [89, 422, 97791], [425, 422, 96743], [201, 380, 81911], [359, 47, 81831], [470, 380, 88423], [609, 759, 97207], [759, 54, 89519], [234, 719, 31967], [638, 341, 30165], [290, 287, 30069], [306, 794, 31965], [828, 672, 30079], [441, 797, 32767], [290, 837, 30205], [672, 761, 30044], [65, 203, 30327], [290, 581, 32094], [685, 476, 32607], [546, 132, 30167], [143, 454, 30173], [323, 203, 32500], [715, 838, 29823], [196, 638, 30335], [705, 139, 32732], [334, 291, 32214], [9, 287, 32350], [934, 316, 30582], [729, 620, 32341], [927, 23, 32606], [737, 915, 31998], [670, 927, 32247], [927, 338, 29822], [650, 408, 30205], [560, 65, 30421], [23, 645, 30422], [794, 182, 30558], [784, 468, 30686], [16, 785, 29916], [713, 755, 29780], [597, 32, 32598], [345, 908, 32086], [338, 750, 30591], [297, 509, 32382], [441, 350, 32764], [58, 11, 31863], [691, 334, 30327], [450, 162, 28319], [451, 50, 28651], [545, 829, 65517], [595, 820, 64383], [831, 248, 65517], [552, 248, 65487], [545, 511, 56319], [732, 652, 56285], [421, 22, 56301], [614, 885, 57341], [631, 13, 64511], [39, 198, 64335], [881, 311, 65357], [545, 190, 64333], [938, 13, 56141], [261, 926, 64493], [482, 311, 65407], [412, 660, 64479], [659, 222, 64335], [163, 821, 65487], [70, 651, 57115], [665, 85, 65471], [548, 760, 65469], [917, 455, 64825], [646, 699, 63871], [651, 319, 56637], [707, 917, 64923], [115, 516, 64511], [699, 48, 56219], [917, 319, 57117], [861, 37, 64925], [208, 266, 96255], [656, 772, 98303], [744, 836, 98047], [656, 292, 95999], [272, 854, 98043], [402, 78, 32085], [720, 43, 31585], [939, 78, 13939], [43, 939, 30177]], [[190, 829], [868, 300], [315, 527], [85, 665], [782, 897], [261, 926], [263, 878], [85, 665], [522, 36], [182, 306], [2, 909], [406, 313], [853, 553], [469, 613], [50, 451], [11, 58], [315, 661], [13, 631], [353, 159], [122, 668], [25, 442], [519, 433], [724, 633], [631, 938], [300, 740], [563, 151], [878, 263], [645, 338], [909, 2], [563, 849], [870, 510], [604, 823], [85, 665], [11, 58], [939, 78], [880, 1], [761, 828], [566, 484], [122, 289], [831, 248], [908, 345], [715, 838], [470, 380], [58, 11], [595, 820], [780, 45], [244, 654], [744, 836]]) == [56141, 29248, 31554, 65471, 29529, 64493, 30530, 65471, 32729, 29788, 31608, 91613, 26622, 32730, 28651, 31863, 31554, 56141, 26366, 29248, 97631, 14079, 29248, 56141, 29248, 90957, 30530, 29782, 31608, 90957, 12031, 12030, 65471, 31863, 12353, 10238, 30044, 97631, 29248, 65485, 32086, 29823, 71975, 31863, 64383, 9982, 16382, 98047]', 'assert minimumCost(10, [[0, 1, 100000], [1, 2, 100000], [2, 3, 100000], [3, 4, 100000], [4, 5, 100000], [5, 6, 100000], [6, 7, 100000], [7, 8, 100000], [8, 9, 100000]], [[9, 8], [9, 0], [7, 3], [4, 9], [9, 6], [8, 3], [4, 6], [1, 4], [3, 7], [3, 8]]) == [100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000]', 'assert minimumCost(6, [[1, 2, 15], [2, 3, 15], [3, 4, 15], [3, 0, 6], [0, 5, 4], [1, 5, 5]], [[1, 4]]) == [4]', 'assert minimumCost(8, [[1, 2, 15], [2, 3, 15], [3, 4, 15], [3, 0, 6], [0, 5, 4], [1, 5, 5], [6, 7, 0]], [[1, 7], [1, 6]]) == [-1, -1]', 'assert minimumCost(8, [[1, 2, 15], [2, 3, 15], [3, 4, 15], [3, 0, 6], [0, 5, 4], [1, 5, 5], [6, 7, 0], [1, 6, 15]], [[1, 7], [1, 6], [1, 4], [2, 3]]) == [0, 0, 0, 0]', 'assert minimumCost(2, [[0, 1, 15], [0, 1, 7], [0, 1, 1], [0, 1, 5]], [[0, 1]]) == [1]']
correct = 0
for t in tests:
    try:
        exec(t)
        correct+=1
    except:
        pass
success = len(tests) == correct
print(correct,'/',len(tests))
print(success)