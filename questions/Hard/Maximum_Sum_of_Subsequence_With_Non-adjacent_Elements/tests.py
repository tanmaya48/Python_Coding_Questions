from question import maximumSumSubsequence
tests = ['assert maximumSumSubsequence([3, 5, 9], [[1, -2], [0, -3]]) == 21', 'assert maximumSumSubsequence([0, -1], [[0, -5]]) == 0', 'assert maximumSumSubsequence([-1], [[0, 1]]) == 1', 'assert maximumSumSubsequence([0, 3, 3, 3, 1, -2], [[4, 0], [1, 0]]) == 9', 'assert maximumSumSubsequence([4, 0, -1, -2, 3, 1, -1], [[3, 1], [0, -2], [1, -1], [0, -2], [5, 4], [6, -3], [6, -2], [2, -1]]) == 36', 'assert maximumSumSubsequence([3, -3, 3, -1, -3, 2, -1], [[2, -1], [2, 3], [4, 3], [2, 1], [4, 3], [6, -3], [1, 0], [2, 3]]) == 59', 'assert maximumSumSubsequence([0, 1, 1, -1, -1, 1, 0], [[4, 0], [6, 0], [4, 1], [4, -1], [6, -1], [6, -1]]) == 12', 'assert maximumSumSubsequence([6], [[0, -2]]) == 0', 'assert maximumSumSubsequence([-6, -3, -2, 3, -3], [[2, -5], [0, -3], [1, -6]]) == 9', 'assert maximumSumSubsequence([1, -1, 2, 0, -1, -2, -2, -2], [[6, 2], [0, -2], [2, 0]]) == 11', 'assert maximumSumSubsequence([-1, -3, 3, 0, -2], [[1, -2]]) == 3', 'assert maximumSumSubsequence([0, -2, -4, 7, -1, -8, 1, 4, -6], [[8, -7], [1, 3], [5, 6], [2, -8]]) == 65', 'assert maximumSumSubsequence([-3], [[0, 7], [0, 3], [0, 8], [0, -5]]) == 18', 'assert maximumSumSubsequence([3], [[0, -1], [0, 0], [0, -2], [0, -2], [0, 4], [0, 0], [0, -2], [0, 3], [0, -2], [0, -4]]) == 7', 'assert maximumSumSubsequence([-1, -2, -2, 4, -2, -5, -5, 3, -2], [[4, 1], [1, -5], [3, -3], [4, 1], [5, 0], [7, -3], [3, 2], [1, 1], [2, -4], [0, -5]]) == 38', 'assert maximumSumSubsequence([-2, 0, 2, 1, -2, 2], [[5, 1], [3, -1]]) == 6', 'assert maximumSumSubsequence([7, 3, -7, 2, -6, 6, 4], [[0, 5], [1, 6], [5, -4], [6, 5], [0, -4], [6, 4], [4, 3], [0, -2], [3, -7]]) == 116', 'assert maximumSumSubsequence([8, -2, 5, 6, -5, 5, -8, -1], [[2, 3], [1, 2], [5, -8]]) == 52', 'assert maximumSumSubsequence([0, 0, 1, 1], [[2, -1], [3, 1], [0, 1], [1, 1], [3, 0]]) == 7', 'assert maximumSumSubsequence([4, 4, 3, 3, 3, -2, -1, 0], [[7, 2], [0, 2], [6, -2], [4, -3], [1, -1], [1, -4]]) == 55', 'assert maximumSumSubsequence([10, -3, 3, -2, 8, 4, 0, 8], [[0, 4], [5, -1], [2, 4], [4, 5]]) == 91', 'assert maximumSumSubsequence([-4, -8, 7, -7, 2], [[1, 1], [0, 6], [0, -7]]) == 33', 'assert maximumSumSubsequence([-8, 4, 5, -1, 4, 6, 1, 2, 5, 8], [[3, 4], [8, 7], [3, 2]]) == 70', 'assert maximumSumSubsequence([-4, -1, -4, -6, -2, 7], [[3, -2], [2, 1]]) == 15', 'assert maximumSumSubsequence([2, 3, 1, -1, 1, -2], [[0, -2], [0, 0]]) == 8', 'assert maximumSumSubsequence([0, -5, 2, -3, 9, 1, 0], [[5, -10], [1, 1], [4, 8], [2, 4], [5, -10], [0, 8], [4, 9]]) == 97', 'assert maximumSumSubsequence([-7, 1, -1, -5, -5], [[0, 1], [0, -2], [1, -3], [0, 7], [0, -2]]) == 9', 'assert maximumSumSubsequence([5, 2, 7, -6, 6], [[4, -1], [3, 3], [0, 5], [4, 5], [4, -5], [4, 1]]) == 78', 'assert maximumSumSubsequence([0, -4, 6], [[0, -5], [1, 6], [1, -2], [1, -1], [1, 2], [1, 3], [2, -2], [1, 0], [2, 0]]) == 39', 'assert maximumSumSubsequence([1, 1, -1, 0, -1, -1, 0], [[4, 1], [1, 0], [2, 0], [2, -1], [5, -1], [3, 0], [6, -1], [0, -1], [1, -1], [1, 0]]) == 17', 'assert maximumSumSubsequence([-4, 0, -6, -5, 6, 7, 1], [[3, 6], [3, -1], [1, 6], [1, 3], [5, -2], [2, -6]]) == 63', 'assert maximumSumSubsequence([-3, 8, 2, 3, -2, 6, -10], [[3, 9], [3, -2], [4, -9]]) == 51', 'assert maximumSumSubsequence([-4, -3, -5, 3, -3], [[2, -1], [3, 3], [4, -2], [0, -4], [1, 4], [1, -6], [4, 6], [0, -5]]) == 34', 'assert maximumSumSubsequence([2, 1, -1, 1, -1, 1, -1, 2, -1], [[7, 2], [8, -1], [6, 1], [6, -2], [0, -2], [3, -2], [5, 2]]) == 38', 'assert maximumSumSubsequence([3, 2, 4, -2, -4, 0, 3], [[6, -1], [5, 1], [4, 4], [0, -3], [1, 1], [6, -3], [4, 1], [4, -3], [0, 0]]) == 65', 'assert maximumSumSubsequence([4, -4, 4], [[1, 4], [0, 4], [2, -5], [0, -2]]) == 24', 'assert maximumSumSubsequence([-1, 2, 2], [[0, -1], [0, 1], [1, 1], [0, -2], [1, -1], [2, 2], [2, 1]]) == 15', 'assert maximumSumSubsequence([3, 3], [[1, -3], [0, -1], [1, 3], [1, 2], [1, 1], [1, 3], [0, -3], [1, -2], [0, 3], [1, -1]]) == 21', 'assert maximumSumSubsequence([-4, -1, 5, 1, -1], [[2, 2], [4, 5]]) == 9', 'assert maximumSumSubsequence([2, -5, -1, 5, -2, -3, -2, 1], [[4, -5], [5, 6], [1, 6], [0, 4], [5, -7], [1, 3], [4, -6], [2, -5], [1, 7], [4, 1]]) == 126', 'assert maximumSumSubsequence([2, -1, 4, 2, -2], [[1, 3]]) == 6', 'assert maximumSumSubsequence([-1, 4, 0, -5, 5, 5, 1], [[0, -5], [6, 6], [1, -3], [4, -4], [0, 3], [4, -3]]) == 60', 'assert maximumSumSubsequence([-6], [[0, 0], [0, 2], [0, 1], [0, -2], [0, 1], [0, -1], [0, 6], [0, -7], [0, -5]]) == 10', 'assert maximumSumSubsequence([9, -2, 6, 7, 3, 1, 4, 6], [[1, 5]]) == 24', 'assert maximumSumSubsequence([-9, -6, 3], [[0, -2]]) == 3', 'assert maximumSumSubsequence([-3, -2, 0, 2], [[0, 3], [0, -2]]) == 7', 'assert maximumSumSubsequence([-2, 7, 4, -10, -8, -6], [[1, -6]]) == 4', 'assert maximumSumSubsequence([3, 3, 1, -2, -3, 1, -3], [[3, 2], [5, 3], [0, 3], [0, 3], [3, 1]]) == 37', 'assert maximumSumSubsequence([-2, 1, -1, -2, 2, 1, 1, 1, -2], [[8, 2], [4, -1], [0, 2], [0, 0], [5, 2], [4, -2]]) == 29', 'assert maximumSumSubsequence([-2, 8, 2, 0, 3, 5, -3, -5], [[5, -4], [1, 2]]) == 16', 'assert maximumSumSubsequence([6], [[0, 2], [0, -3], [0, -5], [0, 1], [0, 2], [0, -1], [0, -1]]) == 5', 'assert maximumSumSubsequence([3, -4, 0, -3, 0, 1, 1, -4], [[3, 2], [3, 2], [7, 3], [0, 0], [0, 4], [1, -1], [2, 1], [2, 2], [5, -1], [2, 1]]) == 85', 'assert maximumSumSubsequence([-1, 2, -1, 1, -1], [[1, -1], [2, 1], [0, -1], [1, -2], [0, 0], [4, -3], [0, 3], [2, 0], [0, 3], [1, -2]]) == 22', 'assert maximumSumSubsequence([3, -4, 4, 3], [[3, 5], [3, -1], [1, -2]]) == 22', 'assert maximumSumSubsequence([0, -3, 2, -1], [[0, 3]]) == 5', 'assert maximumSumSubsequence([-4, 1, -2, -1, 5, 1, -4, 5], [[1, 4]]) == 14', 'assert maximumSumSubsequence([3], [[0, -4], [0, -1], [0, 4], [0, -4], [0, -3], [0, -2], [0, 3], [0, 0]]) == 7', 'assert maximumSumSubsequence([-4, 3, -4, 9, -8, -2], [[4, -9], [2, -1], [0, 5], [2, -7], [3, -4], [4, 6], [3, -2]]) == 79', 'assert maximumSumSubsequence([0, 3, 7, -3, -2, 0, -1, 6], [[2, -6], [0, 5], [1, 1], [5, -1], [3, 5], [6, 7], [2, -7], [0, -7], [3, -6]]) == 113', 'assert maximumSumSubsequence([-6, -9, -9, 6, 8, 9, -3, -5, 8], [[7, 6], [7, 3], [2, -8], [2, 5], [0, 9]]) == 124', 'assert maximumSumSubsequence([-2], [[0, -1], [0, -2]]) == 0', 'assert maximumSumSubsequence([4, -7, -5], [[0, 5], [2, 1], [2, -5], [1, -8], [0, -7], [2, -3], [1, 1]]) == 22', 'assert maximumSumSubsequence([7], [[0, -2], [0, -1]]) == 0', 'assert maximumSumSubsequence([1, -1, 1, -1, -1, 0, -2], [[3, -1], [3, 0], [0, -1], [4, -1], [2, 2], [6, 2]]) == 12', 'assert maximumSumSubsequence([1, 1, 0, -1, 0, 0, 0], [[5, 1], [0, -1], [6, 1], [5, 1], [2, -1], [4, 1], [4, 0], [4, -1], [6, 0]]) == 19', 'assert maximumSumSubsequence([-7, -1, 1], [[1, 1], [1, -2]]) == 2', 'assert maximumSumSubsequence([0, -5, -3, 0, 3, -1, 6, 4, -3, 3], [[9, 3], [4, 2], [6, -4], [3, 0], [9, -6]]) == 47', 'assert maximumSumSubsequence([2, -2, 2, 2, -4, 0], [[2, 3], [5, 4], [0, -3], [5, 2], [2, -1]]) == 30', 'assert maximumSumSubsequence([-2, 3, -4, -4, 0], [[1, -4]]) == 0', 'assert maximumSumSubsequence([2, 9, -3, -1, 9, 3, 6], [[5, -10], [5, 7], [2, 3], [1, 3], [5, -10], [3, 5], [3, -4], [6, 1], [0, 5]]) == 185', 'assert maximumSumSubsequence([1, 3, -4, 2, -6, 6, -5], [[5, -7], [6, -6], [2, 2], [4, 7], [3, -4]]) == 35', 'assert maximumSumSubsequence([-1, -1, -1, -1, -1, -1, 0], [[4, 0], [3, -1], [1, 0]]) == 0', 'assert maximumSumSubsequence([-4, 1, -3, -6, 5, 4, 2], [[4, 6], [3, 4], [1, 4], [6, 1], [0, -3], [2, -3], [2, 4]]) == 78', 'assert maximumSumSubsequence([5, -7, 1, 1, -7, 5, 3, 1], [[2, -7], [0, -5]]) == 19', 'assert maximumSumSubsequence([-2], [[0, 3], [0, -3], [0, -3]]) == 3', 'assert maximumSumSubsequence([-2, 0], [[1, 3], [0, 4], [1, -4], [1, -5], [1, -2], [0, 1], [1, 3], [0, 4]]) == 27', 'assert maximumSumSubsequence([-2, 0, 5, 0, -2, -5, 0, 1, 4, 2], [[0, -5], [6, -3], [3, -1], [3, -3], [0, -2], [7, 3]]) == 55', 'assert maximumSumSubsequence([1, -2, 2, 2, 3, 0, -2], [[4, 1]]) == 4', 'assert maximumSumSubsequence([-10, 2, -7, -3, 9, -5, 4, 5, 9], [[1, 7], [7, 0], [4, -9], [0, -9]]) == 98', 'assert maximumSumSubsequence([7, 9, -7, 3, 5, 4], [[0, -6], [2, 3], [0, 6], [0, 0], [4, -3]]) == 80', 'assert maximumSumSubsequence([3, 2, 3, 2, -6, 0, 2, 7], [[7, -3], [3, -5], [1, 1], [3, 3], [1, 7], [4, 7], [3, -3], [6, 2]]) == 92', 'assert maximumSumSubsequence([-3, -1, -3, 1, -6, -6], [[2, 2], [4, 4], [2, -5], [3, 3], [2, 2], [4, 3]]) == 27', 'assert maximumSumSubsequence([-3, -3, 2, -1], [[0, 3], [0, 1], [1, 3], [2, -1], [1, -1], [0, 1]]) == 16', 'assert maximumSumSubsequence([-3, 2, -2, -3, 2, -3, 0], [[3, -2]]) == 4', 'assert maximumSumSubsequence([0, 0, 1, -1, 0, 0, 0, -1], [[1, 1], [7, 1], [6, -1], [6, 1], [1, -1], [6, -1], [0, 1], [0, 1], [7, 1]]) == 20', 'assert maximumSumSubsequence([0, -3, -1, 3], [[1, -3], [2, 3], [1, 3], [3, 3], [2, -2]]) == 24', 'assert maximumSumSubsequence([-7, 6, 3, 7, -7], [[1, -5], [1, 7], [2, 6], [2, 5], [2, 0], [1, 4], [1, -2], [1, -6]]) == 88', 'assert maximumSumSubsequence([0, -4, -2, -1, 0, -2, -3], [[3, -4]]) == 0', 'assert maximumSumSubsequence([0, -4, 1, -1, -1, -6], [[4, -3], [5, 3], [1, 1], [3, -2], [5, -5], [1, 6], [3, 1], [3, -3], [2, 5], [3, -2]]) == 45', 'assert maximumSumSubsequence([-1, -3, -1, 2, 0, -3], [[3, 3], [1, -2], [4, -3], [0, 0], [0, 2]]) == 17', 'assert maximumSumSubsequence([-4, 0, 1, -3, 0, -1, 1, -2, 2, -1], [[5, -1], [8, 3], [4, 2], [2, -4]]) == 22', 'assert maximumSumSubsequence([-5], [[0, 4], [0, -4], [0, 5], [0, -5], [0, 0], [0, 2], [0, -5]]) == 11', 'assert maximumSumSubsequence([-3, 0, -1, 5], [[1, -1], [3, 1], [2, 4], [1, 1], [2, 2], [2, 3]]) == 19', 'assert maximumSumSubsequence([3, 3, 3], [[2, 2], [0, 2], [2, 2], [1, 6], [1, 5]]) == 24', 'assert maximumSumSubsequence([2, 2, -1, 0, -1, -1, -1, 1, -2], [[1, 1], [8, 2], [4, -1], [7, -2], [2, 2], [7, 1], [4, -1], [5, -1], [1, 1], [2, 1]]) == 50', 'assert maximumSumSubsequence([-3, 0, 6, -8, -4, 9, 0, -8], [[3, -5], [0, -6], [6, 5], [0, -6], [0, 7], [4, -3], [6, -4], [2, 8]]) == 150', 'assert maximumSumSubsequence([3, 5, -3, 4, 3, 0, -5, 0, 3, 1], [[3, -3], [2, -1], [8, 4]]) == 34', 'assert maximumSumSubsequence([-1], [[0, -3], [0, -7], [0, -4], [0, 1], [0, 1], [0, -1], [0, -3], [0, 6], [0, 2], [0, 1]]) == 11', 'assert maximumSumSubsequence([-1, 1, 2, -1, 0, -1], [[1, 2], [0, -1], [4, 1], [4, -1], [1, 1], [5, 1]]) == 14', 'assert maximumSumSubsequence([-3, 10, 6, 6, 5, -8, 10, 2, 4, -4], [[3, 6], [1, 4], [6, -8], [0, -8], [4, -10], [9, -9], [5, -8], [2, -8], [1, 0], [1, 3]]) == 164', 'assert maximumSumSubsequence([1, 0, 3, 4, 3], [[0, 3], [2, 0], [2, 5], [0, 0]]) == 35', 'assert maximumSumSubsequence([-1, 1, 0, -1, -1], [[1, 1], [3, 0], [4, 1], [4, -1], [3, 0]]) == 6', 'assert maximumSumSubsequence([-7, 2, 8], [[0, 9], [2, 6]]) == 32', 'assert maximumSumSubsequence([-4, -7, 5, -1, 6, -4, 0, 2], [[7, 2], [7, -3], [5, 3], [6, 7], [7, 4], [6, 7], [3, 7], [1, 1], [0, -3], [7, 7]]) == 161', 'assert maximumSumSubsequence([1, 1, 1, 2, 4, -5, 0, -4, -4], [[8, 1], [4, -4], [1, 3], [3, -1], [5, 1], [1, 1], [1, 3], [0, 2], [2, 0]]) == 45', 'assert maximumSumSubsequence([6, -2, 0, -4, -2], [[0, 4]]) == 4', 'assert maximumSumSubsequence([-1, -1, 1, 2, -2, 2, -1, 0, -1], [[8, -2], [1, 2], [3, 2], [1, -2], [8, 1], [5, -1], [6, -1]]) == 31', 'assert maximumSumSubsequence([2, -3, 2, 3], [[2, -3], [1, 3], [0, 1]]) == 17', 'assert maximumSumSubsequence([4], [[0, -5], [0, 0], [0, -4], [0, 3]]) == 3', 'assert maximumSumSubsequence([8, 7, 2, -2, 4, 2], [[0, 5], [4, -9]]) == 20', 'assert maximumSumSubsequence([-2, 2, 2, 2, -1, 0, -1, -1, 2], [[3, 2], [6, 1], [3, -1], [5, 1], [8, 1], [0, 2], [8, 1], [6, 1], [3, -1], [5, -1]]) == 57', 'assert maximumSumSubsequence([1, 1, 0], [[0, 0]]) == 1', 'assert maximumSumSubsequence([3, 1, -3], [[1, 1]]) == 3', 'assert maximumSumSubsequence([7, 0, 3], [[2, -4], [0, 1], [1, -6], [2, 0]]) == 10', 'assert maximumSumSubsequence([8, 3, -9, 7, 5, -8, 6, -10], [[3, -5]]) == 19', 'assert maximumSumSubsequence([2, 1, 1, 1, 0, -1, 0, -1, 0], [[2, -1], [8, 2], [6, -1], [8, -1], [7, 1], [5, -2], [8, -2], [0, -2], [1, -2]]) == 33', 'assert maximumSumSubsequence([0, 0, 2, 3, 0, 0, 3, -2], [[1, 2], [0, 1], [6, 4], [2, 3]]) == 34', 'assert maximumSumSubsequence([-4], [[0, 6], [0, 0], [0, 7]]) == 13', 'assert maximumSumSubsequence([4, 8], [[0, 2]]) == 8', 'assert maximumSumSubsequence([1, 2, -1, 2, 2, 0, -1, 2, 1, 1], [[0, -1], [1, 1], [6, 1], [0, 0], [4, 2], [9, -2], [6, 1], [4, -1]]) == 46', 'assert maximumSumSubsequence([3, -2], [[0, -1], [0, 5], [1, 2], [1, 2], [0, 5], [0, 5], [0, 6], [1, 4], [0, 0], [1, 6]]) == 47', 'assert maximumSumSubsequence([-5, 6], [[0, 6], [0, 5]]) == 12', 'assert maximumSumSubsequence([4, -9], [[0, 4], [0, 1], [1, 8], [1, -7], [0, 9], [1, 4]]) == 32', 'assert maximumSumSubsequence([1, 0, 5, 2, 0, 5, 2, -1, 0], [[7, 3], [8, -2]]) == 28', 'assert maximumSumSubsequence([-7, 4, -3, -7, 1], [[1, 0], [0, 4], [0, -2], [1, 3], [1, -7], [1, 7], [0, 5], [3, -7]]) == 36', 'assert maximumSumSubsequence([1, -3, -1, 3, -3, 3, -1, -1, -2, 1], [[8, 3], [7, 2], [9, -1], [1, 0], [4, -1], [5, 1], [2, -2], [2, 2], [7, -1], [7, 2]]) == 90', 'assert maximumSumSubsequence([1, 1, -4, -1, 5, 0, -6, 3], [[4, -3], [4, 0], [0, 1], [7, 4]]) == 17', 'assert maximumSumSubsequence([1, 0, 1, 0, -1, -1, -1, 1], [[5, 1], [2, 0], [2, -1], [7, 0], [2, 0]]) == 14', 'assert maximumSumSubsequence([-2, -1], [[0, 3], [1, 2], [0, -1], [0, -2], [1, 3], [1, 2], [0, -3], [1, 0], [0, 0], [1, 2]]) == 19', 'assert maximumSumSubsequence([-2, 2, -2, -2, 1, 3, -2, 2], [[6, 3], [3, -2], [3, -1], [7, 0], [1, 3], [5, -3], [6, 1], [4, 1], [0, -1], [5, 3]]) == 62', 'assert maximumSumSubsequence([0, -5, 4, -7, -3, 1, 5, 2, 1], [[2, -6], [6, 7], [5, 0], [0, -2]]) == 30', 'assert maximumSumSubsequence([-1, 1, -1, 0, 1, 0, -1, 1], [[6, 0], [4, -1], [3, 0], [2, 0], [5, 1], [3, 1], [2, 1]]) == 20', 'assert maximumSumSubsequence([-5, -3, -3, 3, 2, -2], [[1, 5], [2, 0], [0, 2], [3, -4], [2, 5], [0, 1], [1, 1], [5, -5], [3, 1], [1, -1]]) == 80', 'assert maximumSumSubsequence([7, 4, 2, 4, 0, -3, 4, 1, 3, -5], [[8, -4], [7, 5], [8, 1]]) == 47', 'assert maximumSumSubsequence([-1, 3, 0, -2, 2, -2], [[0, 3], [3, -2], [1, -1], [0, 2], [3, 2]]) == 23', 'assert maximumSumSubsequence([4], [[0, -2], [0, -2], [0, -2], [0, -1], [0, -3], [0, 3], [0, 3]]) == 6', 'assert maximumSumSubsequence([0, 7], [[0, -6], [0, 7], [0, 7], [0, 8], [1, 3], [0, 8]]) == 45', 'assert maximumSumSubsequence([-3, 0, -4, 1, 3, -2, 1, 5, 5, 1], [[0, -4], [8, -1], [4, 4], [1, -3], [0, 4], [5, 1], [2, -2]]) == 80', 'assert maximumSumSubsequence([4, 0, -5], [[2, -2], [0, -1], [0, 2], [2, -4], [0, -5]]) == 8', 'assert maximumSumSubsequence([5], [[0, 2], [0, -4], [0, 7]]) == 9', 'assert maximumSumSubsequence([1, 5, -2, -3, 2], [[2, -6], [0, 10], [4, 9], [3, 2]]) == 57', 'assert maximumSumSubsequence([5, 5, 4, 0, 5, 2, -5, 3, 4], [[1, -2], [3, 0], [4, -5], [5, -4], [6, -1], [2, 5], [8, -3]]) == 104', 'assert maximumSumSubsequence([7, 1, -1, -3], [[2, -4], [3, 2], [3, 2], [0, -5]]) == 28', 'assert maximumSumSubsequence([-1, 2, 2, -2, 2, -2, -1, -1], [[2, -3], [1, -2], [3, 2]]) == 8', 'assert maximumSumSubsequence([-2, -1, 2, 2, 0], [[4, -1], [2, 0], [4, 1], [4, -2]]) == 8', 'assert maximumSumSubsequence([0, 1], [[1, -3], [1, 3]]) == 3', 'assert maximumSumSubsequence([-6, 4, 2, -4, 0, 5, 3, 0, 5, 4], [[1, 4], [2, -6], [3, -1], [9, 4], [2, 0], [5, 3], [7, 2]]) == 95', 'assert maximumSumSubsequence([-3, -1], [[0, 0], [1, -1], [0, 1], [1, -2], [0, -3], [1, 0], [0, -2], [0, -2], [0, -1]]) == 2', 'assert maximumSumSubsequence([-2], [[0, -4], [0, -3], [0, -2], [0, -3], [0, 5], [0, -4], [0, -2]]) == 5', 'assert maximumSumSubsequence([0, -6, -1, 5], [[2, 1], [3, 4], [2, 1], [1, 4], [1, -7]]) == 25', 'assert maximumSumSubsequence([-6, 6, -3, -6, 1, -6, -6, 0], [[2, 5], [5, 4], [6, -3], [7, -1], [0, 3], [7, 2], [1, -3], [3, 3]]) == 91', 'assert maximumSumSubsequence([0, -3, 3, 5, -2], [[3, 3], [1, -2], [1, -1], [4, 0], [1, -5], [0, 4], [0, 4], [1, 1], [3, 5]]) == 45', 'assert maximumSumSubsequence([4, 0, 0, -2, 5, -5], [[4, -5], [0, -1], [2, -1], [1, 1], [1, 1], [1, -1], [4, 4], [3, -5], [1, -5]]) == 18', 'assert maximumSumSubsequence([0, -1, -1, 1, -1, 1, -1, 0], [[0, 0], [5, 0], [5, 0], [6, 1], [7, -1], [1, 0]]) == 10', 'assert maximumSumSubsequence([-1, 1], [[0, -1], [0, 1], [1, -1], [1, 1], [0, 0], [1, -1], [0, -1], [1, 0]]) == 5', 'assert maximumSumSubsequence([1], [[0, 6], [0, 4]]) == 10', 'assert maximumSumSubsequence([2, 0, -2, 0, -1, 0], [[1, 1], [0, 2], [2, -1], [0, 1], [5, 1]]) == 9', 'assert maximumSumSubsequence([3, 2, 4, 4, 2, 3, 5, -4, -3], [[1, -5], [8, 1], [3, 2]]) == 44', 'assert maximumSumSubsequence([1, -1, 2, -2, 1, 1, 1], [[2, 0]]) == 3', 'assert maximumSumSubsequence([-6, -1, 3, -4, 5, 6], [[5, 1], [1, 4], [3, 4], [0, 4], [2, 5], [5, 5], [5, -6], [4, -2], [4, -5], [0, 3]]) == 106', 'assert maximumSumSubsequence([3, -7, 0, 4, -8, -7, 5, 0], [[1, -9]]) == 12', 'assert maximumSumSubsequence([-2, 1, -1, 5], [[1, -2], [2, -4], [2, 0], [2, 2], [3, 3], [0, -4]]) == 26', 'assert maximumSumSubsequence([-9, 0, -3, 0, 4], [[1, -7], [0, -10], [3, -3], [2, 9], [3, -9]]) == 38', 'assert maximumSumSubsequence([-7, 0, -5, -3, -5, 7, -4, 0], [[5, -6], [7, 5]]) == 5', 'assert maximumSumSubsequence([0, -6, 6, 0, -3, 4, 2], [[5, -3], [6, -3], [5, -5], [4, -4], [5, -6], [3, 5], [5, 0], [5, -5], [0, 0]]) == 56', 'assert maximumSumSubsequence([2, 7, 5, 4, 4, 7], [[1, 1], [1, -5]]) == 28', 'assert maximumSumSubsequence([-9, 1], [[1, 3], [0, -1], [0, -8], [0, 2], [1, -1], [0, -8], [1, 8], [0, -6]]) == 30', 'assert maximumSumSubsequence([7, 8, -6, 8, -2], [[1, 7], [0, -3], [2, -6], [4, 4], [4, -4], [3, 4], [2, -7], [4, -4], [2, 4]]) == 119', 'assert maximumSumSubsequence([1, -1, -2], [[2, 1], [2, 3], [2, 3], [1, -2], [2, -1], [1, -3], [1, 1], [1, -2]]) == 18', 'assert maximumSumSubsequence([-2, 7, -4, -6, 7, 6], [[4, -7], [0, 6], [1, -4]]) == 38', 'assert maximumSumSubsequence([3, 3, -4, 3, 3, 9, 2, -1], [[2, -6], [7, 5], [4, -5], [5, 0], [4, -6], [5, 9], [1, 3], [6, 4], [4, -5], [1, 3]]) == 177', 'assert maximumSumSubsequence([0, 1, 0, -1, -2, 0, -1, 1], [[2, -2], [2, -1], [5, 0], [2, 2]]) == 9', 'assert maximumSumSubsequence([-2, -4, 4, 0, 3, 3, 2, -4, -1], [[6, 0], [2, 1], [1, 1], [5, -1]]) == 19', 'assert maximumSumSubsequence([1, 4, -2, -2, -3, 3, 3, 1, 2, -2], [[3, 4], [5, -1], [6, -1], [3, 4], [1, 0], [5, -2], [9, 1]]) == 67', 'assert maximumSumSubsequence([-1], [[0, -1], [0, 0], [0, 0], [0, -1], [0, -1], [0, 0]]) == 0', 'assert maximumSumSubsequence([-5, 9, -9], [[1, 0], [2, -5], [1, -6], [2, -7], [2, 0], [2, 0], [2, -1], [1, 0], [2, -5]]) == 0', 'assert maximumSumSubsequence([2, 0, -4, -2, -6, 2, 1, -1, 3, 6], [[4, -8], [5, -8], [6, -5], [8, 4], [6, 4], [9, 8], [9, -2], [0, -7], [0, -4], [8, 3]]) == 94', 'assert maximumSumSubsequence([5, 8, -4, 2, 1, 1, 4, 5, -6, 1], [[2, -2], [7, 1], [6, 8], [1, 0], [5, -4], [8, -5]]) == 99', 'assert maximumSumSubsequence([5, -4, -1, -7, 3, 5, 0], [[1, 7], [4, 4], [5, 2], [0, 7]]) == 46', 'assert maximumSumSubsequence([-6, -1, -9, -8, -6, 7, 4], [[5, -10], [6, -6], [3, -7], [2, 7], [6, -4], [5, -2]]) == 25', 'assert maximumSumSubsequence([-2, -1, 1], [[2, -1], [2, 0], [2, -2], [1, 2], [1, 0], [1, -2], [1, -2]]) == 2', 'assert maximumSumSubsequence([1, 0, 0, 1, 0], [[4, 1], [4, 1], [1, -1], [3, -1]]) == 8', 'assert maximumSumSubsequence([-5, -7], [[1, 6], [0, 1], [0, 4]]) == 18', 'assert maximumSumSubsequence([-6, 6, 8, -4, -7, 8, -5, 6, -2, -2], [[0, 8], [8, 8], [3, -1], [1, -2], [9, 7], [0, 6], [3, -5], [3, 2], [3, 0], [1, -3]]) == 338', 'assert maximumSumSubsequence([0, -5, -1], [[1, -5], [2, 5], [1, 0], [1, -1], [1, 4], [0, 0], [2, -5], [1, -2], [0, -3]]) == 29', 'assert maximumSumSubsequence([6, -7, -3, 4, 6, -3, 0, -4, 1], [[7, -2], [1, 1], [5, 6], [6, -2], [4, 6], [2, 1], [3, -5], [1, -7], [0, 0], [2, 1]]) == 138', 'assert maximumSumSubsequence([10], [[0, -2], [0, -1], [0, -9]]) == 0', 'assert maximumSumSubsequence([-8, -2, -1], [[0, 8]]) == 8', 'assert maximumSumSubsequence([7, 5, -7, -5, -4, 0, 7, 6], [[3, 2], [3, -7], [1, 0], [0, 6], [0, -5], [4, -6], [7, 4], [2, 2]]) == 87', 'assert maximumSumSubsequence([0], [[0, 0], [0, 3]]) == 3', 'assert maximumSumSubsequence([-4, 4, 0], [[2, 4], [0, 1], [1, -2]]) == 14', 'assert maximumSumSubsequence([0, 0, 1, 1, 1], [[0, 0], [1, 0], [1, 1], [3, -1], [1, 0]]) == 10', 'assert maximumSumSubsequence([3, -1, 0], [[1, 3], [1, 2]]) == 6', 'assert maximumSumSubsequence([3, -5, 0, 2, -6, -4, -4], [[2, 3], [1, -3]]) == 12', 'assert maximumSumSubsequence([4, 0, -2, 3, 2, 4], [[4, -3], [2, -1], [1, 2], [0, 3], [5, 2], [1, -3], [1, 4], [5, 2], [2, -3]]) == 86', 'assert maximumSumSubsequence([-2, 2], [[1, -2]]) == 0', 'assert maximumSumSubsequence([4], [[0, -8]]) == 0', 'assert maximumSumSubsequence([3, -1, 1, 1, 0, 3, 3, 0], [[1, 0], [3, -2], [6, -5], [3, -5], [6, -6], [1, -5], [2, 2], [7, -1], [3, 4]]) == 68', 'assert maximumSumSubsequence([2, 2, -4, -2, 1, -3, -3, -1, 4, 0], [[6, 2], [1, -4], [9, 0], [0, -3], [4, 2], [9, 4], [0, 0], [8, 0], [9, 0]]) == 70', 'assert maximumSumSubsequence([-6, -5, -8], [[0, -1], [2, -10], [0, -2], [2, 8]]) == 8', 'assert maximumSumSubsequence([-9, 6, -9, -6, -9, -5, 7, -5, -2], [[5, 8]]) == 14', 'assert maximumSumSubsequence([-2, 5, 4, 0, 0], [[0, 0], [4, 5]]) == 15', 'assert maximumSumSubsequence([0, 1, -2, 0, -2, -2, 3, 1, 2], [[6, -3], [6, -3], [3, 3]]) == 12', 'assert maximumSumSubsequence([1, -3, 2], [[1, 7], [2, -5], [1, -5], [2, -4], [2, 4], [0, 3], [1, 6], [2, -1]]) == 41', 'assert maximumSumSubsequence([8, -5, -6, -4, -8, 3, -2, 4, 3], [[8, -7], [8, 8], [0, -4], [5, -4], [8, -9], [1, -8], [4, 2], [0, 5]]) == 78', 'assert maximumSumSubsequence([6, -1, -5, 3, 5, 2, 1], [[0, -5], [5, -2], [1, 5], [6, 3], [4, -6]]) == 47', 'assert maximumSumSubsequence([-4, 3, 3, 1, 3], [[2, -5], [1, 7], [4, 1], [2, 0], [4, -5], [1, 8]]) == 49', 'assert maximumSumSubsequence([1], [[0, -2], [0, 1], [0, 5], [0, 1], [0, -5], [0, 7]]) == 14', 'assert maximumSumSubsequence([7, 2, -5, -2, -2], [[0, 5], [4, 2], [1, -5], [0, -1]]) == 21', 'assert maximumSumSubsequence([3, 3], [[1, 2], [0, -1], [0, 0]]) == 7', 'assert maximumSumSubsequence([6, 0, 6, 0, 6, 5, 4, -2, -5, 4], [[2, 4], [3, -2], [0, 1], [4, 0]]) == 81', 'assert maximumSumSubsequence([-4], [[0, -6], [0, 9], [0, -2], [0, 2], [0, 9], [0, -7], [0, -4], [0, 3]]) == 23', 'assert maximumSumSubsequence([1, 0, 1, -1, -1, -1], [[1, -1], [3, -1], [3, -1], [1, 1], [3, 0], [3, -1], [1, 0], [2, -1], [3, -1]]) == 16', 'assert maximumSumSubsequence([-4, 0, -5, 4, 4, 2, 5, -2], [[5, 4], [2, -4], [0, -4], [7, -5]]) == 36', 'assert maximumSumSubsequence([3, -5, 4, 3], [[2, -1], [2, -5], [3, 4], [2, 1], [0, -3]]) == 30', 'assert maximumSumSubsequence([-1, 1, 1, 0, -1, 0, -1, 1, -1, -1], [[6, 1]]) == 2', 'assert maximumSumSubsequence([2, -1], [[1, -2], [0, 3], [1, 1], [1, 2], [0, 2], [0, -2], [1, -2], [1, 2], [0, -2]]) == 19', 'assert maximumSumSubsequence([1, 3, 4, 3, -2, 5, 3, -2], [[1, 6], [4, -1], [2, 1], [4, -2], [1, 4], [7, -1], [7, -5]]) == 92', 'assert maximumSumSubsequence([-3, -1, 3, 0, -1, -1, 3, 3], [[3, 0], [5, 2], [7, 3], [6, -1], [0, 3]]) == 41', 'assert maximumSumSubsequence([7, -3, -1, -3, 2, -3, 7, 4], [[6, 5], [2, -5], [7, 3], [6, 7], [6, 5], [4, 2], [2, -3]]) == 100', 'assert maximumSumSubsequence([1, 4, -5, 4, 3, -3, -1, -2, 3, -3], [[9, 3], [6, -1], [4, 0], [0, -5], [0, 1], [2, 5]]) == 66', 'assert maximumSumSubsequence([-1, 0, -2, -2, 1, 3, -2, -2, 0], [[8, 3], [3, 3], [2, -2], [2, 3], [6, -3], [7, 2], [3, 2], [4, 3]]) == 69', 'assert maximumSumSubsequence([-1, 6, 6], [[2, -1], [0, -4], [1, -5], [1, -6], [0, -7], [2, 5], [0, -3], [1, 0], [1, 4]]) == 32', 'assert maximumSumSubsequence([-2, 0, -1, 2, 2, 2, 1, 1], [[3, 1], [2, -2], [4, -2], [7, 2], [1, -1]]) == 22', 'assert maximumSumSubsequence([-3, -1, -1, 2, 3, -2], [[0, 3], [3, 4], [0, 2]]) == 19', 'assert maximumSumSubsequence([-8, -8, 4, 0, 9, 5, -4, -3], [[3, -10], [5, -5]]) == 26', 'assert maximumSumSubsequence([-2, -2, -3, 5, 3], [[1, 2]]) == 7', 'assert maximumSumSubsequence([0, -1], [[0, 0], [0, -1], [1, 0]]) == 0', 'assert maximumSumSubsequence([5, 2, 2, 1, 1, -1, -4, -4, -3, -1], [[5, 2], [3, -3], [4, -5]]) == 27', 'assert maximumSumSubsequence([9, 3, 4, -7, -7, 8], [[3, -3], [3, -4], [3, -9], [1, -6], [2, 3], [1, 3], [1, 7], [4, -2]]) == 164', 'assert maximumSumSubsequence([-10, 6], [[0, -10], [1, -3]]) == 6', 'assert maximumSumSubsequence([0, -2], [[0, -1]]) == 0', 'assert maximumSumSubsequence([-4], [[0, -1], [0, 3], [0, 0]]) == 3', 'assert maximumSumSubsequence([2, -1, -6, 0, 2, -2, 5], [[1, 4], [3, -4], [0, -1], [2, -2], [2, -9]]) == 55', 'assert maximumSumSubsequence([2, 6, -3, 4, 3, -6], [[5, 1], [1, 1], [4, -4], [4, 0], [1, 2], [5, 4], [4, -2], [3, 1]]) == 66', 'assert maximumSumSubsequence([0, -1, 0, 0], [[2, -1], [1, -1], [1, 1], [0, 1], [0, -1], [1, 1]]) == 4', 'assert maximumSumSubsequence([1, -2, 2, -2, 2], [[0, 0], [0, -2], [4, -1], [2, 0], [1, 0], [4, -1], [2, 1], [1, 2], [2, -2]]) == 15', 'assert maximumSumSubsequence([1, 4, -7, 4, 7, -2, 6, 7, 4, 3], [[8, -3]]) == 21', 'assert maximumSumSubsequence([-5, 1, 0, -4, -2, 2, 6, 2], [[4, 7], [4, -3], [6, -1], [3, -5], [3, -5], [6, 7]]) == 44', 'assert maximumSumSubsequence([1, 0, 0, 0, 1, -1, 1, 0], [[5, 0], [3, 0], [2, 1], [3, -1], [1, 0], [4, 0], [5, 1]]) == 24', 'assert maximumSumSubsequence([0, -2, -1, -1, 0, 2, -1, 3, -3], [[1, -1], [5, 0], [7, 2], [6, -1], [1, 2], [8, -1], [1, 0], [1, -3]]) == 24', 'assert maximumSumSubsequence([1, -2, -2, 3, 3, -2, 1, 3, -1], [[4, -1], [1, -2], [8, -2]]) == 21', 'assert maximumSumSubsequence([-1, 1, 0, 0, 1, 5, -4, 5, -2], [[3, 2], [5, -2], [4, -5], [0, 5], [2, -4], [3, 0], [2, -5]]) == 73', 'assert maximumSumSubsequence([3, 4, -2, 4, -2, 0, 1, 3, 4], [[1, 1], [4, -2]]) == 24', 'assert maximumSumSubsequence([-1, -2], [[1, 1], [0, 4], [0, 4], [0, 4], [0, -2], [0, 7], [0, -5], [1, 0], [0, -2], [1, 4]]) == 26', 'assert maximumSumSubsequence([1, 1, 2, 3, -1, -3, -1, -2], [[1, 0], [3, 0], [2, 0], [5, 2], [3, -2], [7, -1], [1, -2]]) == 20', 'assert maximumSumSubsequence([-9, -7, 5, -2, -9], [[2, -2], [3, 4], [4, 8], [1, 0], [4, -1]]) == 24', 'assert maximumSumSubsequence([2, 3, -8, -6], [[2, -7], [0, 4], [1, 9], [1, 0], [0, 5], [2, -10], [0, 4], [0, 4]]) == 38', 'assert maximumSumSubsequence([1, 4, -2], [[2, -3], [1, -3]]) == 5', 'assert maximumSumSubsequence([-1, 0], [[1, 0], [0, 1], [0, -1], [0, 0], [1, 0], [0, 1], [1, -1], [1, 0], [0, 0]]) == 4', 'assert maximumSumSubsequence([9, 7, -6, 1, 1], [[1, 6], [0, -6], [1, 6], [3, -8], [0, 9]]) == 41', 'assert maximumSumSubsequence([-4, -5, -3, -3], [[1, -4], [0, 10], [3, -1], [0, -1], [2, -9]]) == 20', 'assert maximumSumSubsequence([0, 1, 1, 0, 1, 1], [[3, 0], [5, 0], [1, 1], [5, 0], [4, -1], [1, -1], [5, 0], [1, -1]]) == 12', 'assert maximumSumSubsequence([-1, -1, -3, 1, -1, 1, 1, -1, -4], [[6, -2], [3, 0], [3, -3], [8, 3], [6, -1], [3, -1], [6, 3], [7, 4], [4, 0], [4, -2]]) == 40', 'assert maximumSumSubsequence([4, -3], [[0, 0], [1, -6], [0, -5], [1, 3], [0, 5], [0, -6]]) == 11', 'assert maximumSumSubsequence([2, -3, 1, -3, 0, 4, 4, -4], [[4, -2], [2, 2], [2, 4], [2, 2], [2, -1]]) == 39', 'assert maximumSumSubsequence([-8, -3, -8], [[2, 4], [2, 2], [0, -4]]) == 8', 'assert maximumSumSubsequence([-7, 3, -3], [[0, 2], [2, 6], [1, -4], [0, 5], [0, 1], [2, 2]]) == 40', 'assert maximumSumSubsequence([2, -4, 3, 3, 2, -3, -4, 0], [[4, -4], [6, 2], [4, -1], [4, 0], [0, 2]]) == 33', 'assert maximumSumSubsequence([-4], [[0, 8], [0, -1], [0, 4]]) == 12', 'assert maximumSumSubsequence([6, 4, -2, 1], [[3, 2], [1, -1], [3, -8], [0, 8]]) == 30', 'assert maximumSumSubsequence([4, 0, 4, 1], [[1, -3], [2, 0], [1, 0], [2, -1], [1, 3], [1, 4]]) == 33', 'assert maximumSumSubsequence([0, 2, 0, -5, 4, -2, -6, 6, 5, 5], [[0, -1]]) == 17', 'assert maximumSumSubsequence([-2, 6, 4, 3, 5, 5], [[1, 5], [0, -2], [1, -5], [1, 0], [3, -2]]) == 53', 'assert maximumSumSubsequence([1, 5, -3, 2, -4, 6, 4, 1, -1], [[8, 0], [3, 3], [8, 2]]) == 45', 'assert maximumSumSubsequence([-2, 0, 4, -3, -2, 5, 1, 1, -3, 4], [[5, -1], [7, 1], [5, 0]]) == 27', 'assert maximumSumSubsequence([2, 2, 2], [[2, 0], [1, 1], [0, -4]]) == 5', 'assert maximumSumSubsequence([2, -3, -2, -5, 3, -3, 5], [[4, -1], [6, 4], [5, -4], [6, 1], [0, 1], [2, -3], [2, 3], [0, 5], [4, 1]]) == 50', 'assert maximumSumSubsequence([3, 7, 8, -7, 4, -6, -5, 10], [[6, -2], [5, 0]]) == 50', 'assert maximumSumSubsequence([1, 0, 0, 1, 0, 1, -1, 0], [[1, 0], [3, -1], [3, 1], [0, -1]]) == 10', 'assert maximumSumSubsequence([-1, -5, -2], [[2, -3], [1, -6], [1, 1], [1, 4], [0, 2], [1, -3], [2, 1], [0, -4]]) == 15', 'assert maximumSumSubsequence([-9, 7, -2, 2, 2, -3, 4, 8, -8, -9], [[9, -6], [2, -7]]) == 34', 'assert maximumSumSubsequence([-4, 4, -4, 1, 5, 5], [[1, 3], [4, 1], [2, 2], [0, -3], [4, -6], [5, -3], [5, 6], [3, -4], [2, -3]]) == 77', 'assert maximumSumSubsequence([-6, -2, -6, -2], [[0, 5]]) == 5', 'assert maximumSumSubsequence([2, 9, 5, -3, -10, -8], [[1, 3], [3, 7], [2, 9], [5, 4]]) == 43', 'assert maximumSumSubsequence([4, 2, 8], [[2, -1], [1, -3], [2, -2], [0, -9], [2, -7], [2, 6]]) == 18', 'assert maximumSumSubsequence([0, 0], [[0, 2], [1, 1], [1, 2], [0, 1]]) == 8', 'assert maximumSumSubsequence([-1, 0, 2, 0, 2, -1, -2, 0], [[5, -1], [7, 1]]) == 9', 'assert maximumSumSubsequence([-3, 2, -3, -3, -3, -2], [[2, 0], [3, 1], [4, 0], [3, 2], [0, 1], [5, -1], [3, -3], [1, 1], [2, -1], [1, 2]]) == 26', 'assert maximumSumSubsequence([1, -1, 1, 1, 1], [[3, -1], [3, -1], [2, 1], [0, 0], [1, 1], [0, -1], [2, -1], [0, 1], [0, -1]]) == 21', 'assert maximumSumSubsequence([-7, -6, 6, 1, 5, -1, 2], [[3, 6], [4, -4], [2, -6], [0, -2], [0, 5], [3, 3], [6, -6]]) == 68', 'assert maximumSumSubsequence([5], [[0, -4], [0, -1], [0, -2], [0, 1], [0, -4]]) == 1', 'assert maximumSumSubsequence([-2, -7, -6, 8, -2, -2], [[4, -4], [1, -7], [2, 5], [3, 7], [3, -7], [1, 5], [1, 1]]) == 46', 'assert maximumSumSubsequence([0, -2, 0, 4, 1, -4, -4], [[6, 0], [1, 4], [1, 0], [1, 1], [3, 1], [3, -5], [4, -4], [3, -5]]) == 27', 'assert maximumSumSubsequence([1], [[0, 1], [0, 1], [0, -1], [0, 1], [0, 1], [0, 1]]) == 5', 'assert maximumSumSubsequence([6, 10, 8], [[1, 7], [0, -5], [2, -8], [0, 7], [1, -5], [0, -7], [1, -4], [2, -4], [0, 7], [0, 10]]) == 60', 'assert maximumSumSubsequence([-7, -1, -4, 1, 8], [[1, 8], [2, -4], [3, 7], [2, -4], [1, 5], [1, 5], [4, -7], [1, 8], [4, 7]]) == 132', 'assert maximumSumSubsequence([0, 2, 0], [[1, -1], [1, 1], [2, 1], [0, -1], [1, -2], [2, 3], [2, 3], [0, 1], [0, -1]]) == 17', 'assert maximumSumSubsequence([-6, 8, -4, 5, 1, -9, -2, -5], [[7, -1], [7, -3]]) == 26', 'assert maximumSumSubsequence([2, -5, 2, 4, 6, 5], [[0, 8], [0, -7], [2, -3], [2, -1]]) == 44', 'assert maximumSumSubsequence([-3, -2, -4, 4, -4], [[1, -5], [0, -3], [4, -4], [0, -3]]) == 16', 'assert maximumSumSubsequence([2, 5, 5, -5], [[0, 4], [3, -3], [2, -2], [2, 2], [3, -4], [2, 1], [1, 5], [3, 5], [3, 5]]) == 65', 'assert maximumSumSubsequence([-2, -4, 0, 1], [[3, 2], [1, 2], [2, -3], [2, 0], [2, 1], [1, 4], [3, -3], [0, -2], [0, -3]]) == 36', 'assert maximumSumSubsequence([0, -1, -1, 0, -1, -2, -2, 1, 0], [[3, 2], [0, -2], [8, 1], [0, -1], [2, 0], [5, -2], [5, -2]]) == 21', 'assert maximumSumSubsequence([1, -8], [[0, -8], [1, -2], [1, 3], [1, 1], [1, -3], [0, 8], [0, -3], [1, -1], [1, -8]]) == 12', 'assert maximumSumSubsequence([0, -1, -1, 4, 1], [[1, 0], [2, -3], [0, 0], [1, 2], [1, 1], [2, -4], [4, 4], [3, 1]]) == 38', 'assert maximumSumSubsequence([-5, -9, -3, 7], [[2, -9], [0, 1], [2, 2], [1, -5], [1, 1], [1, 2], [3, -4], [0, 1], [3, -2]]) == 57', 'assert maximumSumSubsequence([-8, 9, 6, 0], [[3, 3], [1, 0], [1, 10], [0, 2], [1, 6]]) == 53', 'assert maximumSumSubsequence([-7, 2, 2, 1, 8], [[4, -3], [0, -6], [2, 7], [2, 4], [1, 0], [1, -8], [1, 5], [3, -5]]) == 36', 'assert maximumSumSubsequence([1, 5, -3, 0], [[2, 4], [0, 3], [0, 3], [3, 0], [2, 2], [1, -3], [0, 0]]) == 38', 'assert maximumSumSubsequence([-1, -2, 0, 1, 2], [[2, -1], [0, -2], [2, 2]]) == 8', 'assert maximumSumSubsequence([1, 0, -1, 0, 1], [[4, 0], [0, 1], [4, 1]]) == 4', 'assert maximumSumSubsequence([0, 3, -3, -1], [[3, 0], [1, 2], [2, 0], [0, 3], [0, 1], [3, 0], [2, 3], [1, 3], [2, 1]]) == 25', 'assert maximumSumSubsequence([-5], [[0, 1], [0, 5], [0, 3], [0, 1], [0, -1], [0, -2]]) == 10', 'assert maximumSumSubsequence([-4, -2, 0, -4, 2, 0], [[2, -4], [4, 5]]) == 7', 'assert maximumSumSubsequence([8, 2, -1, 5, -8, 1, -6, 6], [[4, -6], [1, -5], [6, -7], [2, -2], [1, 3]]) == 100', 'assert maximumSumSubsequence([4, 3], [[1, 4], [1, 3], [1, 1], [1, 0], [1, 3], [0, 0], [0, -6]]) == 26', 'assert maximumSumSubsequence([0, 0, 2, 0, -1, -2, 1], [[5, 2], [3, -1], [1, 1]]) == 12', 'assert maximumSumSubsequence([-4, 2, 1], [[1, 0]]) == 1', 'assert maximumSumSubsequence([-5, -1], [[0, 2], [0, -2], [1, 0], [1, 5], [1, 5], [0, 0], [1, 8], [1, -6], [1, 1], [1, -3]]) == 26', 'assert maximumSumSubsequence([-4, -8, -3, -6, -2], [[2, 3], [2, 6], [4, 7], [4, -1], [3, 6], [0, -4]]) == 40', 'assert maximumSumSubsequence([7, -3, -1, -5, -4], [[4, -7], [3, -9], [3, -2], [0, -1]]) == 21', 'assert maximumSumSubsequence([-3, 8, 2, 1, 7, 8], [[3, -4], [4, 8], [1, 4], [3, 4], [0, 1], [3, -6], [3, -4], [5, -4], [4, -5]]) == 116', 'assert maximumSumSubsequence([0, -2, 2, 2], [[1, -2]]) == 2', 'assert maximumSumSubsequence([-1, -1, 2, -3, 1, -2, -1, 0, 1, -1], [[6, 0], [7, -1], [4, -3], [4, 1], [6, 0], [0, -2], [1, 2], [0, 2]]) == 33', 'assert maximumSumSubsequence([4, 3, 4, -3, -3], [[3, -2], [4, 1], [3, -5], [0, 2], [0, 0], [4, 4]]) == 46', 'assert maximumSumSubsequence([0, 1, 0, 0, 0, 0, -1, 0, 1, -1], [[2, 0], [6, 0], [7, 0], [6, 0]]) == 8', 'assert maximumSumSubsequence([-1, 2, 1], [[1, -1]]) == 1', 'assert maximumSumSubsequence([-3, -3, 0, -3, -2, 1, 2, 4], [[7, -1]]) == 2', 'assert maximumSumSubsequence([4, 3], [[1, 5]]) == 5', 'assert maximumSumSubsequence([5, 4, 10, 8, -8, 8, -10], [[5, 1], [1, 0], [0, 10], [4, 5], [1, -2], [6, -5], [5, 1], [5, 9], [4, 0], [5, -1]]) == 231', 'assert maximumSumSubsequence([7, -2, 3, 0, 2, -3, 4, 6], [[6, -3], [0, 2], [7, 2], [2, 7]]) == 53', 'assert maximumSumSubsequence([-2, 4, 3, -4, -3, 5, -4, -6], [[7, 5], [5, -2], [6, 0], [3, -1], [4, -6], [5, -7], [4, 2]]) == 70', 'assert maximumSumSubsequence([-2, 5, 5, 3, -3, 1], [[4, 4], [4, 5], [4, -1], [5, 1]]) == 37', 'assert maximumSumSubsequence([-2, -2, 2, 0, -1, 0, -1], [[0, 1], [3, 2], [3, 0], [2, 0], [6, -1], [4, 0], [6, -2], [3, -1], [6, 2]]) == 17', 'assert maximumSumSubsequence([4, 5, 3, -4, -1, 5, 1, -4, 3, -4], [[1, 0], [7, -1], [5, 2], [4, 4], [3, -3], [0, -4], [0, -4], [6, 2]]) == 106', 'assert maximumSumSubsequence([-1, -8, -5, 0, -4], [[0, 4], [0, 6], [3, 2], [1, 9]]) == 29', 'assert maximumSumSubsequence([0, 0, 0, 0, -1, -1, -1], [[1, -1], [4, 1], [1, 0], [0, 1], [4, 1], [3, 1], [4, 1], [0, 1], [0, 0], [6, -1]]) == 14', 'assert maximumSumSubsequence([-1, 8, -2, -10, 1, -8, 9], [[5, -9], [6, -6], [0, 8], [4, 9], [6, 0], [3, 5], [5, 9]]) == 109', 'assert maximumSumSubsequence([-1, -1, 0, 0], [[2, 0], [0, -1], [0, -1], [3, 1], [1, 0], [2, 0], [1, 1], [2, -1]]) == 7', 'assert maximumSumSubsequence([-4, 3, 1, 7, 4, 5, 6, 3, 5], [[0, -7], [8, -1], [8, -3], [7, -4], [6, 2]]) == 88', 'assert maximumSumSubsequence([0, -8, 7, 0, 10, 3, -1, 1, 6], [[6, 5], [6, 5], [1, -6], [5, -10], [6, 2], [2, -6], [0, -7], [8, -2]]) == 185', 'assert maximumSumSubsequence([3, 0, 3, -7, -4, 1, 4, -3, -1], [[6, 5], [0, 5], [1, 1], [7, 4], [5, -1], [7, -7]]) == 76', 'assert maximumSumSubsequence([2, -3, 2, 3, -2, 1, -1, 1], [[6, 3], [2, 1], [4, -3], [4, -3], [5, 0], [4, 2], [4, 0], [7, 0]]) == 64', 'assert maximumSumSubsequence([-3, -8, -6, -7, 5, -9], [[0, -8], [3, 4], [1, -6], [4, -3]]) == 19', 'assert maximumSumSubsequence([5, -5, 1], [[1, -2], [2, 4], [2, -3], [2, 4], [1, -4], [0, -1], [2, -5], [2, 3], [0, 1], [1, -4]]) == 53', 'assert maximumSumSubsequence([1, -1, 2, -1, -1, -1, -2], [[5, 2], [4, -1], [5, 2], [0, -2], [2, 0], [0, 0]]) == 23', 'assert maximumSumSubsequence([1], [[0, 2], [0, 2], [0, 0], [0, 2], [0, -2], [0, -1], [0, 0], [0, 1]]) == 7', 'assert maximumSumSubsequence([-1, 0, 1, 1], [[1, -1], [2, 1], [1, -1], [3, -1], [0, -1], [1, 1], [1, -1]]) == 7', 'assert maximumSumSubsequence([-3, 1, 2, -1, 1, 1], [[4, -2], [3, -1], [4, -1], [0, -1], [4, -3], [5, -1], [5, 1], [3, -3], [1, 1]]) == 26', 'assert maximumSumSubsequence([5, 9, 0, -6, 6, -1, 4, -7, -7], [[3, 3], [5, -8], [5, -9], [0, -1], [4, 7], [6, -3], [2, -9]]) == 128', 'assert maximumSumSubsequence([2, -2, 1, 1, 0], [[1, 0], [2, 0], [4, -2], [3, -1], [1, 2], [3, 0], [0, 2]]) == 17', 'assert maximumSumSubsequence([-2, -1, 3, -2, -3, 2, -1, -3, -3, 0], [[3, 3], [6, 3], [2, 1], [3, 0]]) == 21', 'assert maximumSumSubsequence([1, 1], [[0, 2], [1, 2], [1, -2], [1, 1]]) == 8', 'assert maximumSumSubsequence([2, 2, -7], [[1, -6], [2, 0], [1, -2], [1, 0], [1, 5], [0, -1], [2, -6]]) == 23', 'assert maximumSumSubsequence([3, 2, -1, 1, -3, 6, -5, -1, -5, -4], [[2, 2], [9, -3], [7, 5], [7, 1], [4, 2], [1, 4]]) == 74', 'assert maximumSumSubsequence([8, 2, -3, -1, 6, 7, 2, -3, 5, -8], [[6, 2], [4, 1], [0, 5], [7, 8], [0, -8], [4, 5], [7, 1], [6, -3], [6, 7]]) == 159', 'assert maximumSumSubsequence([4, -3, -1, -2, -6, 5, 4, 6, -7, -1], [[0, 6], [1, 5], [8, -3], [9, -7], [8, -3], [8, 4], [4, 1], [7, -2], [4, -7], [3, -1]]) == 164', 'assert maximumSumSubsequence([-2], [[0, 3], [0, 4], [0, 2], [0, 1], [0, -1], [0, 1]]) == 11', 'assert maximumSumSubsequence([-7, -7, -2, -3, 6, 6, 3, 3], [[5, 5], [6, 1]]) == 18', 'assert maximumSumSubsequence([3, -3, 0, 0, 3, -3], [[3, -2], [4, 0], [2, -1], [2, 0], [1, -3], [2, 2], [1, -2]]) == 28', 'assert maximumSumSubsequence([-1, 0, 0, 1, -1, -1, 1, 1, -1, -1], [[3, -1], [5, -1], [9, -1], [3, -1], [9, 0], [9, 0], [9, -1], [9, 0], [7, 1]]) == 9', 'assert maximumSumSubsequence([1, 1, -1, 1, 1, -2, -2, 1, -2, 1], [[6, 1], [3, 2], [7, 3], [6, 0], [6, 2], [8, 3], [6, 1], [5, 0]]) == 52', 'assert maximumSumSubsequence([-2, 0, 3, -3, 1, 2], [[3, -1], [4, -2], [3, -1], [4, 0], [3, 2], [3, -2], [5, -3], [3, 2], [0, -3], [1, 2]]) == 43', 'assert maximumSumSubsequence([0, 1, 2, 3, 2, 1], [[1, -3], [3, 2], [1, 1], [3, -3], [1, -3], [3, -3]]) == 24', 'assert maximumSumSubsequence([-2], [[0, -1], [0, 3], [0, -1], [0, 1], [0, 1], [0, 4], [0, 3], [0, 3], [0, 1], [0, -3]]) == 16', 'assert maximumSumSubsequence([2, -6, 4], [[0, -4], [2, -3], [2, 6], [2, -2], [2, 2], [2, -7], [1, 1], [2, -6], [0, -4]]) == 15', 'assert maximumSumSubsequence([-4, 3], [[1, -5], [0, 1], [0, -5], [1, -3], [0, -1]]) == 1', 'assert maximumSumSubsequence([7, 5, 0, 4, -7, -5, -2], [[6, -7], [5, 6], [6, 4], [2, 6], [6, -2], [5, 5], [5, 3], [2, -5], [5, 1], [1, -3]]) == 155', 'assert maximumSumSubsequence([-1, 1, 1, 1, 0], [[3, 1], [4, 1], [1, -1], [3, -1], [0, 1], [3, -1], [3, 0]]) == 17', 'assert maximumSumSubsequence([-1], [[0, -2]]) == 0', 'assert maximumSumSubsequence([-4, -4, 0, 1, 1, -5, -3, 2, 5, 5], [[5, 1]]) == 9', 'assert maximumSumSubsequence([-6, -5, -5, -10, 1], [[1, 8], [2, 6], [3, 9], [1, 2], [4, -2], [2, -3], [4, -4], [1, 1], [3, 0]]) == 90', 'assert maximumSumSubsequence([-3, 5, 0, -7], [[2, -4], [2, 3], [2, 1]]) == 15', 'assert maximumSumSubsequence([-1], [[0, 0], [0, 0], [0, 3]]) == 3', 'assert maximumSumSubsequence([2, 6, 10, -7], [[0, -5], [0, 10], [1, -8], [3, 2], [1, -4], [2, -5]]) == 102', 'assert maximumSumSubsequence([1, -3, 0], [[0, -5], [1, -2], [2, 4], [1, -3], [0, -2], [2, -1], [2, 4], [1, 3], [0, -4], [2, -4]]) == 27', 'assert maximumSumSubsequence([0], [[0, 1], [0, -1], [0, -1]]) == 1', 'assert maximumSumSubsequence([3], [[0, 1], [0, 1], [0, 3], [0, 0], [0, -1], [0, -3], [0, -2], [0, -1]]) == 5', 'assert maximumSumSubsequence([-1, 4, -8, 1, -1, -6, -9, 1], [[0, -6], [5, -5], [3, -8], [2, -10], [5, -2], [6, 6], [2, 8], [6, 4]]) == 63', 'assert maximumSumSubsequence([2, 2, 2, 0], [[1, 0], [3, -1]]) == 8', 'assert maximumSumSubsequence([6, -1, 2, 6, -3], [[3, 4], [0, 0], [0, 2], [0, -1], [1, 5]]) == 33', 'assert maximumSumSubsequence([2, -5, -2, -2, 6, -9, 9], [[4, 5]]) == 16', 'assert maximumSumSubsequence([-4, -3, -1, 0, 3, 3, -2, 1, 2], [[5, 0], [1, -6], [8, -2]]) == 14', 'assert maximumSumSubsequence([1, -2, -3, 4, 1], [[4, 2], [0, 2]]) == 11', 'assert maximumSumSubsequence([-9, -10, -9, -6, 9, 9, -7, -6], [[4, -7], [1, -10], [4, 4], [2, -10], [6, 2], [0, -7], [3, -9], [7, -2]]) == 72', 'assert maximumSumSubsequence([-7, -3, -7, 7, 1, 1, -2, -5], [[6, -1], [0, -5], [2, 8], [3, -4], [7, 3], [2, -2], [3, 7], [4, 0]]) == 72', 'assert maximumSumSubsequence([-2, -9, -1, 4, 1, 0, -10, 7], [[4, 5], [5, -10], [0, -1], [1, 9], [2, 0], [2, -10], [1, 3], [6, 9], [0, -6]]) == 148', 'assert maximumSumSubsequence([-6, 4, 1, 5, -1, -3, -6, 4, -6, 1], [[2, 3], [4, -4], [8, -4], [1, 1], [7, -3], [3, 0]]) == 64', 'assert maximumSumSubsequence([-1, -1, 1, -1, -1, -2, 2, 1, 2, 0], [[4, 0], [7, 2], [7, -1], [8, 2], [0, -1], [3, -1], [5, 1]]) == 35', 'assert maximumSumSubsequence([4, -9, 5, -4, -4, 6, -5, 6, -5, 6], [[8, 5], [7, -6], [2, -3], [7, 0], [6, 1], [2, 4], [3, 2], [2, -1]]) == 154', 'assert maximumSumSubsequence([-4, 0, 5, -1, 0], [[0, 5], [0, 0], [3, 4], [0, -4]]) == 25', 'assert maximumSumSubsequence([2], [[0, -4], [0, 6], [0, 7], [0, 5], [0, 7], [0, 7], [0, -1], [0, -2], [0, 1]]) == 33', 'assert maximumSumSubsequence([-3, 2], [[1, 0], [1, 4], [0, 3], [1, 1], [0, 0], [1, -3], [0, 0], [0, 2]]) == 14', 'assert maximumSumSubsequence([0, -1, 0, -1, -1, 1, -1, -1, -1], [[3, 1]]) == 2', 'assert maximumSumSubsequence([-2, -9, 3, 2, 4, -3, 7, 9, -7], [[6, 9], [2, -8], [0, 2], [4, -10], [2, 6], [7, 5], [1, -8]]) == 108', 'assert maximumSumSubsequence([10, -10, -9, 5, 6, 2, -5, -8, -8, 1], [[3, 5], [1, 5]]) == 36', 'assert maximumSumSubsequence([1, 1], [[0, -1]]) == 1', 'assert maximumSumSubsequence([0], [[0, 5], [0, -2], [0, 5], [0, 1], [0, -4], [0, -2], [0, -5], [0, -4], [0, 1], [0, 2]]) == 14', 'assert maximumSumSubsequence([-1, -1, -1, 0, 0, -1, -1, -1, 1, -1], [[6, 1], [4, 0], [5, 1], [5, -1], [9, 1], [0, 1], [5, -1]]) == 16', 'assert maximumSumSubsequence([5, 4, -6, -4, 3, 0, -1, 6, -3, 3], [[3, 6], [7, 5], [4, 0], [5, -5], [6, 3], [6, 1], [0, -1]]) == 133', 'assert maximumSumSubsequence([1, 1], [[1, 1], [0, -3], [0, 5], [0, -2], [1, 6], [1, -7], [1, -4]]) == 14', 'assert maximumSumSubsequence([8, 3, 4, -1, -6, -3], [[4, 6], [0, -3], [1, 6], [3, -3], [2, 6], [2, -8], [4, -5], [3, 5]]) == 93', 'assert maximumSumSubsequence([1, -3, -3, -1, -2, 1, 0, -3, 1], [[5, -1], [7, 0], [6, 3], [1, 3], [2, 3], [0, -2], [7, -3], [2, 0]]) == 45', 'assert maximumSumSubsequence([8, 5], [[0, 2], [0, -6]]) == 10', 'assert maximumSumSubsequence([6, -4, 5, 6], [[2, 8], [3, -6], [3, -7], [3, -2], [1, -7], [1, 6], [2, -7], [2, 3], [3, 5]]) == 110', 'assert maximumSumSubsequence([-3, -4, -1, -1, 1, -4, -3, 1, 2], [[5, 0], [6, 3], [0, 0], [4, -2], [4, -1], [7, -3], [7, -1], [3, -1], [6, -1], [3, 0]]) == 44', 'assert maximumSumSubsequence([1, 1, 4, -3, 0, -2, -4, -1, 3, 2], [[7, -1], [1, 4], [3, 1], [2, 3], [6, 4], [0, 2], [3, -2], [9, 2]]) == 80', 'assert maximumSumSubsequence([1, -1, -2, 0, -1], [[4, 1], [1, 2], [3, -2], [1, 1], [2, 3], [2, 3], [0, 2], [3, 3], [2, -3], [4, 1]]) == 42', 'assert maximumSumSubsequence([2, 9, -8, -1, -7], [[3, 6], [4, -5], [2, -6]]) == 45', 'assert maximumSumSubsequence([1, 1, 10], [[1, 5], [0, 5], [2, -1], [0, -8]]) == 36', 'assert maximumSumSubsequence([-8, 8, -10, -10, 6], [[1, -10], [2, -9], [4, 4], [0, 1], [2, -2], [2, 8]]) == 39', 'assert maximumSumSubsequence([3, -7, 6, 1, -3, 3, -1, 2], [[4, -1], [7, -5], [6, -6]]) == 38', 'assert maximumSumSubsequence([0, -1, 0, 2, 0], [[1, 1], [1, -1], [3, 2], [4, -2], [3, -2], [1, 0]]) == 9', 'assert maximumSumSubsequence([0, -3], [[0, -2], [0, 6], [1, -8], [1, -8]]) == 18', 'assert maximumSumSubsequence([1, 1], [[0, 0], [1, -1], [0, 0], [1, 1]]) == 2', 'assert maximumSumSubsequence([5, -4, -2, -2, -7], [[4, 0], [4, 0], [2, -1], [1, -8], [4, -10], [2, -2], [3, -5]]) == 35', 'assert maximumSumSubsequence([5, 1, 3, -3], [[2, -5], [1, -3], [3, -4], [1, 6], [0, 5], [0, 2], [0, -2], [0, 4], [1, -4], [3, 1]]) == 54', 'assert maximumSumSubsequence([5, 0, 4, 2, -5, -3, 3, 4, 5, 0], [[8, -3], [1, 3], [8, 3]]) == 41', 'assert maximumSumSubsequence([0, 0, -1, 0, 2, -1, -1, 2], [[3, -1], [3, 2]]) == 8', 'assert maximumSumSubsequence([2, -5, 0, 5, 1, -2, -2, -4, 4, 2], [[2, -5], [1, 0], [5, -4], [0, -2], [9, 2], [2, 1]]) == 60', 'assert maximumSumSubsequence([-3, 0], [[1, 1], [1, 1], [0, -3], [1, -2], [1, 1], [0, 1], [1, 2]]) == 7', 'assert maximumSumSubsequence([-3, -2, -1, -3, 4, 2, -4, -1, 1], [[1, -1], [3, 0], [0, -1], [6, -4], [1, -4], [8, -3], [5, 1], [6, -1], [7, 2]]) == 43', 'assert maximumSumSubsequence([1], [[0, -4], [0, -4], [0, 3], [0, 1], [0, 4], [0, 3], [0, 2], [0, 3], [0, -3], [0, 3]]) == 19', 'assert maximumSumSubsequence([4, -4, 2], [[2, 2], [1, -3], [1, -5], [0, 0], [0, 1], [0, 5], [2, -4], [0, 5], [2, 3]]) == 48', 'assert maximumSumSubsequence([0, -2, 2, 0, -2, -1, 2], [[2, -2], [1, 1], [1, 0], [0, -1], [3, -2], [5, 0], [0, 1]]) == 16', 'assert maximumSumSubsequence([-1], [[0, -2], [0, 0], [0, -2], [0, 1], [0, -2], [0, -2], [0, 1], [0, 0], [0, -2], [0, -2]]) == 2', 'assert maximumSumSubsequence([-3, 3, 2, 1, 5, 5, -7], [[3, 1], [0, 2], [3, 5], [3, 2]]) == 41', 'assert maximumSumSubsequence([1], [[0, 0], [0, 4], [0, -3], [0, 0], [0, -2], [0, -4], [0, -1]]) == 4', 'assert maximumSumSubsequence([-1, 1, 2, 2, 0, 2, 1, 1, 2, 2], [[3, -1], [5, 2], [1, 2], [2, 1], [5, -1], [6, -2], [0, -1]]) == 43', 'assert maximumSumSubsequence([-4, 5, 4, -3, -4, 4], [[4, -1], [4, 0], [3, 0], [1, -2], [4, -3], [4, 0], [1, 0], [3, 3]]) == 67', 'assert maximumSumSubsequence([-4, -3, -1, -1, 0, -1, 5, 1], [[0, -2], [3, 5], [0, -3], [4, 2], [3, -4], [7, 2]]) == 49', 'assert maximumSumSubsequence([10, -5, 2, -7], [[0, 1]]) == 3', 'assert maximumSumSubsequence([-8, 3, 2, -4, 2, 9, -1, 2], [[0, -5]]) == 14', 'assert maximumSumSubsequence([-2], [[0, 0], [0, -1], [0, -2]]) == 0', 'assert maximumSumSubsequence([2, 0], [[1, -1], [1, -6], [1, 4], [0, 4], [1, 0], [0, -4], [1, 2]]) == 18', 'assert maximumSumSubsequence([0, -3, 1, 3, -3, -3, 3, -2, -3, -2], [[2, -2], [1, 2], [3, -4], [2, -2], [4, -4], [9, 1]]) == 35', 'assert maximumSumSubsequence([1, -1, -2, 2, 1, 1, -2, 1], [[1, -1], [5, -1], [7, 1], [3, 1], [5, 0], [0, -1]]) == 21', 'assert maximumSumSubsequence([6, 0, 4, -7, -7, 3, -9, -4, 6, -5], [[8, 9], [0, 3], [6, 8], [1, 5], [6, -5], [8, -8], [9, 2], [8, -2]]) == 142', 'assert maximumSumSubsequence([-1, 2, -1], [[0, -1], [0, 0], [0, -2], [1, -2]]) == 6', 'assert maximumSumSubsequence([-1, -1, -1, 0, -1], [[3, 1], [1, -1], [1, -1]]) == 3', 'assert maximumSumSubsequence([1, 1, 1, 0, 1, -1, 0], [[2, 1], [1, 1], [3, -1]]) == 9', 'assert maximumSumSubsequence([2, -2], [[0, 1], [0, 3], [1, 3], [0, -2], [0, 1], [0, 0], [1, -1], [0, 3], [0, 3], [0, 2]]) == 24', 'assert maximumSumSubsequence([3, 3, -4, 2, 3, -4, 1, 4], [[1, -2], [1, -3], [3, 1]]) == 30', 'assert maximumSumSubsequence([-2, 3, 3, 0, 1, -1, 2], [[4, 2], [6, -2], [1, 4], [1, 2], [6, -3]]) == 28', 'assert maximumSumSubsequence([-1, 0, 2, -1, 0, 0, 0], [[4, 2]]) == 4', 'assert maximumSumSubsequence([-4, 0, -4, 0, -2, 0, 3, -4], [[3, -4]]) == 3', 'assert maximumSumSubsequence([3, -4, 4, -3], [[2, -2], [1, 6], [1, -2], [1, -1]]) == 15', 'assert maximumSumSubsequence([-4, -3, 2, 5, 1, 0, 3, -4, 2], [[4, -4], [5, 0], [0, -5], [6, 1], [3, -5], [4, 4], [2, 4]]) == 63', 'assert maximumSumSubsequence([3, -3, 3, -4, 0, 1, 4, -4, -4], [[6, -1], [0, -3], [3, 2], [8, 0], [3, 4], [8, -1], [0, -3], [2, 1]]) == 39', 'assert maximumSumSubsequence([3, -2, 1, 2, 0, -3, -2, -2, 2, 0], [[1, 3], [0, 3], [8, 1], [5, -3], [9, -1], [6, 0]]) == 38', 'assert maximumSumSubsequence([1, 1, 1, 2, 0, 1, 0, 0, 1], [[7, -2]]) == 5', 'assert maximumSumSubsequence([-1, 1, 0, 0, 0], [[1, 0], [1, -1], [2, -1], [3, -1], [4, 0], [4, 0], [4, 1], [1, 1]]) == 3', 'assert maximumSumSubsequence([0, -2, 0, -1, 0, -2, 0, 1, -2], [[1, 1], [2, 2], [2, 0], [3, 2], [8, 1], [8, 2], [8, 1], [3, 1], [3, -1], [0, 0]]) == 31', 'assert maximumSumSubsequence([-1, 2, -5, -6, -4, -7], [[4, -7], [5, 3], [4, -3], [4, -5], [3, -9], [2, 9], [5, 7], [3, -2], [5, 9], [0, -5]]) == 102', 'assert maximumSumSubsequence([2], [[0, 7], [0, -7], [0, -4], [0, -6], [0, -3], [0, -2]]) == 7', 'assert maximumSumSubsequence([-2, 8, 6, 1, -3, 0, 3, 3], [[3, 7], [6, 6], [1, 4], [7, -2], [6, 5], [6, -8], [3, 4], [7, 8], [1, 4], [2, -2]]) == 156', 'assert maximumSumSubsequence([-4, -2], [[0, 4]]) == 4', 'assert maximumSumSubsequence([-1, 0, 2, 0], [[0, -2], [1, 1], [3, -2], [2, -1], [3, -2], [2, 1], [3, 0], [0, 1], [0, 0]]) == 13', 'assert maximumSumSubsequence([3, 3, -3, -3], [[1, 6], [3, 5], [0, 0], [2, 3], [0, -6], [2, -4], [0, 2], [2, 5]]) == 83', 'assert maximumSumSubsequence([-3, 8, 5, 6, 1], [[2, 7], [1, 7], [4, 8], [3, 5], [1, -6], [2, 8], [1, -2]]) == 104', 'assert maximumSumSubsequence([-2, -3, -2, -4, -1, 0, -1, 0, 3, -3], [[0, -2], [4, -3], [5, -3], [1, -3], [2, -2], [3, 2], [5, -1], [0, -4], [1, 1], [9, 2]]) == 42', 'assert maximumSumSubsequence([3, 6, 4, -6, -3, -3, -5, -3, -3, 5], [[3, 0], [6, -6], [6, -6], [0, 4], [3, -4], [0, 1], [5, -1], [9, 5], [2, 6]]) == 107', 'assert maximumSumSubsequence([3, -3], [[0, -3], [1, -5], [0, 1], [1, 0]]) == 2', 'assert maximumSumSubsequence([-3, 4, 2, -1, -2], [[4, -2]]) == 4', 'assert maximumSumSubsequence([5, -5, -2, -3, -3], [[4, 1], [2, 1], [0, 3], [1, 1], [0, 2], [1, -2]]) == 31', 'assert maximumSumSubsequence([-1, 1, 1, 0, 1, 1, -1], [[6, 0], [0, -1], [2, -1], [0, 0], [3, 0], [4, -1], [4, -1], [0, -1], [5, -1]]) == 17', 'assert maximumSumSubsequence([-6], [[0, -1], [0, -3], [0, 3], [0, -6], [0, 1], [0, 0], [0, -6], [0, 2], [0, 2], [0, 1]]) == 9', 'assert maximumSumSubsequence([2, 2], [[1, 1], [0, 0], [1, -2], [0, 0], [0, -1], [0, -2], [0, -1], [1, -2], [0, -2]]) == 3', 'assert maximumSumSubsequence([-1, 3, 3, -1], [[3, 1]]) == 4', 'assert maximumSumSubsequence([0, 5, 3, 4], [[0, -2], [2, -4], [2, 1], [0, -5], [1, 4], [2, -3], [1, 4], [0, 2], [3, -3], [0, 1]]) == 76', 'assert maximumSumSubsequence([1, 0, 0, 1, -1, 2, 0], [[3, 0], [2, 0], [5, 0], [6, -1]]) == 8', 'assert maximumSumSubsequence([-3, -2, -4, -4, 0, 1], [[0, 4], [4, 2], [3, -4], [5, -1], [0, -3], [5, -2], [0, 4], [5, 4], [2, -3]]) == 49', 'assert maximumSumSubsequence([4, -2], [[0, 5], [0, 2], [1, -7], [0, -6], [1, -2], [0, -6], [1, 4]]) == 13', 'assert maximumSumSubsequence([-5, -7, 3, -6, 2, -7, 3, -5, 3, 2], [[2, -3], [8, 6], [6, -2], [7, 1], [6, 3], [3, -5], [7, -1], [9, -7]]) == 79', 'assert maximumSumSubsequence([-6, -2, -3, -3, 1, 3, -1, 2], [[5, 0], [0, -7], [3, 1], [7, -4], [6, -1], [7, 6], [1, 7], [1, -2]]) == 39', 'assert maximumSumSubsequence([-2, 3, 7, -1, -4, 6], [[1, -4], [5, -9], [1, 0], [0, 3], [2, -5], [5, -4], [1, -7]]) == 46', 'assert maximumSumSubsequence([-1, -2, -4], [[2, 0], [2, -4], [0, 8], [2, -6], [2, 7], [2, -8], [0, 0]]) == 39', 'assert maximumSumSubsequence([1, 4, 2, -6, 5], [[1, 0], [3, -4], [2, 1], [3, 1], [3, 2], [0, 0], [0, 3], [1, 3]]) == 61', 'assert maximumSumSubsequence([2, -4, -3, -3, -2, 4, 2, 3], [[6, 4], [0, 2]]) == 18', 'assert maximumSumSubsequence([-1, 0, -1], [[2, 1], [0, 1], [1, -1]]) == 5', 'assert maximumSumSubsequence([-4, 2, 1, 4], [[0, 3], [2, 2], [0, -4]]) == 20', 'assert maximumSumSubsequence([-4, -3, 1, -2, 5, -4, -2], [[6, -4], [6, -1], [2, 4], [3, -2], [5, 4], [6, 2], [6, 2], [2, 3]]) == 71', 'assert maximumSumSubsequence([0, 8, 9], [[1, 3], [0, 9], [1, -2]]) == 45', 'assert maximumSumSubsequence([4, -3], [[0, -6], [0, 3], [0, -5], [0, -2], [1, 5], [1, 6], [1, 3]]) == 17', 'assert maximumSumSubsequence([1, -3], [[1, -4], [1, -1], [0, 3], [1, 2], [0, -2], [1, 1], [0, 0]]) == 12', 'assert maximumSumSubsequence([0, 2, 1, -2, -2], [[3, -1], [4, -2], [4, 1]]) == 7', 'assert maximumSumSubsequence([-1, -2, 0], [[2, -1]]) == 0', 'assert maximumSumSubsequence([-7, 0, -1, 0, -1, 1, 2], [[2, 3]]) == 5', 'assert maximumSumSubsequence([0, -3, 3, 1, -1, 3, -1], [[3, -3], [0, 1], [3, 3], [5, -2], [6, 3]]) == 31', 'assert maximumSumSubsequence([-2, -3, -1, 4, 1, -4], [[5, -5]]) == 4', 'assert maximumSumSubsequence([-2, 2, 4, -4, 3], [[1, -3], [0, -3], [1, -4], [3, -3], [2, -4], [0, -1], [1, -2], [3, -3], [1, -2]]) == 43', 'assert maximumSumSubsequence([-6, -6, -3, 5], [[1, -1], [1, -4], [0, -5], [3, -5]]) == 15', 'assert maximumSumSubsequence([0, -1, 1, 2], [[3, -2], [1, 2], [2, 1], [3, -1], [1, 2], [0, -2], [1, 1], [2, -1], [3, 2]]) == 16', 'assert maximumSumSubsequence([-4, -2, 8], [[0, -5], [2, 7], [2, 2], [1, 5], [1, -4], [0, 0]]) == 26', 'assert maximumSumSubsequence([5, -3, 5, 0, 9, 2, 4, 9, 6, 5], [[4, -6], [5, -6], [2, -8], [2, -2], [3, -4], [0, 6]]) == 127', 'assert maximumSumSubsequence([4, -4, 1, 0, 6, -3, 2, 2], [[7, 4], [4, -3], [0, 0], [1, 6], [7, -3], [3, 2], [1, 2], [1, -4]]) == 67', 'assert maximumSumSubsequence([-1, -2, -1, -2, -2, 2, -1, 1], [[4, 2], [1, -1]]) == 6', 'assert maximumSumSubsequence([-7, -8, -4, 8, -7, -1, -4, 5, 8], [[2, 8], [2, 0], [3, 5], [6, -1], [2, -3], [7, 7], [0, -5], [3, -3], [4, 5]]) == 118', 'assert maximumSumSubsequence([6, -4, -3, 3, 0, -3, -6], [[5, -5], [6, 2], [4, -6], [6, -3], [2, 6], [3, 5], [3, -4]]) == 76', 'assert maximumSumSubsequence([2, 4, 5, -7, 10], [[0, -3], [4, 8], [1, -4], [1, -4]]) == 54', 'assert maximumSumSubsequence([6, -2, -5, 6, 4, -5, -7, 6, 2], [[1, 5], [0, 1], [5, -5], [2, 7], [5, 2], [4, 6], [1, -2], [4, -3]]) == 145', 'assert maximumSumSubsequence([-4, 3, -4, -6, -1, 0, 6, -6], [[4, 2], [6, -2], [5, 0], [2, 6], [2, -6], [2, 4], [6, -1], [2, -4], [2, 5], [5, -5]]) == 65', 'assert maximumSumSubsequence([5], [[0, 1], [0, 4], [0, 4], [0, -2], [0, 2], [0, -5], [0, -5]]) == 11', 'assert maximumSumSubsequence([6], [[0, -5], [0, -5], [0, 4], [0, -5], [0, -3], [0, 3], [0, -2], [0, -2], [0, -2], [0, 0]]) == 7', 'assert maximumSumSubsequence([0, 2, 1], [[1, 0], [1, -2], [0, 0], [2, 1], [1, 2], [1, 3], [0, 3], [2, 1]]) == 17', 'assert maximumSumSubsequence([-3, 1, -3, -2, -3, -4], [[1, 1], [3, -3], [1, -1], [0, -4], [1, 1], [4, 4], [2, 2]]) == 14', 'assert maximumSumSubsequence([-4, 0, 4, -7], [[2, 7], [3, -7]]) == 14', 'assert maximumSumSubsequence([-7, 2, -7, -6, -7, -8, -10, 0, -4], [[7, -8], [7, 5], [5, 7], [2, -3], [2, 0], [4, 3], [5, 4], [2, 5], [5, 1], [0, -2]]) == 116', 'assert maximumSumSubsequence([5, -2, -3, -3, -5, 6, -1, -4, 7], [[1, 4], [0, -3]]) == 35', 'assert maximumSumSubsequence([-3, 3, 2, -2, 2, -1, -3, 3], [[0, 1], [2, 2], [3, 3], [1, 1], [6, -3], [7, -1], [3, -2], [3, 3]]) == 56', 'assert maximumSumSubsequence([-1, 7, -8, 9, -4, -5, 9], [[6, -2], [2, -1]]) == 32', 'assert maximumSumSubsequence([14, -10, -52, -51, 58, -57, 23, 29, -68, 42, 11, -31, -66, -65, 44, -23, 67, -53, -52, 43, 64, -37, 16, -23, 65, -33, -16, 0, -7, 26, -62, 31, 17, 69], [[26, 61], [2, -16], [16, -58], [14, -15], [24, 2], [32, 67], [3, -42], [17, -1], [32, 8], [32, -23], [22, 37], [30, -14], [0, 58], [12, -50], [16, 4], [15, -37], [1, -51], [11, 7], [8, 46], [3, 16], [6, 18], [5, 58], [6, -7], [22, 0], [9, 49], [31, 34], [17, 61], [6, 28], [4, 50], [33, -66], [13, 33], [19, 46], [4, -31], [16, -34], [25, -6], [12, 46], [10, 61], [17, 67], [32, 15], [20, 5], [5, -1], [7, -38], [32, -64], [26, 30], [0, 47], [3, 17], [11, 2]]) == 22758', 'assert maximumSumSubsequence([42, 47, -47, -30, -51, -21, 38, -60, 27, -38, 50, -24, 52, -26, 21, -59, -25, -17, -51, 42, -43, -41, 53, -7, 21, -45, 6, -16, 28, -60, 34, 58, 11, -30, -42, 14, 12, 14, 51, 20, -22, -4, 30, 9, -13, -29, -49, 44, -41, 30, -55, 47, 20, -58, 40, -39, -44, -41, 1, 60, -10, -44, -33, 5, -18, 48, 33, -17, 0, -18, 10, 21, -31, -25, -35, 28, 46, -40, 3, 7, -17, 14, 48, 53, 40, -48, -2, 27, -44, -3], [[86, 56], [68, 27], [3, -1], [83, 41], [44, 10], [53, 6], [3, 40], [25, 45], [70, 9], [42, -2], [84, 55], [63, -17], [42, 13], [27, 12], [12, 51], [26, 7], [50, 53], [57, 20], [15, 43], [73, -8], [64, -22], [52, -19], [47, -5], [37, 22], [9, -4], [37, -50], [73, -19], [25, 50], [13, 13], [83, 17], [50, -11], [8, -19], [82, 58], [2, -44], [72, -36], [26, 8], [5, 23], [87, -49], [11, 60], [37, 49], [22, 7], [85, -48], [43, -1], [52, -7], [14, -2], [55, -6], [64, -36], [40, -2], [37, 28], [15, 5], [58, 44], [58, 54], [75, 56], [41, -6], [73, -36], [62, 11], [83, 39], [50, -51], [3, 38], [84, -21], [21, -57], [89, -17], [34, -52], [44, -6], [48, 11], [48, -12], [23, -33], [16, 49], [19, 30], [12, -37], [68, -14], [89, 51], [6, -23], [34, 26], [18, 20], [89, -57], [15, 43], [89, -16], [22, 16], [21, 6], [48, 20], [72, 37], [43, -36], [70, -6], [32, 42], [85, -53], [77, -60], [31, -16], [32, -17], [21, -26], [65, -5], [59, -14], [64, 37]]) == 97590', 'assert maximumSumSubsequence([31, 75, -51, -41, -14, 17, -26, 14, -28, -35, 50, -24, 23, 28, 68, -75, -77, 50, 36, 17, -24, -39, 64, 42, 0, -74, -39, 48, 57, -8, -18, -30, 75, -32, -60, 10, -46, -49, -16, -16, 71, 47, -43, 16, 18, 23, 68, -6, 53, 29, -42, 23, 68, 33, 17, -64, 17, -64, 36, 22, -54, -37, 7, -14, 22, 22, -6, 21, -55, -16, -31, -10, -78, -44, -16, -25, -65, -73, 14, -61, 44, -5, -41, -35, -57, -29, 41, 3, -78], [[24, -30], [80, -41], [76, 44], [64, -6], [35, -3], [27, 11], [39, 27], [60, 6], [16, 6], [63, -76], [37, -50], [79, -64], [19, 52], [12, -4], [7, 6], [64, 70], [19, -60], [39, 30], [68, -68], [57, -10], [60, 42], [29, 67], [21, -53], [69, -68], [62, 61], [42, 7], [49, 59], [13, 43], [17, 66], [2, -62], [8, 45], [79, -21], [45, 75], [35, 8], [63, -65], [9, 66], [6, -54], [57, 4], [25, -28], [66, -8], [68, -14], [82, 26], [68, -61], [1, -39], [63, -26], [54, -28], [38, -2], [48, 76], [51, 54], [81, 78], [86, 72], [13, 78], [46, -60], [73, 6], [21, -35], [42, 14], [5, 28], [8, -44], [9, 73], [8, -29], [49, 78]]) == 69824', 'assert maximumSumSubsequence([17, -3, -14, 7, 2, 3, -16, 18, 11, 11, -3, 2, 4, -7, 9, 15, -11, -17, -5, 6, -6, -3, 11, -19, 14, 16, 17, 2, 6, 20, -15, -15, 3, 14, -17, -14, 1, 13, -17, 4, -13, -10, 20, 0, 13, -3, 2, -12, 15, 11, 7, -14, -20, -14, -5, 16, 18, -7, -1, 18, 19, 13, -19, 10, 7, -11, 11, 2, -7, -10, 7, 19, -17, 7, 13, 14, 0, -11, 13, 14, 2, 16, -17, -18, 12, -5, -1, -10, 1, 3, -4, 13, -5], [[91, -5], [80, -7], [6, 19], [89, 14], [10, 17], [37, 7], [11, 7], [83, 12], [18, 2], [91, 13], [8, 16], [38, 19], [17, 3], [1, -8], [50, 15], [35, -6], [6, 1], [14, 3], [64, -16], [28, 20], [49, 20], [67, 14], [20, 19], [2, -12], [28, -19], [66, 10], [21, 19], [7, -6], [65, 7], [63, 3], [76, 12], [90, -14], [16, 3], [62, 11], [0, -8], [19, 20], [46, 5], [50, -18], [57, 6], [43, -19], [62, -19], [37, 18], [7, -1], [82, -14], [58, -17], [67, -9], [11, -12], [25, -14], [1, 8], [3, -20], [92, -4], [67, -12]]) == 22392', 'assert maximumSumSubsequence([11, -33, 25, 54, 10, 29, -46, 6, -21, -19, -19, -23, 34, -47, 15, -2, -55, 55, 33, 40, -55, -15, -31, 34, -29, 37, -17, -52, -14, -17, 14, -54, -9, 22, -53, -47, 22, 2, -10, 14, 29, -26, 40, -23, -47, -40, -24, -51, 37, -15, -21, -33, 37], [[24, 53], [36, -51], [2, 32], [16, 55], [27, 14], [38, -24], [31, -54], [11, 14], [29, -10], [29, 25], [12, -51], [39, -14], [49, 16], [4, 50], [50, 50], [20, 22], [52, -45], [16, 34], [31, 14], [37, 43], [37, 10], [20, -26], [9, 45], [34, 27]]) == 12575', 'assert maximumSumSubsequence([90, -3, 50, -79, -86, -32, 33, 34, -89, 39, 89, 6, 96, 37, -48, -67], [[9, -19], [7, 80], [10, 49], [10, -93], [2, -56]]) == 1711', 'assert maximumSumSubsequence([-10, 28, 5, 17, 10, -2, 4, -28, 4, 12, -20, -8, 26, -28, 27, -17, -9, 27, 26, 21, -19, 10, -19, -21, 22, 9, -9, 27, 1, 24, -21, -5, -28, 3, -20, 19, -1, -16, -11, -8, 1, 26, -29, 13, -17, -19, -20, -4, -18, 13, -9, -20, -19, 10, 10, -11, -15, 8, -25, 11, 7, 13, 0, 18, 10, -13, -13, -26, 3, 9, 18, 28, 7, 18, -24, 18, -7, 10, 9, -20, -17, -2, 18, -17, -20, -16, -13, -2, -6, -2, 15, -25, 0, 12, 27, -10, -7, 28, 9], [[56, -21], [15, 19], [89, 17], [20, 27], [90, -14], [87, 27], [56, -16], [61, 12]]) == 4492', 'assert maximumSumSubsequence([18, -25, 19, 27, 0, 20, -27, 8, -10, -18, 15, -4, 12, -1, 25, 23, -21, -6, 21, 15, -16, -14, 24, -5, 14, 11, -10, -10, 8, -14, -15, 6, 3, -14, -5, -24, 15, 22, 6, 19, 6, -12, -9, -1, -2, -3, 1, -23, 21, 13, -7, -8, -22, 18, 13, 4, -18, 9, -21, -3, -19, 6, -10, -21, -7, 6, -11, -8, 1], [[33, -7], [43, -16], [59, -2], [21, -20], [21, -9], [55, -1], [41, -28], [9, 5], [27, 8], [58, 23], [17, 20], [30, 8], [31, -10], [64, 8], [66, 25], [31, 20], [15, 26], [40, -27], [45, 14], [8, -10], [60, 1], [35, -23], [40, -17], [36, -9], [39, 28], [32, -6], [23, 12], [17, -25], [12, 9], [64, -27], [32, -22], [12, 21], [4, -17]]) == 11584', 'assert maximumSumSubsequence([71, 26, 41, 54, -67, 83, 17, 63, 10, 24, -64, -63, -51, -82, -85, -16], [[7, 39], [0, 78], [5, 78], [3, -54], [1, 31], [13, -70], [0, 35], [6, 52], [4, -36], [15, -27], [5, -53], [13, 17], [8, 71], [6, -45], [7, 19], [7, 40], [4, -13], [1, 39], [11, -62], [6, 27], [4, 5], [2, 41], [8, -84], [9, -78], [15, 1], [12, -85], [4, -5], [13, -56], [12, -44], [11, -7], [14, 80], [9, 42], [15, -77], [11, -72], [1, 43], [14, -11], [6, 29], [8, -17], [7, -68], [6, -51], [11, -32], [10, 78], [12, -86], [0, -13], [4, 36], [3, -2], [0, 29], [7, 36], [4, 31], [4, -13], [1, 18], [9, -59], [2, -82], [14, 35], [2, 75], [14, -68], [6, -47], [5, -9], [11, -79], [4, 59], [9, -70], [4, -72], [8, -7], [8, 76], [2, -59], [11, 42], [9, -16], [12, -84], [1, -60], [7, 66], [1, -65], [7, -9], [13, -66], [9, 74], [7, 0], [0, 20], [1, 40], [11, 4], [14, -73], [2, -6], [6, 76]]) == 15483', 'assert maximumSumSubsequence([-6, -6, -10, -1, -15, -4, 12, 3, 8, -12, -12, 4, -6, -5, 9, 12, 8], [[1, -12], [7, -8], [0, 10], [13, 7], [7, 4], [12, 7], [12, -1], [0, 15], [7, -12], [12, -7], [0, 12], [8, -15], [2, 4], [16, 10], [11, -14], [15, -3], [6, -10], [10, 4], [14, 5], [12, 2], [16, 4], [8, -1], [8, 12], [14, 7], [2, -8], [4, 10], [6, -10], [2, -7], [14, -9], [12, -10], [12, -10], [15, 4], [12, -9], [13, 3], [4, -14], [8, 6], [2, 12], [15, 2], [1, 0], [9, 6], [0, 14], [13, 14], [6, 14], [11, -6], [6, 3], [15, 2], [7, 11], [0, -1], [3, -8], [4, -3], [9, -11], [13, 3], [6, 15], [13, 15], [5, -11], [12, 3], [11, -1], [10, -10], [5, 13], [10, -1], [8, -14], [13, 14], [3, -15], [6, -13], [6, -2], [3, -5], [1, 0], [4, 6], [2, 6], [12, 5], [13, 12], [7, -8], [12, 15], [9, -4], [11, 13], [13, -1], [5, 4], [0, 4], [6, -9], [11, 14], [14, 1], [11, 11], [6, 11], [5, -15], [12, -9], [15, 12], [1, -6], [4, 6], [5, 4], [12, 7], [6, -10], [7, -12], [7, -5], [13, -2], [12, -5], [4, 3], [10, 11], [15, 7], [2, 8], [4, -14]]) == 4622', 'assert maximumSumSubsequence([146, 83, -136, 0, 281, -227, 179, 248, -191, -283, 187, -167, 372, 99, 184, -220, 319, -105, -204, 97, -139, -187, 128, -51, -247, 253, -182, -293, 179, 211, -59, -26, 311, 240, 40, 125, 243, -305, 152, -285, 96, -248, 137, -331, -10, 374, 322, 352, 227, 341, -280, 347, 101, 157, 61, 267, 288, 12, -36, 204, 222, 75, -76, 84, 160, 24, 13, 147, 275, 264, -93, 235, -223, -44, 295, 145, -1, 140, -307, -41, -146, 51, 11, 164, -147, 145, -255, -129, 137, 332, -10, 137, 111, 101, 223, -229, 113, 190, 343, 332, 305, 42, 302, -337, 183, -225, 327, 249, 262, -165, -269, -262, 90, -352, 185, -24, -209, -152, 253, -113, 174, -251, -86, 231, -156, -371, -189, -227, 121, 279, 298, -122, 68, 31, -140, -360, -44, -96, 174, -341, 351, 27, 362, -190, 194, -66, -106, 357, -365, 226, -137, -89, -339, -140, -55, 221, 279, 58, 19, 227, -263, -54, 20, -275, -257, -266, 70], [[13, 263], [36, 303], [11, 80], [150, 311], [89, 149], [43, -190], [103, 142], [66, -91], [27, 191], [72, 355], [19, -117], [70, -282], [122, -3], [49, -145], [45, 225], [74, 25], [30, 26], [160, -82], [143, -124], [87, 258], [78, -120], [53, -270], [81, -325], [61, 274], [12, -154], [46, -105], [26, 193], [20, -248], [71, -75], [8, -243], [150, -300], [96, -74], [9, -300], [86, 112], [80, 36], [93, -261], [37, 179], [121, -24], [102, 5], [135, 200], [83, 226], [132, 339], [91, -116], [8, -154], [36, -8], [6, -131], [22, -340], [71, 197], [115, 69], [96, -290], [58, -87], [153, 256], [16, -340], [139, -169], [52, 82], [129, 95], [82, 69], [31, -306], [64, 120], [0, 85], [21, -272], [123, -352], [81, -222], [141, -196], [63, 10], [132, 100], [105, 21], [24, 172], [5, 185], [55, -138], [45, -335], [54, -211], [24, 14], [76, -154], [96, 341], [8, 303], [60, -94], [89, 71], [71, 319], [3, 321], [92, 203], [37, -54], [136, -297], [113, 287], [41, -43], [112, 6], [10, 224], [123, 63], [134, -204], [3, 98], [3, -111], [20, 322], [108, 258], [128, 331], [144, 265], [148, -329], [121, -311], [128, 26], [92, -208], [64, -169], [9, -301], [91, -252], [4, 120], [18, 16], [49, -216], [145, 189], [20, 114], [150, -119], [164, 218], [163, -69], [133, -301], [16, 62], [117, -287], [28, -344], [26, -127], [97, 251], [109, -176], [150, -28], [152, -82], [72, -361], [70, 44], [13, 81], [67, 372], [72, -330], [52, -288], [30, -192], [7, -189], [63, 317], [106, 202], [100, 28], [124, 123], [77, 61], [152, -294], [60, 52], [57, -298], [110, -36], [114, 125], [69, 295], [17, -25], [151, 182], [86, 131], [129, 165], [127, -246], [7, 68], [113, 82], [45, 181], [111, 308], [45, 274], [122, -116], [87, 79], [87, 310], [112, 343], [7, 369], [63, 251], [76, 58], [84, 324], [128, 326], [73, 227], [96, 316], [121, 242], [0, -204], [119, -290], [50, 292], [14, -12], [111, -62], [98, -226], [147, 174], [119, -111], [100, 66], [118, 311], [120, 282], [141, -70], [166, -131], [62, 212], [85, 199], [3, -118], [23, 11], [161, 8], [111, 319], [132, 274], [24, 96], [83, -346], [159, 65], [162, -124], [120, 166], [122, -359], [154, -92], [44, -372], [122, -318], [95, -373], [113, -235], [76, -293], [112, -274], [76, -157], [31, -354], [52, 99], [146, -214], [87, 119], [9, 335], [8, -284], [127, -213], [21, 190], [85, 237], [123, 349], [143, 155], [113, 369], [111, -346], [46, 372], [62, -11], [15, 307], [23, 275], [26, 112], [141, 251], [122, 334], [30, -344], [107, -134], [25, -70], [84, -360], [98, 359], [156, 4], [130, -75], [15, 349], [27, -137], [139, -102], [109, -262], [56, 364], [81, 298], [166, 222], [78, 86], [129, 335], [149, 200], [101, 145], [0, 92], [123, 177], [56, 207], [39, 299], [24, -114], [36, 295], [94, -128], [156, -300], [140, 72], [32, 29], [12, 99], [77, -343], [165, -134], [79, -313], [154, 16], [40, -150], [94, -266], [57, 0], [88, -200], [72, 123], [155, 124], [73, -216], [31, 253], [71, 281], [8, -311], [151, -9], [109, 135], [147, 17], [100, -244], [29, -340], [112, 203], [166, -183], [13, -277], [37, -312], [5, -172], [95, 354], [49, 240], [150, 65], [40, -320], [4, -66], [102, 18], [124, 183], [17, 149], [42, 76], [97, -371], [91, 74], [1, -219], [130, -237], [26, -373], [89, -176], [144, 114], [32, -286], [19, -169], [90, -80], [9, -122], [108, 315], [5, 165], [84, -44], [74, 182], [49, -323], [79, -238], [24, 289], [132, 305], [62, -235], [142, -305], [35, 367], [76, 271], [41, -183], [119, -55], [29, 301], [123, -134], [99, -10], [141, -257], [1, 314], [109, 21], [83, -137], [115, -297], [137, -223], [125, 207], [66, 225], [52, -154], [166, -160], [29, 208], [133, 89], [40, -120], [12, 356], [16, -253], [149, -283], [16, 154], [157, -227], [14, 167], [84, -200], [17, 318], [20, 338], [97, -15], [72, -83], [2, 75], [123, 338], [4, -210], [144, 219], [141, -192], [40, 67], [152, 2]]) == 4342642', 'assert maximumSumSubsequence([105, 456, 159, -490, 231, -570, -75, -178, 682, 785, -753, -38, 58, -9, -479, -442, -101, -668, -67, -428, 625, 490, 454, -751, 533, 473, -804, 86, 555, -742, -217, -545, 74, -204, 397, 295, 807, 786, 582, 134, -13, -41, 241, -627, -677, 624, -116, 446, 97, -30, -335, 466, 149, -838, 13, 262, -159, -441, 109, 27, -520, -813, -370, -655, 743, 115, 581, 164, 21, -702, 18, -661, -653, -6, -406, -541, -547, -236, -24, -850, -350, -566, 450, 640, -298, -27, 67, -755, 366, -517, -578, 735, 648, -389, -722, -268, 479, -320, 291, -685, 303, -221, 90, 622, 615, 818, 70, -261, -372, 306, 740, 32, -329, 259, 53, -164, -281, -706, 190, -174, 252, 621, -221, 396, -711, -481, 633, 804, -607, 636, 449, -462, -371, 233, 619, 117, 108, 470, 714, 689, -722, 176, 829, 609, 300, -63, 500, 116, 57, -377, -640, -181, -83, 163, 759, 529, -140, -787, 629, -64, -396, -182, -702, -366, 120, 730, -435, 135, -447, -821, 447, -425, 336, 63, 300, 541, -405, 86, 480, 585, -501, 434, 113, -677, 327, 143, -459, -378, -90, -437, 824, -375, 423, -486, 388, 222, 675, -83, 334, -335, -490, -741, -669, 307, 56, -181, -81, -10, -801, 571, 782, 786, 818, 68, -14, -509, 73, 40, 264, -86, 800, 57, -764, 135, 450, 685, 837, -117, -96, -625, 785, 85, 229, -225, 286, 225, -303, -11, 751, -27, -114, 660, 631, 199, 649, 489, 480, -636, 430, -810, 641, -514, -405, 752, 699, -129, -329, 286, 321, -702, -770, 410, -130, 16, -723, -219, 364, -465, -340, -336, -61, 176, -705, 757, -696, 27, 61, -624, 860, 42, 793, -235, -525, -654, -232, 42, 830, 206, -796, 196, 564, -181, 699, 716, 636, -94, -336, -532, 256, -101, 121, -746, 709, 136, 711, -226, -502, 695, -232, -58, -357, 221, -660, 556, 438, 77, -764, -287, -61, 262, -700, -345, 480, 124, -51, 7, -606, 57, 786, -84, -339, -410, 112, 81, -420, -141, 493, 348, 535, -485, -280, 727, 261, 307, -663, -856, -459, -677, 134, 203, 158, -580, 401, 421, -250, -704, 764, 790, -694, -209, -101, -701, -143, 667, 342, -62, 281, 551, -320, -628, -167, -217, 248, -348, -89, 772, -432, 711, 668, 315, 501, 441, 459, -122, -616, -509, 208, -337, 389, -489, 15, 722, 433, -240, -19, 163, -613, 779, 337, -161, -578, 729, -776, -243, 320, 714, -609, -320, -528, 662, -712, 652, -138, -616, -736, -5, -77, 684, 329, -480, 325, 788, 392, -610, 772, 746, 725, 534, 30, -202, 371, -383, -692, -749, 735, -549, -42, 378, -807, 434, 697, 126, -507, 808, 672, 26, 738, -142, 564, -7, -530, -528, -158, -255, 785, -339, 245, 48, -744, -234, -168, 304, -33, 269, 270, 485, -490, -591, 618, 381, 542, 413, 328, 287, -554, -362, 67, 658, 745, 388, -123, 686, 66, 97, 467, 404, -651, 778, -710, -285, -239, -106, -819, 299, 287, -674, 292, -446, 250, -580, -835, -517, 519, -30, -490, -858, -296, 222, -748, -479, 56, 583, -525, -334, 514, 20, 131, 553, -249, 411, -791, -120, -222, -535, -42, 537, -725, 235, 325, -582, 759, 117, 80, 63, -30, 1, -752, -354, 165, 39, -231, -707, -150, -297, -192, -799, -341, 754, -677, -6, 659, 364, 47, 331, -335, 541, -372, -27, -265, 433, 806, -827, 799, -785, 483, -145, -53, -505, 278, -703, -817, -43, 845, 438, 704, 760, 487, -516, 670, -56, 814, -267, 126, -214, 51, 581, -393, 476, -589, -515, 34, 373, -818, 29, 171, 513, 733, -462, 754, 443, -170, 206, -157, 631, 247, 273, 132, 295, -736, 465, 851, 305, -702, -254, -604, 342, -628, 621, 853, -289, -151, 302, -275, 61, -620, -158, -236, -256, 791, -396, -514, 272, 764, 698, -81, -342, -826, -564, -577, -622, -234, 314, -486, 151, 218, 482, -314, 436, 322, 383, 565, 27, -682, 274, 49, -427, -640, 110, -511, 681, -357, 121, 534, 594, -389, -119, -785, 595, 303, -549, -237, -288, -501, -620, -54, 493, -258, -680, -806, 290, -326, 808, -630, -584, 487, 195, -86, 386, 275, -159, 32, 508, -13, -848, -386, -716, -542, -147, -501, 116, 579, 669, 713, -593, 583, -722, 359, 581, -491, -815, 237, 209, 276, -494, -489, -789, 545, 559, -740, 198, 253, -304, -673, 309, 704, 336, 221, -549, 79, -703, 710, 595, 759, 201, -131, 791, 290, -815, 818, 484, -155, -42, -121, -650, 89, 111, 512, -88, 855, -835, 22, -381, -640, 129, -375, 763], [[691, -714], [146, 487], [379, -58], [291, -806], [632, -845], [687, -759], [52, -2], [360, 113], [468, -413], [260, -490], [335, -218], [84, 861], [654, 702], [60, -399], [532, 669], [525, 745], [399, -492], [738, -788], [94, -156], [119, 531], [263, 287], [334, 75], [747, 451], [444, 385], [202, -395], [54, -814], [291, -468], [179, 834], [384, 714], [693, 193], [96, -834], [199, -312], [14, 789], [471, 287], [290, -221], [469, -119], [398, -61], [653, 196], [229, 286], [99, -53], [511, 188], [477, -526], [13, -303], [136, 63], [300, 102], [370, 343], [662, -41], [271, -35], [348, 586], [577, -677], [575, 763], [188, -276], [97, -285], [67, 605], [560, 697], [597, -247], [371, -360], [289, -594], [216, -748], [452, -402], [583, 697], [555, 389], [130, 180], [374, 26], [729, -246], [49, -101], [741, 833], [720, 439], [154, 385], [38, -280], [136, 509], [209, 528], [121, 419], [658, -844], [615, -390], [288, -298], [392, 807], [550, -861], [724, -140], [579, -590], [725, -404], [377, 674], [483, 622], [399, 771], [678, 157], [697, 687], [226, 655], [323, -219], [252, 808], [281, -436], [90, 354], [500, 560], [194, 801], [352, 110], [254, 336], [245, 853], [280, 570], [451, 205], [451, -734], [609, 417], [754, 668], [712, -189], [469, 273], [736, -102], [714, -131], [576, -794], [555, 526], [584, 683], [509, 388], [744, -531], [93, -466], [603, -763], [452, -457], [723, -632], [428, -469], [594, 740], [147, 243], [581, 638], [432, -437], [570, -360], [55, -273], [588, 67], [186, 776], [111, 323], [399, 342], [553, -363], [710, 442], [493, 106], [549, 758], [743, -690], [709, -351], [466, -107], [697, 456], [9, 549], [266, 309], [228, 118], [619, 422], [186, 298], [624, 34], [693, 278], [118, -87], [73, 22], [548, 262], [134, -806], [380, -491], [141, -529], [170, -793], [359, -159], [682, -576], [477, 334], [443, 207], [431, 85], [489, 331], [629, 415], [520, 859], [706, -537], [663, -814], [196, -650], [211, 841], [358, -856], [485, -281], [528, -768], [212, 350], [100, 132], [215, 265], [266, -534], [658, 83], [149, 683], [290, -327], [342, -619], [398, -564], [453, 269], [688, 57], [149, 402], [738, 36], [644, -735], [122, -438], [623, 540], [681, -571], [568, -734], [88, -788], [596, 69], [81, 828], [462, -464], [565, 713], [73, -442], [159, 444], [409, 761], [663, -210], [313, -575], [698, -197], [708, -486], [183, 698], [308, -434], [398, 750], [203, -457], [44, 102], [262, 807], [100, 374], [662, -403], [242, -294], [391, -420], [638, -166], [719, -746], [202, -284], [149, -179], [149, -833], [382, 725], [718, -575], [283, -8], [69, 710], [226, -543], [531, 226], [318, 360], [563, 665], [483, -135], [35, 770], [651, -705], [721, 160], [20, -658], [194, -486], [387, 587], [94, 400], [498, 240], [610, -758], [299, -458], [704, -585], [431, 847], [354, 644], [621, 155], [649, 544], [42, -396], [413, 241], [142, 735], [203, -607], [479, -823], [153, -3], [479, 642], [432, 439], [463, -507], [255, 39], [97, -197], [197, -109], [268, 219], [33, -569], [483, -350], [601, 774], [491, 646], [216, -430], [59, -531], [596, 572], [588, 356], [55, -112], [386, 691], [389, -101], [695, 560], [740, 553], [58, -512], [403, 308], [129, -855], [506, 407], [166, -836], [220, 435], [219, -186], [310, -374], [421, 556], [627, 829], [643, 738], [371, -104], [628, 560], [578, -520], [604, -265], [446, 833], [705, 595], [174, -261], [640, -347], [725, 489], [403, 243], [386, -291], [415, -515], [154, 790], [473, -608], [283, 131], [556, 294], [482, 802], [269, 449], [186, -804], [48, 392], [135, -69], [703, -442], [370, -154], [608, -386], [640, -608], [377, -570], [482, -640]]) == 34901606', 'assert maximumSumSubsequence([15, -13, -6, -15, 20, 8, 22, -17, -16, 14, -26, 6, 3, 23, -8, 22, 8, 5, 0, 5, 16, -25, 11, -19, 15, 25, 1, 19, 9, -24, -22, -3, -9, -17, 17, 21, -8, -8, 20, 16, 0, -22, 17, -1, 9, 21, -25, 26, 23, 3, -19, 21, -5, -13, 19, -24, -7, 8, 12, 11, 5, 3, 17, 0, 25, -1, 22, -7, 4, -25, 9, 15, -11, 2, -8, 2, 12, -2, -23, 9, 22, -23, 11, 20, -13, -26, -26, -15, 14, -18, 14, -19, 12, 2, 23, 3, -14, 20, -20, 19, -25, 13, -1, 17, 24, -19, 6, 7, -1, -2, -16, 17, -13, 12, 20, -17, -21, -8, -8, -17, 9, 9, 15, 21, 2, -12, -10, 18, -4, -20, 4, 19, -6, 11, -5, -9, -5, -24, 18, -12, 9, -13, -9, 13, 9, -4, 26, -10, -2, -13, 22, 6, -9, -4, -12, 15, 18, -13, 9, -5, -13, -3, 17, 16, 0, 18, 6, -9, -22, 21, 25, 4, -18, -12, 11, 23, 15, 22, 0, -11, 5, -8, 11, -22, -21, -4, -11, 15, -19, 4, -21, 22, 7, 2, 15, 17, 14, -20, 16, -24, 18, 11, -13, -1, -6, -19, 19, -9, 13, 17, -23, -6, -1, -25, -11, -10, -20, 0, 12, -25, 13, 20, 23, -16, 18, -9, -3, 11, 20, 5, 1, 7, -13, -4, -23, -24, 20, 4, -21, -25, -19, -1, 19, -26, 21, -7, -22, 1, 11, -16, -5, -13, -19, 2, 10, 10, -21, 9, -16, -16, 8, -25, -26, -15, -13, 11, -20, 9, 20, 11, 8, -8, -18, 9, 15, 12, 12, 12, -3, 3, -10, -16, 9, -25, -1, -24, 0, 5, -9, 2, 21, -4, -19, -2, -9, -18, 13, 14, -12, 21, -9, 3, 26, 4, -7, 11, 9, 6, 22, 0, 5, 6, 8, -19, -9, 0, 25, -22, -23, 11, -3, -1, 10, -17, 7, -14, 0, -13, 5, 15, -12, -24, -14, -19, -24, -6, -23, -10, -7, 21, 18, 26, -12, -23, 7, 21, -9, -26, 23, 6, -14, -21, -10, 3, 22, 23, -3, 1, -22, 22, 21, 15, 2, 23, -25], [[244, -25], [211, 6], [328, 4], [276, -17], [166, -3], [184, -24], [42, -22], [253, 21], [217, 26], [299, 23], [13, 13], [67, -1], [273, 6], [71, -19], [105, -24], [171, -8], [142, 9], [29, -22], [305, 20], [257, 9], [309, 13], [226, 4], [150, 10], [207, 2], [60, -3], [150, -19], [201, 17], [3, -23], [87, -1], [358, -11], [176, -14], [281, -1], [144, 19], [93, -7], [64, -19], [206, -22], [176, 26], [74, 22], [287, -26], [224, -9], [27, -8], [274, 23], [67, 26], [255, -12], [6, 9], [14, -8], [108, 18], [330, -21], [166, -21], [177, 2], [193, -24], [207, -6], [161, -5], [177, 24], [94, 0], [170, 12], [32, 10], [30, 15], [239, 25], [329, -11], [253, -6], [276, -24], [205, -21], [98, 0], [15, -2], [311, 12], [1, 13], [261, -23], [242, -6], [3, 6], [111, 2], [181, 8], [6, 7], [310, 12], [132, 25], [104, 16], [250, -26], [344, -2], [202, 19], [204, -7], [90, -7], [6, 5], [5, -3], [302, 10], [308, 26], [0, -17], [83, -9], [209, -16], [62, -6], [160, -1], [310, -8], [109, -22], [94, -5], [197, 26], [340, 13], [327, 9], [89, -11], [280, 7], [119, -8], [355, -8], [201, -2], [224, 0], [82, -6], [72, 21], [25, -24], [76, -26], [272, -26], [176, 0], [37, -19], [290, 10], [140, -3], [245, 14], [153, -4], [267, 0], [10, 14], [90, -17], [300, -12], [338, -21], [166, 26], [160, -11], [163, 21], [189, 6], [269, -9], [342, -6], [174, -5], [200, -9], [211, 18], [194, -23], [237, 26], [305, -9], [322, -13], [217, -15], [289, -13], [10, -16], [98, 2], [15, 7], [150, 17], [105, -19], [11, 20], [68, -5], [44, -13], [331, 15], [234, 13], [237, 19], [363, -8], [354, 6], [54, 18], [38, 7], [210, -12], [97, -8], [184, 24], [11, -13], [304, 0], [114, 15], [182, -16], [291, -13], [353, -12], [178, 0], [157, 10], [226, -13], [160, -22], [11, -2], [95, 9], [141, -5], [0, -6], [124, 13], [274, 25], [158, 14], [105, 6], [40, 15], [341, -4], [302, 4], [248, 12], [31, -8], [231, -9], [183, -7], [176, 3], [84, -7], [18, 13], [113, 17], [217, 14], [124, 4], [282, 11], [287, -9], [198, -22], [190, -1], [150, 24], [158, 18], [359, 23], [263, -21], [225, -25], [311, -1], [135, -26], [31, 19], [100, 20], [309, -19], [120, -24], [13, 2], [80, 15], [22, -17], [117, 11], [156, -24], [333, 13], [121, -1], [20, 18], [275, -12], [96, -14], [79, 22], [94, 4], [168, 1], [318, 25], [37, -10], [10, 26], [229, -10], [147, -25], [227, -19], [48, -4], [282, -26], [28, 24], [337, -24], [106, 24], [226, 22], [214, -11], [100, -10], [193, 15], [14, -26], [229, -13], [255, 8], [310, -26], [118, -13], [233, 13], [20, 7], [42, -2], [124, 5], [47, -17], [17, -15], [351, -6], [20, 0], [180, -8], [218, 3], [204, 11], [91, -19], [298, -8], [117, 14], [197, -13], [271, 22], [340, -13], [168, -8], [221, -21], [81, 15], [8, -11], [180, 20], [351, -18], [47, 20], [252, -24], [97, -1], [36, -9], [175, 9], [277, 2], [225, 15], [364, -9], [150, 11], [93, 17], [58, 21], [92, -23], [149, -7], [163, -18], [256, -19], [192, 21], [49, 18], [129, 23], [245, -24], [261, 15], [266, 6], [87, 7], [321, 4], [328, 5], [197, 7], [180, 23], [47, -8], [262, 21], [173, -14], [15, -25], [285, 1], [285, -18], [286, 10], [89, 10], [305, 12], [175, 0], [37, 19], [307, -11], [201, -22], [33, 25], [296, -21], [335, 21], [121, 23], [212, 21], [174, 16], [89, 10], [13, -6], [44, -10], [236, -17], [88, -8], [81, -25], [47, -16], [102, -3], [287, 14], [20, 12], [310, -1], [291, 26], [142, -7], [328, -2], [138, -12], [7, 6], [360, -26], [197, -5], [340, -18], [64, -4], [221, 9], [325, 24], [58, 18], [254, 9], [47, 24], [213, -3], [177, -19], [98, -9], [81, 23], [256, -4], [88, 18], [70, -17], [91, -16], [15, 22], [8, 0], [326, 3], [110, -24], [8, 7], [286, 10], [21, 0], [48, 24], [156, 7], [38, -25], [348, 26], [254, -16], [139, -20], [140, 17], [103, 17], [262, 18], [66, -3], [83, -24], [258, 24], [27, 3], [240, 11], [308, -5], [323, 18], [142, 10], [258, -9], [248, 1], [244, -24], [319, -10], [168, -4], [299, 6], [61, 10], [254, -10], [21, -18], [202, 6], [74, -17], [214, -1], [135, 5], [14, 14], [133, -17], [221, 4], [138, 11], [85, -13], [42, -15], [214, 9], [131, 14], [195, -3], [310, -10], [12, 4], [219, 21], [78, 22], [142, -2], [193, 2], [82, 4], [62, 2], [125, 20], [303, -12], [185, -20], [103, -26], [331, -11], [214, -21], [197, -25], [101, 22], [285, -10], [326, -12], [332, 7], [341, -8], [89, -15], [23, -3], [115, -8], [37, -23], [192, 7], [264, 24], [127, 17], [176, 22], [44, 13], [140, -7], [87, -12], [18, 1], [317, 8], [35, 23], [363, 2], [253, 20], [4, -11], [37, 10], [232, -26], [297, -8], [58, -20], [1, -5], [60, -25], [187, -23], [61, -14], [335, 18], [260, 19], [133, 26], [311, -25], [328, 14], [343, 12], [228, -11], [36, 4], [346, -3], [121, -24], [18, -4], [340, -8], [203, 5], [262, 17], [83, -15], [231, 16], [233, -10], [323, -8], [223, 26], [325, -24], [340, 14], [39, 2], [225, 10], [357, -17], [185, 25], [233, 23], [36, 3], [179, -5], [324, 5], [35, 25], [103, -16], [62, -3], [200, 6], [11, 16], [248, 3], [347, -11], [330, 18], [285, 7], [161, -10], [208, -11]]) == 786864', 'assert maximumSumSubsequence([-49628, -30430, -41424, -41292, -28617, -146, -40780, -40326, -23004, -9824, -33612, -54074, -22298, -31385, -18160, -28569, -80428, -25466, -94465, -38726, -97114, -7531, -68356, -17873, -31813, -68805, -36472, -11588, -61177, -82440, -3775, -41868, -49832, -34146, -14741, -13288, -59953, -44535, -31484, -15894, -57293, -53138, -53998, -65948, -48422, -39875, -90785, -83696, -75996, -85368, -17656, -741, -95447, -10069, -110, -13454, -78433, -22123, -51970, -84897, -94227, -249, -74844, -20886, -80707, -4604, -61268, -20783, -48261, -47745, -81203, -58823, -69450, -76420, -74829, -40160, -4436, -42134, -90362, -2020, -45556, -246, -76, -63137, -75406, -80345, -3576, -12595, -94627, -99404, -5268, -96118, -59322, -6365, -29825, -87775, -18865, -7816, -7839, -90851], [[82, 43338], [3, 79334], [19, 99043], [46, 84704], [96, 801], [2, 12112], [59, 69245], [63, 31451], [62, 42357], [20, 13144], [27, 8618], [67, 55927], [78, 76105], [85, 40429], [15, 75746], [52, 38049], [6, 97183], [52, 62535], [2, 9531], [98, 24861], [15, 68942], [38, 39830], [78, 42067], [2, 44243], [20, 8184], [76, 40235], [38, 95316], [60, 76916], [38, 40731], [17, 68684], [39, 24451], [39, 29066], [89, 43951], [16, 79780], [46, 91887], [50, 37129], [4, 84746], [40, 19690], [96, 63423], [20, 78252], [99, 75677], [1, 90434], [68, 1584], [4, 2075], [55, 92865], [63, 37717], [43, 50345], [89, 93333], [24, 30746], [9, 70267], [97, 15369], [95, 40212], [29, 25310], [65, 56730], [27, 32384], [86, 58448], [29, 67797], [26, 45751], [13, 17528], [50, 56804], [94, 56379], [63, 38989], [16, 53740], [71, 79638], [29, 70947], [84, 60000], [61, 47782], [87, 23008], [93, 65480], [3, 1211], [49, 44704], [77, 41237], [23, 36544], [81, 52240], [86, 66111], [0, 70955], [84, 39271], [7, 44049], [26, 34099], [95, 94354], [43, 10437], [58, 60087], [85, 41227], [78, 46677], [26, 292], [90, 33038], [90, 96571], [70, 78013], [24, 1738], [96, 69270], [24, 51842], [12, 68476], [78, 14480], [11, 12804], [96, 6106], [57, 60871], [76, 57749], [79, 61568], [35, 3767], [77, 16004]]) == 140763435', 'assert maximumSumSubsequence([27441, 6949, 56929, 70808, 77887, 72462, 84671, 27936, 79609, 98600, 96542, 18275, 53895, 41947, 74889, 8438, 61115, 68483, 90702, 46002, 57700, 22093, 31999, 3658, 79099, 27731, 49701, 91305, 80761, 80097, 31152, 59329, 41234, 39252, 60103, 98687, 92150, 38998, 9464, 44669, 10126, 15558, 16691, 24843, 22876, 90564, 10184, 53757, 23596, 1917, 88014, 91007, 65949, 22810, 11045, 82154, 28031, 96495, 88037, 67435, 54645, 94977, 69538, 29272, 74503, 89550, 96833, 8491, 38706, 66575, 67783, 77187, 89951, 74667, 50685, 21502, 18648, 42752, 2199, 67686, 15187, 84189, 4299, 90074, 9706, 62506, 40806, 43200, 10150, 42876, 64266, 76159, 49408, 35191, 44046, 52496, 85934, 24595, 32972, 39692], [[29, -58129], [47, -77311], [73, -84798], [53, -28552], [20, -32673], [15, -1079], [67, -3210], [79, -86250], [10, -59396], [21, -60092], [34, -66116], [51, -65882], [32, -39943], [69, -18269], [8, -42687], [94, -12751], [42, -48660], [96, -27569], [4, -50563], [17, -65500], [62, -88589], [78, -65762], [19, -87677], [60, -66425], [7, -93920], [27, -28150], [31, -22894], [55, -82134], [30, -43896], [91, -58396], [46, -42951], [48, -62559], [51, -82210], [47, -3546], [83, -79646], [90, -52593], [83, -78938], [65, -91260], [80, -56883], [76, -95598], [9, -34263], [46, -85370], [80, -94450], [60, -21594], [26, -90696], [21, -76938], [50, -21776], [88, -98701], [20, -36467], [43, -65818], [40, -73486], [50, -59627], [68, -49800], [25, -83987], [87, -23143], [15, -78858], [41, -90585], [74, -42597], [79, -89109], [62, -80541], [18, -40306], [17, -3560], [9, -62581], [45, -69800], [51, -96788], [86, -76705], [15, -58825], [28, -42418], [34, -79702], [77, -94169], [18, -91268], [99, -11868], [76, -35618], [76, -34153], [3, -51989], [89, -43137], [39, -75236], [94, -67976], [0, -67309], [45, -26557], [53, -20857], [36, -44237], [54, -70404], [32, -589], [72, -72287], [28, -54946], [78, -27541], [47, -9191], [38, -58621], [6, -76157], [67, -55423], [44, -94387], [6, -36854], [0, -20476], [8, -51488], [84, -43238], [64, -30571], [34, -11242], [63, -77887], [95, -37705]]) == 219503171', 'assert maximumSumSubsequence([1], [[0, -93911], [0, -56253], [0, -58947], [0, -81476], [0, 81636], [0, -67837], [0, 40556], [0, 93086], [0, -94836], [0, -96213]]) == 215278']
correct = 0
for t in tests:
    try:
        exec(t)
        correct+=1
    except:
        pass
success = len(tests) == correct
print(correct,'/',len(tests))
print(success)