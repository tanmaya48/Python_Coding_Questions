from question import minimumDistance
tests = ['assert minimumDistance([[3, 10], [5, 15], [10, 2], [4, 4]]) == 12', 'assert minimumDistance([[1, 1], [1, 1], [1, 1]]) == 0', 'assert minimumDistance([[3, 2], [3, 9], [7, 10], [4, 4], [8, 10], [2, 7]]) == 10', 'assert minimumDistance([[9, 8], [1, 8], [3, 1], [9, 1], [7, 7], [3, 6]]) == 13', 'assert minimumDistance([[5, 3], [4, 6], [2, 4], [1, 8], [3, 9], [1, 6]]) == 6', 'assert minimumDistance([[1, 2], [1, 9], [9, 2], [6, 10], [5, 3]]) == 13', 'assert minimumDistance([[1, 2], [8, 6], [7, 1], [10, 4], [4, 5], [5, 5], [10, 2], [3, 2], [8, 10], [9, 7]]) == 13', 'assert minimumDistance([[1, 1], [2, 9], [3, 3], [2, 2], [2, 4], [9, 8]]) == 9', 'assert minimumDistance([[9, 3], [5, 4], [6, 1], [10, 10]]) == 5', 'assert minimumDistance([[4, 1], [10, 7], [5, 6], [3, 2], [10, 9], [2, 9], [2, 8]]) == 12', 'assert minimumDistance([[9, 8], [2, 1], [8, 4], [9, 4], [6, 2]]) == 9', 'assert minimumDistance([[7, 9], [1, 10], [6, 10], [7, 3], [9, 2], [9, 10], [7, 10], [10, 4], [4, 10], [5, 4]]) == 13', 'assert minimumDistance([[10, 3], [4, 2], [8, 9], [9, 3], [4, 5], [6, 9], [9, 2], [7, 5]]) == 10', 'assert minimumDistance([[2, 3], [3, 4], [4, 6]]) == 2', 'assert minimumDistance([[5, 4], [3, 4], [10, 5], [5, 4], [5, 5], [3, 7]]) == 5', 'assert minimumDistance([[8, 7], [6, 2], [10, 10], [4, 1], [3, 3], [4, 3], [8, 5]]) == 10', 'assert minimumDistance([[8, 3], [6, 9], [1, 8], [9, 7], [2, 8]]) == 9', 'assert minimumDistance([[7, 1], [5, 7], [10, 5], [9, 5]]) == 7', 'assert minimumDistance([[5, 6], [8, 6], [1, 5], [7, 8], [5, 3]]) == 7', 'assert minimumDistance([[1, 8], [6, 5], [5, 5], [9, 5], [8, 2], [9, 5], [5, 6]]) == 7', 'assert minimumDistance([[7, 7], [9, 3], [8, 1], [8, 8], [8, 9], [5, 1], [3, 2], [6, 9], [3, 6]]) == 11', 'assert minimumDistance([[4, 8], [7, 9], [3, 3], [9, 10], [8, 5], [1, 2]]) == 13', 'assert minimumDistance([[8, 7], [3, 10], [5, 1]]) == 8', 'assert minimumDistance([[8, 4], [5, 5], [1, 7], [6, 2], [9, 9], [6, 8]]) == 10', 'assert minimumDistance([[8, 2], [6, 9], [10, 10], [5, 2], [4, 6], [10, 1], [8, 8], [10, 9]]) == 12', 'assert minimumDistance([[9, 10], [9, 4], [8, 9]]) == 2', 'assert minimumDistance([[10, 7], [5, 5], [2, 7], [2, 6]]) == 5', 'assert minimumDistance([[10, 7], [5, 10], [9, 4], [1, 7], [2, 7], [4, 2], [6, 7], [3, 2]]) == 11', 'assert minimumDistance([[10, 4], [5, 10], [4, 7], [2, 10], [3, 6], [2, 10], [4, 10], [4, 9], [10, 10]]) == 11', 'assert minimumDistance([[1, 1], [7, 3], [5, 9], [6, 4], [7, 6], [6, 4], [5, 2], [4, 2], [7, 2], [1, 1]]) == 11', 'assert minimumDistance([[1, 7], [2, 1], [8, 2], [8, 1], [3, 7], [4, 6], [1, 10]]) == 13', 'assert minimumDistance([[10, 7], [5, 9], [2, 1], [7, 8], [9, 2], [10, 10], [1, 5], [9, 7], [7, 1], [6, 3]]) == 14', 'assert minimumDistance([[5, 9], [2, 10], [2, 7], [10, 9], [3, 8]]) == 5', 'assert minimumDistance([[9, 2], [6, 10], [4, 8]]) == 4', 'assert minimumDistance([[3, 4], [2, 3], [9, 5], [5, 1], [7, 9]]) == 9', 'assert minimumDistance([[8, 7], [6, 5], [1, 4], [6, 9], [4, 6], [8, 7], [1, 5]]) == 9', 'assert minimumDistance([[10, 3], [4, 10], [1, 2], [4, 10], [3, 7], [2, 10], [2, 1], [3, 4], [9, 9], [9, 5]]) == 15', 'assert minimumDistance([[3, 7], [3, 5], [5, 1], [6, 4], [3, 4]]) == 6', 'assert minimumDistance([[8, 10], [8, 8], [3, 10], [6, 3], [8, 10]]) == 7', 'assert minimumDistance([[2, 5], [10, 9], [2, 8], [5, 10], [7, 10], [8, 8], [8, 10], [8, 9], [6, 1], [8, 6]]) == 11', 'assert minimumDistance([[2, 2], [3, 6], [3, 1], [10, 5]]) == 5', 'assert minimumDistance([[8, 10], [7, 3], [10, 7], [6, 6], [10, 4]]) == 7', 'assert minimumDistance([[5, 10], [2, 8], [10, 1], [8, 7], [6, 6]]) == 7', 'assert minimumDistance([[7, 4], [1, 9], [6, 8], [8, 7], [1, 1], [4, 10], [9, 1]]) == 13', 'assert minimumDistance([[2, 6], [4, 6], [8, 9], [4, 5], [6, 7], [2, 7], [10, 7], [8, 3], [5, 1], [7, 4]]) == 10', 'assert minimumDistance([[1, 1], [9, 2], [3, 9], [7, 2], [2, 2], [7, 4], [2, 10], [8, 9], [8, 6], [10, 9]]) == 15', 'assert minimumDistance([[1, 3], [3, 5], [5, 10], [7, 2], [6, 4], [9, 9]]) == 10', 'assert minimumDistance([[1, 9], [6, 7], [1, 4], [7, 6], [7, 7], [10, 6], [6, 4], [9, 6], [8, 2]]) == 11', 'assert minimumDistance([[3, 9], [8, 10], [9, 9], [3, 9]]) == 6', 'assert minimumDistance([[5, 8], [5, 2], [3, 4], [7, 3], [3, 1]]) == 6', 'assert minimumDistance([[1, 5], [9, 9], [6, 1], [9, 7], [5, 8], [3, 10]]) == 12', 'assert minimumDistance([[2, 4], [8, 7], [9, 9], [5, 9], [6, 8]]) == 5', 'assert minimumDistance([[4, 3], [4, 6], [4, 7], [2, 6], [9, 2], [4, 5], [4, 9], [4, 8], [7, 5], [3, 6]]) == 7', 'assert minimumDistance([[3, 9], [5, 1], [9, 1], [8, 3], [3, 5], [9, 10], [1, 4], [10, 8], [5, 9]]) == 14', 'assert minimumDistance([[8, 8], [2, 3], [1, 6]]) == 4', 'assert minimumDistance([[2, 7], [5, 5], [3, 3], [5, 6], [8, 2]]) == 5', 'assert minimumDistance([[9, 10], [2, 1], [4, 10], [6, 1], [10, 6], [4, 7]]) == 12', 'assert minimumDistance([[7, 9], [6, 9], [8, 5], [2, 5]]) == 6', 'assert minimumDistance([[5, 1], [6, 6], [9, 10], [7, 9], [10, 9], [10, 1], [7, 6], [4, 9]]) == 13', 'assert minimumDistance([[5, 7], [8, 9], [7, 2], [10, 7], [9, 10], [10, 1], [8, 1], [10, 9]]) == 10', 'assert minimumDistance([[3, 5], [6, 6], [1, 8], [4, 9], [6, 2], [3, 9], [10, 6], [8, 7]]) == 10', 'assert minimumDistance([[3, 6], [1, 8], [6, 8], [9, 3]]) == 5', 'assert minimumDistance([[3, 7], [7, 5], [3, 3], [10, 9], [9, 3], [6, 8]]) == 10', 'assert minimumDistance([[7, 5], [8, 9], [3, 10], [10, 10], [2, 1], [9, 7], [8, 2], [3, 4]]) == 13', 'assert minimumDistance([[8, 4], [5, 9], [5, 2], [2, 6], [5, 7]]) == 7', 'assert minimumDistance([[1, 5], [9, 7], [8, 1], [1, 1], [10, 8], [5, 8]]) == 12', 'assert minimumDistance([[8, 7], [6, 5], [3, 6]]) == 4', 'assert minimumDistance([[10, 8], [9, 5], [4, 5]]) == 4', 'assert minimumDistance([[9, 9], [2, 8], [5, 1], [9, 7], [8, 4]]) == 10', 'assert minimumDistance([[10, 5], [1, 2], [10, 10], [4, 4], [5, 5], [5, 5], [9, 7], [10, 4], [7, 9], [6, 3]]) == 12', 'assert minimumDistance([[1, 8], [6, 1], [1, 1], [9, 10], [9, 3], [7, 6]]) == 13', 'assert minimumDistance([[10, 10], [5, 2], [10, 6], [2, 10], [6, 2]]) == 12', 'assert minimumDistance([[1, 6], [3, 9], [9, 7], [1, 4], [3, 3], [6, 4], [8, 3]]) == 11', 'assert minimumDistance([[10, 7], [2, 10], [8, 1], [3, 3], [9, 3]]) == 11', 'assert minimumDistance([[6, 6], [3, 2], [4, 9], [7, 5], [4, 2], [10, 2]]) == 8', 'assert minimumDistance([[9, 8], [2, 9], [3, 6], [1, 3], [8, 1], [9, 5], [6, 9], [4, 10], [3, 1]]) == 13', 'assert minimumDistance([[8, 8], [2, 5], [4, 10], [1, 6], [6, 6], [10, 6], [4, 4], [10, 5], [5, 9]]) == 10', 'assert minimumDistance([[10, 6], [6, 9], [2, 1]]) == 7', 'assert minimumDistance([[9, 6], [7, 5], [9, 6], [3, 1], [5, 7], [5, 5], [4, 10], [6, 2], [2, 4]]) == 10', 'assert minimumDistance([[6, 1], [1, 2], [2, 10], [6, 5], [4, 9], [7, 8]]) == 12', 'assert minimumDistance([[9, 3], [7, 8], [2, 8], [2, 4], [4, 8], [8, 8], [4, 4], [7, 6], [10, 7], [6, 6]]) == 11', 'assert minimumDistance([[1, 2], [4, 8], [6, 4], [10, 2], [4, 3], [2, 4], [5, 3], [7, 2], [2, 10], [6, 2]]) == 12', 'assert minimumDistance([[1, 6], [2, 6], [5, 9]]) == 1', 'assert minimumDistance([[8, 10], [1, 7], [1, 3], [9, 6], [8, 9], [10, 4], [8, 8], [9, 3]]) == 12', 'assert minimumDistance([[10, 10], [4, 3], [2, 2], [3, 6], [4, 6], [1, 9], [4, 1], [4, 5]]) == 11', 'assert minimumDistance([[2, 5], [1, 8], [3, 10], [6, 3], [8, 4], [8, 3], [10, 7], [10, 5], [7, 7]]) == 12', 'assert minimumDistance([[4, 7], [8, 2], [3, 9], [1, 10], [1, 9], [5, 4], [5, 1], [10, 8]]) == 13', 'assert minimumDistance([[5, 4], [3, 6], [7, 3]]) == 3', 'assert minimumDistance([[6, 10], [3, 10], [9, 8], [6, 2], [10, 8]]) == 9', 'assert minimumDistance([[9, 10], [7, 9], [10, 2]]) == 3', 'assert minimumDistance([[7, 2], [7, 6], [9, 4]]) == 4', 'assert minimumDistance([[2, 8], [2, 7], [9, 2], [1, 1], [8, 8], [9, 5], [7, 1], [7, 3], [5, 4], [4, 4]]) == 13', 'assert minimumDistance([[3, 10], [4, 4], [4, 2], [7, 9]]) == 8', 'assert minimumDistance([[1, 8], [9, 8], [3, 3], [6, 3], [8, 8], [7, 7], [4, 5], [10, 1], [3, 7], [6, 5]]) == 11', 'assert minimumDistance([[7, 10], [3, 10], [5, 8], [5, 7], [5, 6]]) == 5', 'assert minimumDistance([[7, 4], [3, 4], [10, 5]]) == 4', 'assert minimumDistance([[8, 7], [7, 5], [8, 4], [8, 6], [2, 6], [3, 3], [2, 5], [6, 9], [6, 6]]) == 8', 'assert minimumDistance([[2, 5], [8, 2], [10, 5], [4, 5], [10, 2], [8, 10], [4, 9], [6, 1]]) == 11', 'assert minimumDistance([[4, 1], [2, 2], [5, 5]]) == 3', 'assert minimumDistance([[5, 9], [9, 1], [4, 1], [4, 4], [3, 8], [4, 4], [10, 4], [6, 8], [2, 8], [4, 5]]) == 12', 'assert minimumDistance([[5, 10], [8, 9], [8, 10], [4, 9], [3, 7]]) == 5', 'assert minimumDistance([[5, 4], [5, 1], [3, 10], [10, 5], [9, 10], [2, 8], [10, 2], [8, 1], [5, 8]]) == 14', 'assert minimumDistance([[9, 3], [4, 6], [6, 10], [10, 10], [6, 1], [7, 9], [4, 6], [7, 6]]) == 10', 'assert minimumDistance([[2, 10], [8, 6], [10, 5], [2, 6], [2, 8]]) == 10', 'assert minimumDistance([[1, 6], [2, 1], [7, 3]]) == 6', 'assert minimumDistance([[3, 10], [9, 1], [4, 6], [7, 4], [6, 10], [3, 5], [1, 1], [4, 8], [6, 8]]) == 14', 'assert minimumDistance([[5, 1], [4, 10], [9, 4], [3, 1], [2, 5], [9, 4], [10, 7], [8, 7], [7, 1], [9, 3]]) == 12', 'assert minimumDistance([[7, 5], [1, 3], [9, 3], [4, 9], [2, 5], [7, 6], [10, 2], [7, 6], [5, 3]]) == 11', 'assert minimumDistance([[9, 6], [10, 6], [7, 8], [3, 2], [9, 3], [4, 4], [2, 3], [3, 2]]) == 10', 'assert minimumDistance([[4, 1], [4, 5], [10, 9], [10, 7], [1, 4], [3, 4], [9, 5], [2, 2], [9, 9], [6, 9]]) == 14', 'assert minimumDistance([[9, 6], [2, 7], [1, 10], [5, 3]]) == 8', 'assert minimumDistance([[10, 7], [8, 2], [2, 2], [9, 6], [1, 4], [10, 6], [6, 1], [1, 9], [2, 5], [6, 4]]) == 13', 'assert minimumDistance([[7, 3], [6, 4], [10, 10], [5, 4], [2, 1]]) == 7', 'assert minimumDistance([[7, 3], [3, 7], [1, 5], [5, 8], [2, 10]]) == 7', 'assert minimumDistance([[5, 1], [3, 1], [5, 1], [5, 7], [2, 2], [10, 7], [10, 6]]) == 12', 'assert minimumDistance([[8, 2], [2, 9], [4, 1], [2, 1], [7, 4], [1, 4], [5, 5], [3, 5]]) == 9', 'assert minimumDistance([[4, 2], [5, 9], [4, 6]]) == 4', 'assert minimumDistance([[6, 1], [4, 5], [3, 6], [9, 2]]) == 8', 'assert minimumDistance([[3, 5], [4, 1], [4, 5], [6, 10], [5, 4], [7, 5], [3, 4]]) == 7', 'assert minimumDistance([[3, 9], [8, 7], [4, 5], [8, 8], [1, 5], [10, 8], [1, 6]]) == 10', 'assert minimumDistance([[9, 7], [3, 7], [3, 5], [7, 8], [6, 7], [4, 10], [8, 3], [7, 7], [4, 8], [9, 9]]) == 10', 'assert minimumDistance([[9, 7], [5, 6], [3, 6], [4, 9], [5, 1], [10, 3], [4, 4]]) == 10', 'assert minimumDistance([[7, 4], [7, 6], [1, 10], [5, 3], [6, 2], [8, 7]]) == 7', 'assert minimumDistance([[4, 10], [8, 4], [2, 3], [7, 2], [9, 6], [2, 3], [8, 9]]) == 11', 'assert minimumDistance([[10, 10], [2, 1], [7, 7], [3, 1]]) == 11', 'assert minimumDistance([[3, 8], [1, 2], [4, 5], [1, 3], [6, 3]]) == 6', 'assert minimumDistance([[2, 4], [4, 6], [8, 5], [9, 10], [8, 3], [7, 10], [1, 7]]) == 11', 'assert minimumDistance([[8, 3], [2, 4], [1, 5]]) == 2', 'assert minimumDistance([[3, 6], [9, 6], [6, 3]]) == 6', 'assert minimumDistance([[10, 9], [2, 4], [7, 5], [3, 4], [6, 6], [10, 4], [9, 5], [2, 6], [4, 6], [6, 6]]) == 10', 'assert minimumDistance([[6, 9], [7, 6], [7, 7], [5, 5]]) == 4', 'assert minimumDistance([[10, 4], [2, 8], [5, 6], [6, 7]]) == 5', 'assert minimumDistance([[7, 1], [10, 3], [3, 2], [2, 7], [9, 8], [10, 7], [10, 8], [2, 7], [1, 2]]) == 13', 'assert minimumDistance([[2, 1], [2, 3], [6, 2], [8, 10], [10, 6], [2, 6], [3, 3], [2, 2], [2, 4], [7, 4]]) == 13', 'assert minimumDistance([[3, 2], [5, 3], [2, 3], [7, 6], [4, 2], [2, 7], [4, 1], [9, 7], [3, 2]]) == 8', 'assert minimumDistance([[1, 3], [2, 3], [8, 7], [6, 8], [8, 5], [3, 7], [8, 8], [9, 1]]) == 12', 'assert minimumDistance([[7, 3], [10, 4], [3, 9], [8, 4], [7, 2], [2, 5], [8, 2], [2, 6]]) == 10', 'assert minimumDistance([[1, 2], [7, 4], [8, 10], [9, 6], [3, 1], [4, 7], [1, 6]]) == 12', 'assert minimumDistance([[7, 4], [6, 2], [7, 8], [2, 2], [7, 4]]) == 7', 'assert minimumDistance([[5, 3], [10, 8], [1, 2], [6, 4], [3, 4], [2, 4], [1, 6], [1, 2], [6, 4]]) == 7', 'assert minimumDistance([[3, 3], [2, 9], [8, 3], [7, 10], [2, 6], [7, 6], [6, 5]]) == 11', 'assert minimumDistance([[6, 3], [3, 4], [6, 5], [7, 6], [8, 5], [10, 8], [4, 1], [8, 4]]) == 8', 'assert minimumDistance([[2, 7], [10, 7], [10, 4], [4, 10], [7, 5], [3, 2], [6, 3], [3, 8]]) == 12', 'assert minimumDistance([[8, 2], [6, 4], [2, 2], [2, 2], [4, 8], [2, 7], [3, 7], [4, 10], [9, 7], [9, 9]]) == 12', 'assert minimumDistance([[2, 3], [9, 2], [1, 8], [9, 10], [7, 10], [9, 7], [2, 3], [8, 1], [3, 6]]) == 14', 'assert minimumDistance([[6, 9], [3, 6], [10, 2], [2, 3], [4, 10], [5, 8], [8, 8], [9, 8]]) == 12', 'assert minimumDistance([[7, 1], [5, 4], [8, 9]]) == 5', 'assert minimumDistance([[2, 2], [2, 2], [8, 7], [6, 8], [10, 3], [6, 8], [4, 4]]) == 10', 'assert minimumDistance([[5, 4], [10, 5], [3, 7], [8, 2], [2, 9], [8, 4], [3, 2], [6, 4], [3, 5]]) == 10', 'assert minimumDistance([[2, 8], [5, 4], [5, 10], [9, 5]]) == 7', 'assert minimumDistance([[4, 9], [6, 5], [7, 10], [1, 6], [7, 2], [7, 5], [3, 6], [9, 9], [3, 7], [6, 4]]) == 10', 'assert minimumDistance([[10, 2], [6, 2], [8, 10], [5, 7], [1, 6], [8, 3], [9, 6]]) == 10', 'assert minimumDistance([[4, 8], [3, 1], [6, 8], [6, 9], [5, 7], [4, 9], [7, 1], [5, 2], [1, 5], [9, 2]]) == 11', 'assert minimumDistance([[3, 5], [7, 9], [3, 10], [2, 6], [3, 9]]) == 5', 'assert minimumDistance([[4, 3], [7, 1], [7, 10], [10, 9], [2, 1], [6, 4], [5, 2]]) == 12', 'assert minimumDistance([[3, 3], [10, 2], [6, 8], [3, 6]]) == 8', 'assert minimumDistance([[1, 4], [9, 6], [10, 3], [10, 3]]) == 4', 'assert minimumDistance([[9, 9], [10, 1], [4, 5], [6, 3], [10, 1], [2, 5], [10, 2], [4, 3], [3, 2]]) == 12', 'assert minimumDistance([[10, 3], [2, 7], [1, 7], [10, 7], [8, 8], [7, 6], [2, 10]]) == 11', 'assert minimumDistance([[2, 4], [3, 4], [8, 9], [5, 7]]) == 6', 'assert minimumDistance([[2, 10], [6, 10], [4, 10], [3, 1], [9, 4]]) == 12', 'assert minimumDistance([[4, 9], [9, 4], [2, 6], [7, 5], [1, 4], [10, 9], [2, 2]]) == 10', 'assert minimumDistance([[3, 6], [5, 1], [2, 2], [7, 2], [9, 1], [8, 1], [6, 5]]) == 8', 'assert minimumDistance([[10, 4], [10, 9], [7, 8], [1, 7], [4, 2]]) == 12', 'assert minimumDistance([[3, 10], [3, 6], [3, 9], [8, 8]]) == 4', 'assert minimumDistance([[7, 3], [4, 2], [6, 4], [5, 6], [10, 10]]) == 5', 'assert minimumDistance([[2, 8], [4, 6], [5, 10], [9, 5], [2, 2], [10, 1]]) == 11', 'assert minimumDistance([[6, 7], [2, 2], [4, 10], [3, 8], [3, 7], [1, 9], [10, 5], [4, 6], [2, 1]]) == 11', 'assert minimumDistance([[8, 4], [7, 10], [9, 5]]) == 2', 'assert minimumDistance([[10, 6], [9, 5], [8, 4], [8, 9], [9, 9], [7, 8], [9, 3]]) == 6', 'assert minimumDistance([[4, 3], [5, 1], [8, 7], [7, 10]]) == 9', 'assert minimumDistance([[4, 7], [8, 1], [2, 10], [5, 5], [8, 1], [3, 6], [1, 3], [6, 8]]) == 10', 'assert minimumDistance([[5, 6], [6, 5], [10, 8]]) == 2', 'assert minimumDistance([[1, 4], [2, 7], [9, 5], [6, 2], [5, 3], [1, 1], [6, 10], [1, 10], [3, 10]]) == 13', 'assert minimumDistance([[8, 4], [7, 8], [5, 5], [9, 4], [10, 9], [1, 3], [9, 1], [1, 9], [1, 10], [6, 4]]) == 15', 'assert minimumDistance([[10, 8], [6, 5], [7, 5], [2, 9]]) == 7', 'assert minimumDistance([[7, 4], [5, 10], [7, 2], [6, 2], [3, 8]]) == 9', 'assert minimumDistance([[3, 6], [9, 9], [10, 5], [10, 10]]) == 5', 'assert minimumDistance([[7, 6], [6, 8], [6, 5], [7, 4], [2, 2]]) == 5', 'assert minimumDistance([[8, 10], [10, 4], [4, 7], [2, 7]]) == 9', 'assert minimumDistance([[4, 4], [6, 8], [3, 5], [6, 10], [10, 6]]) == 8', 'assert minimumDistance([[5, 4], [7, 5], [1, 3], [2, 10], [10, 8], [4, 6], [8, 9]]) == 10', 'assert minimumDistance([[1, 8], [10, 9], [10, 8]]) == 1', 'assert minimumDistance([[4, 7], [7, 1], [7, 7], [8, 4]]) == 6', 'assert minimumDistance([[6, 9], [7, 7], [8, 2], [9, 3], [7, 5], [8, 5]]) == 6', 'assert minimumDistance([[3, 1], [4, 10], [6, 4], [5, 5], [5, 7], [4, 2], [8, 1], [3, 8], [3, 6]]) == 10', 'assert minimumDistance([[7, 9], [10, 2], [7, 5], [3, 5], [1, 10], [3, 4]]) == 10', 'assert minimumDistance([[10, 6], [6, 2], [9, 3], [10, 6], [3, 9], [7, 2], [5, 2], [8, 9], [9, 4]]) == 10', 'assert minimumDistance([[7, 7], [4, 2], [7, 3], [10, 9], [8, 10], [5, 5], [3, 10], [7, 5], [4, 3]]) == 12', 'assert minimumDistance([[9, 9], [10, 2], [9, 9], [4, 8], [8, 5], [7, 5], [2, 3]]) == 12', 'assert minimumDistance([[1, 7], [2, 3], [9, 1], [7, 1]]) == 9', 'assert minimumDistance([[4, 3], [10, 5], [4, 9], [1, 8], [6, 10], [4, 10], [7, 8], [1, 1], [1, 5], [4, 1]]) == 12', 'assert minimumDistance([[4, 7], [8, 9], [7, 9], [2, 4], [5, 1], [10, 4], [3, 3]]) == 10', 'assert minimumDistance([[9, 4], [1, 6], [6, 1], [10, 8], [4, 8], [5, 1], [1, 4], [5, 9]]) == 10', 'assert minimumDistance([[2, 9], [2, 2], [6, 10], [4, 8], [3, 10], [8, 4]]) == 11', 'assert minimumDistance([[5, 10], [3, 3], [8, 5], [2, 6], [4, 5], [4, 8], [5, 5], [4, 1], [3, 2]]) == 8', 'assert minimumDistance([[10, 5], [3, 10], [9, 4], [2, 4], [2, 4], [7, 7], [1, 4], [9, 2]]) == 10', 'assert minimumDistance([[10, 5], [1, 5], [5, 9], [5, 6], [10, 7]]) == 9', 'assert minimumDistance([[9, 1], [4, 7], [6, 7], [5, 7], [4, 9], [5, 6]]) == 4', 'assert minimumDistance([[4, 6], [5, 5], [10, 4], [1, 8]]) == 7', 'assert minimumDistance([[4, 2], [9, 1], [2, 1], [10, 3], [1, 5], [9, 6], [4, 2]]) == 12', 'assert minimumDistance([[4, 7], [1, 2], [7, 2], [7, 7], [8, 1], [6, 7], [3, 8], [10, 4], [3, 7]]) == 11', 'assert minimumDistance([[2, 3], [2, 5], [6, 9], [3, 2], [7, 6], [10, 6], [5, 10], [2, 4], [10, 7]]) == 11', 'assert minimumDistance([[9, 5], [8, 6], [10, 6], [3, 10], [9, 6]]) == 2', 'assert minimumDistance([[5, 2], [8, 10], [1, 2], [7, 1], [8, 8], [7, 7], [4, 8], [8, 3], [8, 1]]) == 11', 'assert minimumDistance([[5, 9], [4, 5], [10, 8], [6, 3], [7, 5], [5, 5]]) == 7', 'assert minimumDistance([[8, 7], [7, 1], [6, 2], [6, 10], [5, 6]]) == 7', 'assert minimumDistance([[9, 10], [1, 10], [3, 8]]) == 4', 'assert minimumDistance([[9, 9], [1, 5], [5, 4]]) == 5', 'assert minimumDistance([[5, 10], [5, 9], [8, 3]]) == 1', 'assert minimumDistance([[5, 3], [5, 4], [7, 1]]) == 1', 'assert minimumDistance([[10, 2], [3, 6], [2, 4]]) == 3', 'assert minimumDistance([[8, 6], [4, 3], [2, 5], [9, 9], [2, 9], [7, 7], [4, 3], [2, 10], [10, 4]]) == 11', 'assert minimumDistance([[8, 1], [9, 1], [9, 7]]) == 1', 'assert minimumDistance([[7, 9], [8, 9], [8, 5], [9, 8]]) == 3', 'assert minimumDistance([[4, 2], [1, 9], [3, 8], [6, 8], [3, 1], [9, 9], [8, 1], [4, 5]]) == 14', 'assert minimumDistance([[2, 7], [4, 5], [6, 3], [4, 9], [5, 9], [8, 2], [1, 10], [10, 10]]) == 11', 'assert minimumDistance([[9, 9], [2, 8], [5, 2], [3, 10], [10, 3], [8, 1], [7, 8], [1, 1]]) == 14', 'assert minimumDistance([[4, 3], [5, 3], [8, 9], [8, 10], [8, 1], [2, 10], [5, 3], [3, 1], [1, 1], [2, 7]]) == 15', 'assert minimumDistance([[3, 7], [1, 8], [7, 6], [10, 5], [8, 9], [10, 10], [4, 4], [7, 6], [9, 8]]) == 12', 'assert minimumDistance([[10, 1], [2, 6], [3, 5]]) == 2', 'assert minimumDistance([[7, 7], [4, 6], [4, 8], [4, 5], [3, 6], [6, 10], [2, 4], [2, 6], [3, 3]]) == 8', 'assert minimumDistance([[8, 8], [2, 5], [6, 5], [8, 1], [2, 3], [1, 4], [8, 7]]) == 10', 'assert minimumDistance([[8, 5], [5, 7], [10, 6], [6, 3], [10, 10], [9, 5], [6, 7]]) == 7', 'assert minimumDistance([[1, 4], [7, 5], [1, 1], [5, 1], [5, 5], [10, 3]]) == 10', 'assert minimumDistance([[2, 10], [1, 3], [9, 9], [3, 1], [10, 7], [8, 10]]) == 14', 'assert minimumDistance([[4, 3], [9, 7], [9, 8], [7, 9], [9, 4], [2, 10], [2, 2]]) == 13', 'assert minimumDistance([[9, 4], [9, 4], [8, 8], [4, 9], [9, 9], [10, 7], [8, 7], [1, 4], [8, 2], [5, 5]]) == 11', 'assert minimumDistance([[6, 4], [7, 9], [8, 4], [3, 8], [6, 2], [1, 2], [3, 9], [4, 10]]) == 10', 'assert minimumDistance([[1, 2], [8, 2], [6, 3], [7, 6]]) == 5', 'assert minimumDistance([[5, 1], [5, 7], [3, 5], [6, 10], [9, 2], [8, 9], [8, 10]]) == 11', 'assert minimumDistance([[5, 8], [5, 8], [7, 1], [7, 7], [5, 4]]) == 5', 'assert minimumDistance([[5, 2], [9, 1], [2, 8], [2, 8], [3, 5], [2, 4], [7, 4], [6, 4], [4, 2], [4, 10]]) == 9', 'assert minimumDistance([[4, 8], [10, 9], [8, 1], [10, 2], [5, 4], [2, 2], [9, 3], [5, 4], [3, 5], [2, 10]]) == 15', 'assert minimumDistance([[7, 4], [1, 8], [4, 1], [9, 7], [4, 8], [1, 3], [3, 9]]) == 10', 'assert minimumDistance([[4, 5], [8, 5], [4, 2], [9, 9], [10, 2], [10, 3], [3, 3], [10, 8], [6, 3]]) == 12', 'assert minimumDistance([[1, 3], [7, 1], [7, 3]]) == 2', 'assert minimumDistance([[5, 7], [6, 8], [10, 10], [2, 10]]) == 6', 'assert minimumDistance([[10, 2], [2, 7], [7, 3], [2, 10], [9, 4], [1, 2], [2, 7], [1, 8]]) == 13', 'assert minimumDistance([[2, 7], [10, 10], [9, 2], [8, 10], [1, 4], [1, 4], [6, 1], [10, 10], [3, 5]]) == 15', 'assert minimumDistance([[4, 8], [10, 1], [2, 9], [7, 8], [3, 4], [10, 5], [6, 5], [10, 3]]) == 13', 'assert minimumDistance([[1, 1], [5, 2], [9, 9], [8, 1], [1, 6], [2, 1], [8, 3], [10, 3]]) == 12', 'assert minimumDistance([[3, 3], [8, 9], [10, 2], [8, 4], [3, 6], [10, 8], [8, 6]]) == 11', 'assert minimumDistance([[2, 8], [2, 5], [9, 5], [7, 8], [1, 1], [10, 9], [3, 9], [8, 3], [2, 9], [6, 5]]) == 12', 'assert minimumDistance([[3, 8], [9, 10], [7, 3], [8, 4], [2, 2], [7, 9], [1, 1]]) == 14', 'assert minimumDistance([[2, 1], [8, 7], [5, 7], [5, 9], [6, 2], [9, 4], [10, 1], [8, 5]]) == 12', 'assert minimumDistance([[4, 3], [7, 2], [4, 7]]) == 4', 'assert minimumDistance([[4, 6], [2, 10], [4, 5], [2, 5], [5, 2], [7, 7]]) == 7', 'assert minimumDistance([[1, 8], [9, 2], [9, 4], [9, 4], [7, 3], [4, 4], [8, 4]]) == 7', 'assert minimumDistance([[10, 8], [2, 8], [7, 5], [6, 10], [1, 5], [6, 6], [8, 10], [10, 8], [4, 1]]) == 12', 'assert minimumDistance([[10, 8], [1, 2], [7, 7], [4, 7]]) == 7', 'assert minimumDistance([[6, 6], [6, 10], [5, 6]]) == 1', 'assert minimumDistance([[8, 9], [10, 6], [5, 7], [8, 9], [9, 3], [3, 9], [4, 5]]) == 8', 'assert minimumDistance([[4, 4], [4, 10], [2, 6], [3, 9], [7, 1], [10, 10], [4, 4], [6, 10]]) == 12', 'assert minimumDistance([[9, 10], [3, 4], [2, 9], [4, 2], [1, 4], [8, 3], [6, 4], [1, 1], [8, 2], [2, 3]]) == 13', 'assert minimumDistance([[3, 10], [8, 1], [7, 1], [6, 7], [1, 2], [7, 9], [10, 10], [5, 5]]) == 14', 'assert minimumDistance([[7, 1], [3, 10], [2, 1]]) == 5', 'assert minimumDistance([[4, 9], [1, 5], [10, 6], [3, 3], [9, 10], [10, 10], [9, 2], [9, 1], [5, 2]]) == 13', 'assert minimumDistance([[2, 10], [9, 7], [9, 10], [5, 10], [3, 3], [3, 10]]) == 10', 'assert minimumDistance([[5, 6], [2, 6], [6, 6]]) == 1', 'assert minimumDistance([[8, 9], [9, 2], [4, 2], [7, 3]]) == 5', 'assert minimumDistance([[3, 6], [7, 6], [2, 4], [6, 4], [3, 8], [6, 1]]) == 7', 'assert minimumDistance([[7, 3], [8, 5], [1, 6], [3, 10], [4, 6], [5, 8], [10, 5], [7, 5], [5, 1]]) == 10', 'assert minimumDistance([[9, 1], [8, 6], [7, 8], [1, 9], [10, 10], [5, 4], [9, 1], [8, 10], [6, 8], [10, 2]]) == 11', 'assert minimumDistance([[10, 9], [4, 9], [6, 4], [7, 10]]) == 6', 'assert minimumDistance([[2, 7], [4, 2], [10, 3], [5, 2], [2, 4], [9, 10], [1, 6], [2, 8]]) == 13', 'assert minimumDistance([[3, 1], [3, 5], [9, 9]]) == 4', 'assert minimumDistance([[8, 10], [8, 9], [10, 7]]) == 1', 'assert minimumDistance([[8, 7], [7, 6], [9, 2], [5, 8], [4, 6], [9, 4], [2, 4]]) == 9', 'assert minimumDistance([[10, 10], [8, 10], [7, 8], [10, 5], [9, 2]]) == 7', 'assert minimumDistance([[4, 4], [5, 4], [2, 6]]) == 1', 'assert minimumDistance([[7, 2], [6, 3], [10, 3]]) == 2', 'assert minimumDistance([[8, 10], [8, 1], [6, 2], [9, 3], [8, 5], [5, 1]]) == 7', 'assert minimumDistance([[6, 8], [1, 7], [7, 4], [9, 1]]) == 9', 'assert minimumDistance([[8, 9], [5, 9], [4, 10], [4, 1], [4, 1], [5, 10], [2, 5], [3, 2]]) == 10', 'assert minimumDistance([[1, 3], [3, 2], [9, 10], [7, 3], [3, 7], [6, 2]]) == 8', 'assert minimumDistance([[1, 7], [5, 10], [9, 10], [1, 8], [5, 2], [6, 2], [4, 10], [5, 5], [4, 3]]) == 11', 'assert minimumDistance([[8, 8], [10, 9], [6, 2]]) == 3', 'assert minimumDistance([[7, 3], [7, 7], [3, 6], [6, 6], [4, 5], [3, 4], [7, 5], [8, 4], [4, 4]]) == 7', 'assert minimumDistance([[10, 9], [7, 3], [9, 8], [3, 3], [6, 2], [5, 8], [9, 6]]) == 11', 'assert minimumDistance([[8, 3], [6, 4], [10, 10]]) == 3', 'assert minimumDistance([[6, 9], [6, 10], [9, 6], [5, 1], [1, 1], [1, 10], [3, 4], [10, 2], [2, 10], [6, 4]]) == 14', 'assert minimumDistance([[9, 9], [3, 9], [2, 3], [2, 5], [6, 7], [9, 3], [9, 1], [8, 3]]) == 13', 'assert minimumDistance([[9, 9], [7, 1], [8, 9], [2, 2], [2, 4], [5, 3], [2, 4], [6, 1], [9, 5]]) == 12', 'assert minimumDistance([[3, 3], [5, 2], [4, 3], [9, 7], [4, 4], [3, 1]]) == 4', 'assert minimumDistance([[3, 2], [6, 7], [2, 5], [4, 4], [4, 2], [2, 7], [8, 6], [3, 2], [8, 5]]) == 8', 'assert minimumDistance([[2, 7], [2, 8], [10, 7], [4, 5], [3, 5], [5, 5], [7, 9], [9, 2], [7, 8], [5, 8]]) == 9', 'assert minimumDistance([[6, 7], [2, 9], [8, 5], [2, 9], [9, 2], [6, 8], [7, 4], [10, 10], [8, 6]]) == 10', 'assert minimumDistance([[2, 6], [5, 6], [6, 8], [4, 7], [7, 8], [9, 10]]) == 7', 'assert minimumDistance([[6, 1], [7, 7], [5, 7], [9, 4], [5, 6], [2, 5], [4, 2], [5, 4]]) == 8', 'assert minimumDistance([[8, 10], [9, 9], [8, 10], [7, 10], [4, 3], [5, 2], [10, 10], [8, 9], [5, 5], [4, 1]]) == 13', 'assert minimumDistance([[6, 1], [8, 7], [3, 7], [9, 8], [9, 2], [6, 10], [5, 5], [3, 10]]) == 11', 'assert minimumDistance([[6, 7], [3, 6], [9, 9], [8, 5], [9, 5], [2, 4]]) == 8', 'assert minimumDistance([[10, 2], [5, 4], [10, 9], [3, 5], [10, 7], [1, 8], [3, 1], [4, 2], [5, 3], [1, 1]]) == 15', 'assert minimumDistance([[10, 10], [10, 7], [1, 10], [4, 6], [9, 7], [10, 8], [7, 6], [9, 4], [9, 10], [4, 10]]) == 11', 'assert minimumDistance([[7, 1], [7, 3], [5, 9], [5, 2], [8, 3], [10, 8], [7, 1], [9, 3], [8, 6], [3, 6]]) == 10', 'assert minimumDistance([[5, 8], [9, 8], [7, 5], [1, 10], [4, 9]]) == 7', 'assert minimumDistance([[9, 4], [6, 1], [9, 6], [10, 1], [7, 3], [5, 5], [7, 6], [10, 2]]) == 8', 'assert minimumDistance([[7, 3], [7, 6], [7, 3], [2, 7], [7, 1], [4, 8], [2, 4]]) == 9', 'assert minimumDistance([[7, 8], [3, 1], [6, 3], [3, 9], [7, 8]]) == 9', 'assert minimumDistance([[4, 2], [8, 5], [3, 2]]) == 1', 'assert minimumDistance([[5, 4], [2, 2], [4, 4], [1, 5], [4, 5], [8, 9]]) == 5', 'assert minimumDistance([[1, 2], [5, 1], [10, 3], [9, 6], [7, 1]]) == 9', 'assert minimumDistance([[3, 4], [10, 3], [3, 6], [4, 7], [6, 4], [3, 10], [2, 7], [8, 4], [9, 4], [1, 6]]) == 12', 'assert minimumDistance([[2, 8], [7, 3], [3, 10], [7, 5], [2, 1]]) == 10', 'assert minimumDistance([[5, 4], [5, 7], [4, 3], [10, 4]]) == 5', 'assert minimumDistance([[10, 1], [2, 9], [7, 9], [8, 9], [2, 3], [10, 2], [2, 8], [2, 7], [4, 10]]) == 15', 'assert minimumDistance([[1, 4], [7, 6], [4, 5], [5, 2], [2, 2]]) == 6', 'assert minimumDistance([[3, 4], [6, 2], [4, 5], [7, 3], [7, 4], [6, 7], [5, 7], [4, 10], [5, 1], [1, 2]]) == 10', 'assert minimumDistance([[3, 10], [6, 9], [5, 6], [3, 9]]) == 4', 'assert minimumDistance([[7, 8], [5, 10], [2, 6], [7, 8], [8, 1], [6, 6], [9, 10], [8, 9], [5, 2], [6, 1]]) == 12', 'assert minimumDistance([[9, 9], [9, 8], [5, 1], [1, 9], [4, 1], [7, 6], [8, 7], [7, 6]]) == 12', 'assert minimumDistance([[2, 2], [1, 5], [10, 2], [5, 3], [10, 7], [7, 5], [10, 6]]) == 12', 'assert minimumDistance([[1, 6], [8, 4], [6, 3], [10, 10]]) == 9', 'assert minimumDistance([[9, 8], [2, 10], [8, 7], [7, 4], [2, 10], [2, 3], [8, 7], [4, 7], [5, 9], [10, 4]]) == 12', 'assert minimumDistance([[3, 2], [10, 9], [7, 7], [6, 3], [9, 7], [1, 4], [8, 4], [6, 5], [5, 1], [1, 4]]) == 11', 'assert minimumDistance([[8, 8], [7, 3], [3, 5]]) == 6', 'assert minimumDistance([[4, 5], [7, 9], [9, 1], [3, 2], [4, 9], [7, 6], [6, 9], [3, 10]]) == 11', 'assert minimumDistance([[2, 8], [6, 1], [7, 2], [4, 2], [10, 4], [5, 5]]) == 8', 'assert minimumDistance([[3, 7], [5, 2], [10, 8], [7, 7], [10, 6], [6, 3]]) == 9', 'assert minimumDistance([[2, 3], [8, 8], [1, 5], [4, 7], [8, 1], [9, 2], [10, 6]]) == 11', 'assert minimumDistance([[7, 10], [9, 8], [8, 8], [3, 1], [2, 1], [6, 9]]) == 13', 'assert minimumDistance([[1, 8], [4, 9], [4, 9], [7, 5]]) == 4', 'assert minimumDistance([[6, 5], [2, 1], [8, 9], [4, 3], [6, 5], [7, 4]]) == 8', 'assert minimumDistance([[1, 8], [1, 8], [9, 4], [3, 6]]) == 4', 'assert minimumDistance([[5, 6], [2, 7], [3, 1], [3, 6], [4, 4], [9, 5], [5, 7], [9, 10], [6, 8]]) == 10', 'assert minimumDistance([[4, 7], [4, 2], [10, 2], [9, 6], [9, 8], [2, 5]]) == 11', 'assert minimumDistance([[7, 3], [4, 4], [9, 9], [2, 5]]) == 7', 'assert minimumDistance([[5, 6], [1, 2], [9, 5], [3, 8], [7, 8], [8, 6], [9, 9], [3, 3]]) == 12', 'assert minimumDistance([[10, 7], [6, 4], [3, 3], [8, 7], [6, 7]]) == 7', 'assert minimumDistance([[9, 4], [10, 4], [9, 4], [3, 2], [2, 4], [10, 8], [3, 4], [5, 6], [4, 10], [2, 7]]) == 12', 'assert minimumDistance([[4, 1], [10, 9], [4, 5], [7, 9], [6, 8], [1, 5], [9, 7]]) == 11', 'assert minimumDistance([[8, 5], [10, 3], [8, 7], [6, 2], [10, 2], [8, 10]]) == 7', 'assert minimumDistance([[7, 5], [10, 7], [7, 2], [2, 6]]) == 8', 'assert minimumDistance([[8, 7], [9, 10], [6, 8], [9, 4], [8, 3]]) == 7', 'assert minimumDistance([[10, 3], [2, 5], [6, 6], [3, 1], [3, 5], [10, 5], [8, 8]]) == 10', 'assert minimumDistance([[1, 10], [6, 4], [3, 9], [3, 8], [8, 6], [3, 5]]) == 8', 'assert minimumDistance([[8, 9], [1, 2], [7, 8], [1, 10]]) == 8', 'assert minimumDistance([[8, 1], [4, 7], [2, 4], [4, 8], [8, 3], [3, 3], [3, 10], [9, 7]]) == 11', 'assert minimumDistance([[1, 3], [2, 9], [7, 3], [8, 2]]) == 8', 'assert minimumDistance([[5, 8], [6, 2], [3, 7], [10, 7], [2, 10], [5, 2], [7, 10]]) == 10', 'assert minimumDistance([[10, 3], [8, 3], [3, 8], [4, 3], [10, 10]]) == 12', 'assert minimumDistance([[10, 4], [10, 4], [3, 8], [9, 9]]) == 6', 'assert minimumDistance([[5, 7], [5, 8], [2, 8], [7, 3], [3, 8], [9, 7], [8, 4], [2, 7], [6, 3]]) == 9', 'assert minimumDistance([[10, 2], [9, 7], [2, 5]]) == 6', 'assert minimumDistance([[10, 3], [3, 10], [6, 6]]) == 7', 'assert minimumDistance([[10, 10], [4, 9], [10, 10], [7, 7], [9, 10], [6, 9], [3, 4], [9, 9], [5, 7], [1, 3]]) == 13', 'assert minimumDistance([[4, 8], [2, 8], [8, 9], [2, 3], [1, 1], [2, 2], [5, 2], [6, 9], [3, 7]]) == 13', 'assert minimumDistance([[9, 5], [8, 3], [10, 5], [2, 8], [5, 8], [10, 8], [10, 1]]) == 11', 'assert minimumDistance([[1, 2], [1, 7], [8, 10]]) == 5', 'assert minimumDistance([[8, 4], [8, 5], [5, 10], [2, 7], [1, 10], [3, 6], [1, 9], [2, 4], [9, 8], [4, 10]]) == 12', 'assert minimumDistance([[3, 1], [10, 5], [2, 6], [5, 2], [7, 1], [6, 8], [2, 4], [8, 3]]) == 10', 'assert minimumDistance([[8, 6], [1, 2], [7, 7], [4, 4], [1, 9], [6, 3], [8, 10], [7, 6], [3, 5], [3, 4]]) == 11', 'assert minimumDistance([[2, 8], [10, 9], [3, 8], [1, 5], [5, 4], [1, 7], [7, 6], [3, 10]]) == 8', 'assert minimumDistance([[9, 8], [1, 10], [4, 8], [9, 4], [6, 2], [3, 3], [9, 6], [5, 2], [3, 10]]) == 12', 'assert minimumDistance([[6, 8], [10, 1], [3, 4]]) == 7', 'assert minimumDistance([[8, 7], [6, 2], [7, 10], [1, 2], [7, 8], [4, 9], [5, 9], [9, 4]]) == 10', 'assert minimumDistance([[8, 10], [10, 3], [1, 5], [8, 4]]) == 9', 'assert minimumDistance([[4, 8], [6, 3], [5, 7], [2, 8]]) == 4', 'assert minimumDistance([[2, 7], [3, 9], [5, 9], [4, 6]]) == 4', 'assert minimumDistance([[7, 2], [3, 4], [3, 3], [3, 6], [2, 1], [3, 7], [10, 7], [3, 2], [6, 9], [7, 5]]) == 12', 'assert minimumDistance([[7, 3], [10, 1], [1, 7], [10, 6], [9, 6], [6, 9], [8, 10], [8, 2]]) == 12', 'assert minimumDistance([[1, 6], [8, 3], [8, 6], [6, 5]]) == 4', 'assert minimumDistance([[1, 3], [5, 1], [2, 3], [1, 8], [2, 6], [1, 8], [8, 3], [2, 1], [3, 7], [4, 5]]) == 11', 'assert minimumDistance([[7, 2], [8, 3], [7, 5], [5, 9], [1, 5], [10, 4], [1, 2], [4, 6], [9, 8], [5, 5]]) == 11', 'assert minimumDistance([[8, 5], [6, 2], [10, 5], [6, 5], [5, 6]]) == 5', 'assert minimumDistance([[3, 1], [5, 4], [7, 5], [6, 3], [2, 4], [10, 9]]) == 8', 'assert minimumDistance([[2, 6], [8, 6], [2, 3], [6, 8], [4, 9], [1, 8], [7, 6]]) == 9', 'assert minimumDistance([[6, 5], [6, 8], [9, 1], [1, 3]]) == 10', 'assert minimumDistance([[10, 1], [2, 3], [3, 1], [6, 10], [7, 6], [7, 4]]) == 10', 'assert minimumDistance([[7, 9], [6, 3], [1, 7], [2, 10], [1, 4], [1, 2], [4, 2], [8, 7]]) == 11', 'assert minimumDistance([[5, 7], [1, 9], [3, 6], [5, 6], [5, 5]]) == 3', 'assert minimumDistance([[6, 2], [3, 5], [10, 8], [5, 10], [2, 5], [4, 7], [9, 1], [7, 10]]) == 11', 'assert minimumDistance([[8, 2], [3, 4], [2, 1], [6, 9], [2, 1], [7, 9]]) == 12', 'assert minimumDistance([[4, 1], [8, 5], [6, 9], [6, 10], [7, 3], [10, 1], [10, 1], [2, 4], [10, 6], [10, 8]]) == 13', 'assert minimumDistance([[3, 9], [4, 1], [2, 4]]) == 5', 'assert minimumDistance([[8, 5], [4, 4], [4, 2], [5, 4]]) == 3', 'assert minimumDistance([[7, 1], [2, 4], [6, 2], [4, 7], [8, 9], [3, 6], [8, 6], [7, 6]]) == 9', 'assert minimumDistance([[1, 10], [6, 8], [10, 1], [3, 10], [8, 5], [6, 1], [1, 8], [9, 3]]) == 15', 'assert minimumDistance([[3, 5], [9, 8], [2, 9], [9, 8], [9, 4], [7, 5]]) == 9', 'assert minimumDistance([[8, 4], [10, 3], [7, 1], [4, 1], [7, 2], [4, 9], [10, 7], [1, 4]]) == 12', 'assert minimumDistance([[6, 7], [7, 5], [3, 3], [2, 4], [2, 7]]) == 7', 'assert minimumDistance([[1, 6], [2, 3], [6, 1], [6, 10], [2, 6]]) == 10', 'assert minimumDistance([[10, 3], [7, 8], [6, 4], [3, 3], [10, 5], [2, 9], [5, 7]]) == 9', 'assert minimumDistance([[8, 7], [6, 4], [8, 2], [8, 9], [3, 1]]) == 7', 'assert minimumDistance([[2, 2], [6, 9], [4, 1], [10, 2]]) == 8', 'assert minimumDistance([[10, 6], [9, 7], [8, 4], [6, 9], [6, 10], [9, 1], [10, 6]]) == 8', 'assert minimumDistance([[9, 8], [8, 3], [8, 8], [1, 7], [7, 9], [4, 3], [9, 2], [10, 6], [9, 1], [8, 6]]) == 10', 'assert minimumDistance([[3, 9], [4, 6], [7, 7], [3, 9], [8, 8], [10, 7], [3, 5], [3, 6], [5, 1], [3, 7]]) == 9', 'assert minimumDistance([[8, 7], [3, 1], [8, 6], [9, 5], [6, 1]]) == 8', 'assert minimumDistance([[2, 9], [6, 2], [10, 2], [6, 3], [6, 4], [5, 10], [7, 7], [9, 1], [7, 4], [1, 9]]) == 15', 'assert minimumDistance([[4, 3], [7, 6], [3, 1], [4, 4], [10, 4], [6, 3], [5, 1]]) == 8', 'assert minimumDistance([[5, 5], [9, 5], [1, 10], [2, 5], [4, 7]]) == 7', 'assert minimumDistance([[10, 2], [9, 7], [4, 5]]) == 6', 'assert minimumDistance([[3, 5], [5, 1], [2, 8], [3, 2], [6, 9], [10, 3], [10, 5], [7, 1], [4, 2], [9, 3]]) == 10', 'assert minimumDistance([[5, 1], [2, 10], [4, 8], [9, 4], [7, 2], [6, 5], [9, 9], [10, 7], [6, 9], [1, 10]]) == 13', 'assert minimumDistance([[3, 2], [5, 1], [1, 5], [9, 1]]) == 7', 'assert minimumDistance([[10, 3], [2, 8], [10, 10], [9, 2], [8, 5], [7, 4], [6, 6], [3, 7], [9, 2], [4, 2]]) == 13', 'assert minimumDistance([[5, 9], [2, 7], [9, 8], [7, 2], [3, 8], [1, 1], [3, 10], [4, 8], [4, 7]]) == 12', 'assert minimumDistance([[7, 5], [8, 5], [2, 8], [5, 9], [7, 8], [2, 2], [8, 2]]) == 11', 'assert minimumDistance([[2, 4], [5, 6], [7, 3], [9, 9]]) == 6', 'assert minimumDistance([[5, 7], [4, 8], [2, 9], [2, 9], [5, 3]]) == 5', 'assert minimumDistance([[3, 5], [7, 3], [3, 8], [9, 6]]) == 7', 'assert minimumDistance([[3, 10], [7, 6], [7, 3], [7, 3], [6, 6], [8, 1], [1, 7], [5, 7], [1, 10]]) == 13', 'assert minimumDistance([[4, 8], [3, 9], [5, 7], [7, 7], [1, 2], [7, 6], [8, 4]]) == 10', 'assert minimumDistance([[1, 5], [1, 6], [9, 7], [10, 1], [7, 3], [7, 2], [1, 6], [3, 2], [10, 1], [8, 3]]) == 14', 'assert minimumDistance([[8, 10], [6, 1], [5, 9]]) == 4', 'assert minimumDistance([[10, 2], [4, 7], [4, 7], [7, 10], [2, 3], [5, 7], [6, 2], [10, 1], [8, 8]]) == 12', 'assert minimumDistance([[3, 1], [10, 5], [1, 3], [3, 6], [3, 4], [9, 8]]) == 11', 'assert minimumDistance([[9, 1], [1, 7], [3, 10], [2, 9], [9, 6], [5, 2], [5, 6], [3, 1]]) == 11', 'assert minimumDistance([[5, 6], [2, 6], [5, 7], [9, 1], [7, 8], [7, 7]]) == 7', 'assert minimumDistance([[9, 5], [8, 2], [3, 5], [8, 7], [7, 3]]) == 5', 'assert minimumDistance([[10, 2], [3, 1], [10, 7]]) == 5', 'assert minimumDistance([[6, 10], [1, 3], [2, 1], [9, 1], [5, 7], [1, 8], [3, 4]]) == 13', 'assert minimumDistance([[10, 10], [7, 7], [9, 7], [7, 9], [1, 5]]) == 6', 'assert minimumDistance([[3, 8], [4, 4], [9, 5], [10, 2], [8, 10], [2, 5], [10, 3]]) == 11', 'assert minimumDistance([[6, 2], [9, 6], [7, 2], [3, 4]]) == 6', 'assert minimumDistance([[2, 2], [1, 2], [7, 9], [1, 10], [5, 3], [5, 10]]) == 12', 'assert minimumDistance([[7, 8], [6, 10], [5, 9], [8, 8], [9, 8], [8, 10], [3, 10], [2, 1]]) == 8', 'assert minimumDistance([[5, 10], [10, 5], [5, 2], [3, 6], [4, 10]]) == 9', 'assert minimumDistance([[5, 8], [8, 9], [1, 7], [8, 1], [8, 1], [1, 10], [9, 8]]) == 13', 'assert minimumDistance([[1, 7], [2, 6], [6, 2], [4, 7], [1, 3], [2, 3], [8, 7], [7, 4], [5, 3]]) == 10', 'assert minimumDistance([[9, 8], [8, 2], [10, 7], [9, 10], [9, 7], [7, 1], [6, 8], [1, 3], [2, 2], [1, 6]]) == 13', 'assert minimumDistance([[7, 4], [8, 10], [2, 1], [7, 3], [7, 6], [7, 9], [9, 3], [3, 9]]) == 12', 'assert minimumDistance([[10, 4], [4, 6], [8, 10], [5, 6], [9, 8], [6, 2], [3, 4], [9, 1], [9, 10]]) == 11', 'assert minimumDistance([[7, 10], [8, 8], [3, 9], [9, 5], [8, 9], [9, 5], [6, 9], [9, 6], [4, 3], [2, 3]]) == 10', 'assert minimumDistance([[3, 10], [6, 2], [7, 6], [10, 6], [2, 6], [7, 9], [7, 4], [5, 7]]) == 8', 'assert minimumDistance([[2, 4], [9, 5], [4, 7], [9, 6], [7, 4], [6, 4], [10, 4], [6, 1], [2, 5]]) == 9', 'assert minimumDistance([[1, 2], [9, 3], [10, 3], [8, 6], [2, 2], [10, 3], [2, 10], [2, 8]]) == 13', 'assert minimumDistance([[9, 4], [6, 10], [1, 4], [8, 1], [7, 1], [8, 2], [7, 7], [6, 4], [8, 4]]) == 10', 'assert minimumDistance([[5, 9], [9, 9], [7, 10], [10, 3], [8, 9], [8, 7], [9, 5], [7, 2], [8, 5]]) == 9', 'assert minimumDistance([[3, 5], [8, 9], [6, 3], [10, 4], [10, 2], [7, 4]]) == 9', 'assert minimumDistance([[2, 7], [7, 8], [2, 9], [2, 8], [9, 5], [5, 9]]) == 6', 'assert minimumDistance([[10, 10], [1, 2], [3, 3], [10, 4], [1, 10], [6, 7], [4, 6], [10, 4], [6, 6]]) == 15', 'assert minimumDistance([[7, 10], [10, 4], [3, 2], [8, 4]]) == 9', 'assert minimumDistance([[3, 4], [5, 1], [9, 1], [9, 8]]) == 9', 'assert minimumDistance([[6, 7], [2, 3], [8, 2], [10, 6], [3, 5]]) == 8', 'assert minimumDistance([[4, 5], [5, 6], [8, 5], [8, 6], [1, 4], [7, 2], [1, 6], [9, 6]]) == 10', 'assert minimumDistance([[1, 10], [10, 8], [3, 7], [8, 5], [7, 7], [3, 3]]) == 12', 'assert minimumDistance([[8, 4], [1, 7], [6, 9], [3, 4], [2, 8], [9, 3], [7, 10], [5, 2], [2, 7], [4, 8]]) == 10', 'assert minimumDistance([[2, 6], [8, 9], [1, 6], [5, 8], [4, 9], [4, 9]]) == 6', 'assert minimumDistance([[2, 9], [7, 6], [8, 10], [1, 2], [4, 10], [6, 7], [7, 10], [8, 5]]) == 10', 'assert minimumDistance([[6, 8], [3, 3], [8, 6], [2, 7], [8, 10], [1, 7]]) == 8', 'assert minimumDistance([[10, 4], [7, 2], [6, 3], [8, 7], [3, 2]]) == 6', 'assert minimumDistance([[3, 4], [3, 9], [1, 2]]) == 4', 'assert minimumDistance([[10, 6], [5, 9], [1, 2], [1, 5], [7, 5], [4, 3]]) == 10', 'assert minimumDistance([[10, 3], [8, 2], [4, 3], [1, 8], [2, 5], [10, 6]]) == 10', 'assert minimumDistance([[8, 5], [9, 3], [1, 3], [6, 4], [2, 5], [8, 4], [4, 3], [1, 1], [10, 7], [4, 6]]) == 11', 'assert minimumDistance([[5, 7], [9, 7], [7, 8], [1, 8], [3, 4], [10, 5], [9, 10], [4, 4], [2, 1]]) == 12', 'assert minimumDistance([[4, 5], [7, 3], [1, 9]]) == 5', 'assert minimumDistance([[6, 10], [8, 4], [2, 6], [7, 10]]) == 8', 'assert minimumDistance([[6, 10], [6, 9], [2, 8], [2, 3], [5, 6], [5, 3], [7, 7], [8, 8], [3, 6], [9, 4]]) == 11', 'assert minimumDistance([[7, 9], [9, 4], [5, 5]]) == 5', 'assert minimumDistance([[6, 9], [2, 9], [9, 9], [5, 9], [9, 9], [6, 10]]) == 4', 'assert minimumDistance([[8, 3], [6, 4], [2, 10], [7, 7], [7, 3], [8, 7], [10, 10], [7, 4], [6, 4]]) == 10', 'assert minimumDistance([[6, 9], [1, 3], [9, 5], [8, 9], [8, 10], [2, 9], [8, 6]]) == 11', 'assert minimumDistance([[6, 5], [10, 10], [7, 7]]) == 3', 'assert minimumDistance([[5, 7], [5, 7], [5, 6], [9, 10], [9, 8], [5, 10], [8, 6], [1, 2], [8, 1], [5, 8]]) == 12', 'assert minimumDistance([[4, 1], [4, 5], [5, 4], [3, 3], [9, 10]]) == 4', 'assert minimumDistance([[6, 5], [3, 1], [7, 4], [3, 7], [7, 5], [9, 6], [9, 10]]) == 9', 'assert minimumDistance([[2, 6], [5, 4], [9, 2], [5, 10], [6, 6], [10, 2], [3, 8], [9, 6], [2, 8], [9, 4]]) == 13', 'assert minimumDistance([[10, 3], [5, 8], [9, 1], [9, 5], [9, 7]]) == 6', 'assert minimumDistance([[9, 8], [4, 2], [8, 5], [3, 4], [4, 6], [4, 5], [9, 7], [4, 9], [10, 1]]) == 11', 'assert minimumDistance([[10, 4], [1, 8], [1, 9], [3, 8], [10, 9], [6, 4], [1, 9], [8, 8]]) == 10', 'assert minimumDistance([[10, 9], [1, 3], [4, 3], [7, 7], [8, 1], [6, 4], [8, 10]]) == 12', 'assert minimumDistance([[7, 10], [5, 3], [8, 5], [1, 8], [10, 4]]) == 9', 'assert minimumDistance([[2, 3], [6, 9], [8, 8]]) == 3', 'assert minimumDistance([[5, 3], [8, 7], [5, 3], [10, 5], [1, 7]]) == 7', 'assert minimumDistance([[6, 7], [7, 10], [4, 7], [2, 4]]) == 6', 'assert minimumDistance([[3, 2], [9, 1], [1, 8], [8, 5], [1, 6], [1, 4], [3, 6], [2, 1], [6, 2], [3, 1]]) == 11', 'assert minimumDistance([[2, 5], [1, 5], [8, 4], [3, 7], [5, 3], [9, 4], [7, 8]]) == 9', 'assert minimumDistance([[7, 5], [2, 7], [10, 8], [6, 10], [8, 2], [3, 10], [4, 1], [7, 5]]) == 13', 'assert minimumDistance([[6, 8], [2, 9], [4, 3]]) == 5', 'assert minimumDistance([[5, 9], [7, 7], [1, 5], [2, 6], [4, 8], [9, 3], [6, 5]]) == 8', 'assert minimumDistance([[4, 3], [6, 4], [10, 1], [2, 10], [5, 7], [1, 1], [7, 8], [9, 4], [6, 3], [1, 7]]) == 13', 'assert minimumDistance([[3, 7], [3, 3], [5, 9], [2, 3], [6, 1], [3, 4], [7, 5], [7, 5], [4, 5]]) == 9', 'assert minimumDistance([[6, 3], [3, 3], [7, 7], [2, 9], [10, 2], [10, 1], [8, 2], [7, 4], [4, 9]]) == 14', 'assert minimumDistance([[5, 10], [8, 7], [2, 10]]) == 3', 'assert minimumDistance([[4, 2], [3, 3], [3, 3], [2, 4], [8, 5]]) == 4', 'assert minimumDistance([[4, 8], [2, 9], [7, 3], [9, 6], [2, 4], [1, 1], [2, 10], [8, 6], [3, 8]]) == 12', 'assert minimumDistance([[9, 7], [3, 2], [3, 5], [3, 1], [6, 7]]) == 9', 'assert minimumDistance([[7, 1], [5, 5], [1, 4], [5, 3]]) == 5', 'assert minimumDistance([[4, 7], [7, 2], [6, 4], [5, 8], [4, 1], [7, 5]]) == 8', 'assert minimumDistance([[1, 9], [2, 6], [6, 6], [3, 9], [2, 5], [9, 1]]) == 8', 'assert minimumDistance([[10, 1], [10, 7], [3, 2], [1, 1], [7, 7], [9, 9], [9, 1], [1, 5], [5, 1]]) == 13', 'assert minimumDistance([[6, 9], [3, 8], [9, 3], [7, 6]]) == 6', 'assert minimumDistance([[3, 5], [7, 9], [4, 9], [5, 9], [3, 5], [8, 9], [4, 9]]) == 8', 'assert minimumDistance([[3, 3], [6, 8], [2, 5], [8, 3], [10, 10], [2, 10], [4, 5]]) == 13', 'assert minimumDistance([[2, 7], [5, 6], [9, 6], [3, 2], [4, 9], [3, 2], [9, 6], [7, 2], [1, 10]]) == 10', 'assert minimumDistance([[2, 5], [2, 4], [8, 5], [8, 9], [6, 4], [8, 9]]) == 10', 'assert minimumDistance([[10, 4], [3, 4], [6, 8], [5, 3], [10, 3], [9, 9], [2, 8], [10, 4]]) == 11', 'assert minimumDistance([[1, 10], [8, 4], [3, 5], [10, 7], [5, 3], [10, 10]]) == 12', 'assert minimumDistance([[5, 9], [7, 9], [3, 3], [2, 3]]) == 9', 'assert minimumDistance([[1, 7], [8, 4], [9, 10], [2, 4], [7, 8]]) == 10', 'assert minimumDistance([[10, 6], [4, 6], [4, 1], [6, 5], [3, 9], [9, 2], [8, 6], [10, 6], [1, 4], [6, 8]]) == 11', 'assert minimumDistance([[2, 2], [9, 10], [3, 8], [8, 1], [5, 2], [8, 10], [2, 10], [6, 3]]) == 15', 'assert minimumDistance([[6, 4], [2, 1], [10, 9], [7, 2], [2, 2], [5, 7], [8, 9], [4, 7]]) == 14', 'assert minimumDistance([[1, 6], [9, 3], [9, 9], [5, 8], [5, 1], [10, 6], [3, 2], [10, 2], [10, 4], [10, 9]]) == 13', 'assert minimumDistance([[4, 8], [7, 4], [1, 9], [7, 5], [5, 9], [2, 2], [4, 9], [3, 10]]) == 10', 'assert minimumDistance([[9, 6], [6, 9], [2, 3], [10, 3], [10, 6], [8, 3]]) == 10', 'assert minimumDistance([[1, 6], [8, 1], [10, 5], [2, 8], [1, 2]]) == 12', 'assert minimumDistance([[10, 7], [6, 6], [5, 7], [2, 4], [9, 8], [5, 8], [10, 6]]) == 7', 'assert minimumDistance([[760, 963], [643, 990], [561, 832], [838, 564], [922, 93], [224, 573], [706, 845], [719, 767], [824, 673], [257, 446], [125, 738], [47, 216], [185, 765], [132, 298], [797, 72], [799, 570], [338, 780], [937, 396], [566, 224], [853, 736], [399, 992], [699, 952], [890, 83], [32, 16], [603, 511], [593, 968], [183, 496], [162, 10], [530, 636]]) == 1551', 'assert minimumDistance([[316, 823], [130, 678], [913, 613], [120, 984], [899, 922], [658, 133], [515, 454], [98, 356], [135, 370], [645, 741], [1000, 111], [167, 583], [168, 944], [773, 536], [620, 930], [838, 751], [312, 146], [206, 911], [664, 53], [994, 90], [599, 679], [200, 590], [362, 350], [39, 1], [644, 376], [869, 546], [470, 584], [107, 364], [552, 655], [154, 630], [443, 323], [246, 670], [694, 840], [489, 938], [42, 66], [585, 871], [612, 588], [449, 234], [588, 589], [539, 773], [955, 919], [714, 691], [581, 343], [214, 874], [735, 609], [709, 45], [566, 499], [336, 141], [572, 89], [661, 210], [308, 124]]) == 1768', 'assert minimumDistance([[74, 466], [477, 813], [640, 425], [184, 668], [971, 372], [337, 485], [455, 583], [775, 643], [568, 461], [697, 591], [515, 386], [870, 762], [433, 117], [715, 418], [717, 202], [978, 679], [832, 212], [446, 71], [237, 489], [324, 30], [212, 48], [533, 203], [286, 899], [851, 290], [658, 566], [42, 564], [547, 860], [714, 849], [438, 839], [445, 913], [372, 477], [642, 707], [514, 39], [810, 493], [374, 451], [377, 512], [659, 632], [227, 441], [83, 240], [439, 553], [10, 346], [346, 539], [955, 40], [462, 348], [953, 983], [704, 658], [209, 349], [86, 595]]) == 1528', 'assert minimumDistance([[893, 553], [619, 718], [213, 473], [82, 920], [778, 506], [693, 350], [963, 882], [852, 280], [206, 462], [457, 558], [676, 697], [952, 548], [955, 426], [59, 928], [72, 442], [101, 251], [439, 296], [649, 337], [58, 322], [328, 673], [820, 621], [224, 419], [804, 194], [180, 782], [289, 445], [887, 606], [74, 436], [512, 269], [330, 400], [10, 606], [395, 253], [539, 629], [248, 322], [276, 680], [181, 813], [445, 11], [545, 651], [515, 349], [92, 472], [101, 289], [673, 657], [129, 153], [627, 474], [273, 154], [897, 291], [851, 922], [310, 379], [214, 640], [817, 300], [918, 668], [318, 921], [525, 1], [759, 900], [742, 639], [598, 769], [149, 764], [220, 861], [838, 572], [761, 482], [734, 232], [909, 395], [219, 981], [820, 109], [783, 343], [165, 887], [787, 661], [995, 892], [98, 680], [580, 770], [669, 665], [580, 112], [975, 243], [342, 477], [482, 816], [186, 143], [704, 563], [4, 133], [583, 685], [401, 5], [33, 890], [736, 404], [169, 934], [574, 853], [686, 91], [781, 34], [217, 391], [452, 221], [868, 751]]) == 1616', 'assert minimumDistance([[422, 83], [876, 946], [578, 971], [921, 747], [232, 741], [436, 882], [444, 82], [22, 16], [774, 428], [518, 705], [954, 861], [172, 188], [971, 253], [594, 233], [979, 843], [270, 979], [173, 717], [44, 239], [230, 140], [907, 151], [564, 755], [276, 818], [3, 877], [547, 41], [441, 186], [439, 667], [893, 445], [710, 403], [589, 216], [425, 239], [256, 408], [171, 951], [400, 837], [26, 45], [306, 493], [173, 324], [880, 125], [857, 563], [260, 507], [550, 834], [29, 583], [923, 482], [206, 482], [943, 206], [969, 897], [925, 579], [686, 692], [243, 37], [691, 130], [782, 88], [182, 782], [819, 264], [211, 208], [676, 825], [310, 237], [599, 264], [563, 980], [607, 89], [810, 681], [838, 76], [11, 38], [994, 272], [822, 460], [739, 299], [805, 2], [887, 474], [129, 260], [722, 584], [570, 81], [906, 404], [283, 769], [76, 549], [903, 926]]) == 1791', 'assert minimumDistance([[945, 516], [298, 248], [628, 611], [789, 462], [291, 705], [96, 49], [552, 469], [503, 833], [180, 23], [70, 322], [34, 801], [346, 493], [75, 730], [656, 99], [731, 431], [577, 966], [763, 991], [369, 132], [640, 96], [100, 298], [632, 224], [72, 361], [882, 5], [144, 402], [609, 830], [566, 152], [63, 895], [507, 871], [433, 443], [276, 387], [172, 222], [63, 576], [488, 927], [498, 120], [756, 908], [301, 959], [569, 248], [720, 673], [872, 590], [202, 358], [609, 447], [520, 571], [603, 468], [459, 765], [99, 682], [87, 791], [74, 693], [770, 524], [505, 598], [165, 247], [788, 737], [358, 868], [8, 1000], [88, 470], [698, 602], [844, 965], [359, 597], [347, 35], [98, 526], [152, 167], [944, 47], [935, 373], [424, 984], [310, 459], [989, 761], [579, 72], [150, 387], [94, 140], [451, 652], [231, 353], [923, 109], [353, 357], [759, 255], [945, 620], [200, 84], [214, 799], [900, 976], [500, 159], [230, 181], [126, 298], [484, 23], [484, 155], [870, 899], [99, 585], [430, 643], [350, 882], [869, 69], [898, 447], [491, 613], [260, 540], [285, 271], [620, 820], [131, 530], [339, 989], [543, 237], [490, 443], [998, 647], [812, 30]]) == 1731', 'assert minimumDistance([[685, 161], [11, 761], [423, 672], [183, 632], [185, 296], [777, 323], [343, 177], [536, 982], [473, 465], [742, 65], [73, 671], [699, 686], [559, 503], [370, 512], [312, 743], [459, 193], [970, 704], [160, 549], [952, 524], [388, 689], [17, 611], [12, 310], [45, 416], [408, 169], [884, 934], [742, 871], [194, 872], [258, 426], [796, 708], [660, 118], [328, 896], [11, 372], [64, 778], [887, 105], [521, 440]]) == 1496', 'assert minimumDistance([[510, 826], [876, 833], [508, 249], [620, 663], [87, 857], [381, 776], [569, 922], [581, 687], [397, 151], [817, 904], [164, 520], [805, 897], [261, 471], [538, 838], [224, 832], [956, 551], [406, 426], [376, 172], [650, 927], [475, 163], [688, 159], [86, 365], [443, 441], [128, 924], [214, 552], [801, 43], [466, 272], [174, 268], [847, 291], [206, 568], [786, 219], [600, 872], [463, 238], [367, 755], [860, 132]]) == 1524', 'assert minimumDistance([[719, 436], [591, 251], [365, 990], [770, 939], [141, 232], [166, 947], [41, 562], [126, 9], [994, 194], [433, 924], [770, 43], [987, 573], [783, 899], [131, 638], [594, 506], [911, 482], [184, 74], [989, 605], [659, 236], [657, 528], [829, 574], [616, 651], [655, 785], [376, 141], [926, 755], [600, 186], [451, 388], [399, 168], [396, 852], [976, 355], [322, 122], [519, 3], [434, 66], [387, 164], [749, 499], [123, 139], [579, 77], [467, 445], [8, 236], [295, 717], [947, 348], [736, 316], [16, 942], [914, 833], [996, 611], [985, 139], [798, 285], [717, 175], [157, 364], [341, 336], [424, 442], [8, 709], [495, 999]]) == 1627', 'assert minimumDistance([[868, 518], [713, 427], [197, 12], [698, 361], [34, 351], [376, 531], [805, 460], [136, 911], [821, 921], [192, 986], [906, 771], [440, 135], [792, 502], [157, 591], [218, 913], [732, 675], [355, 617], [890, 442], [243, 959], [561, 856], [838, 564], [470, 575], [633, 469], [693, 718], [142, 498], [144, 388], [266, 459], [732, 596], [383, 37], [615, 929], [693, 780], [549, 592], [241, 441], [1, 208], [59, 919], [277, 50], [315, 391], [807, 106], [313, 905], [826, 397], [300, 257], [122, 342], [579, 810], [585, 809], [866, 231], [761, 550], [567, 100], [140, 53], [299, 720], [338, 204], [327, 563], [557, 550], [963, 122], [848, 631], [615, 341], [30, 620]]) == 1561', 'assert minimumDistance([[392, 766], [237, 755], [144, 363], [496, 846], [797, 633], [628, 268], [906, 596], [357, 728], [464, 677], [701, 942], [154, 759], [539, 77], [644, 849], [7, 51], [309, 388], [941, 685], [695, 86], [202, 172], [675, 51], [501, 499], [864, 381], [979, 201], [594, 226], [202, 507], [825, 628], [928, 102], [461, 126], [169, 435], [967, 557], [560, 328], [76, 151], [206, 918], [431, 594], [567, 66], [837, 565], [958, 840], [97, 971], [798, 874], [965, 553], [807, 362], [865, 553], [678, 945], [640, 512], [468, 664], [682, 383], [233, 884], [412, 595], [187, 376], [782, 747], [924, 585], [68, 57]]) == 1700', 'assert minimumDistance([[798, 709], [738, 801], [481, 226], [227, 438], [712, 39], [41, 449], [10, 124], [163, 641], [736, 67], [788, 125], [242, 772], [231, 443], [627, 718], [646, 369], [322, 42], [366, 97], [966, 247], [832, 543], [468, 385], [233, 928], [707, 422], [387, 311], [600, 525], [273, 231], [402, 701], [90, 747], [743, 166], [132, 885], [912, 303], [628, 893], [131, 718], [224, 810], [149, 540], [225, 413], [769, 930], [584, 412], [392, 61], [714, 251], [794, 409], [481, 524], [289, 907]]) == 1472', 'assert minimumDistance([[975, 234], [860, 346], [38, 222], [523, 41], [796, 926], [924, 354], [491, 184], [417, 492], [224, 96], [138, 132], [621, 147], [385, 886], [266, 476], [178, 309], [243, 956], [720, 232], [813, 416], [265, 154], [818, 123], [977, 249], [671, 717], [691, 151], [48, 873], [430, 329], [403, 712], [781, 945], [799, 565], [157, 430], [459, 640], [133, 522], [237, 139], [387, 966], [571, 79], [971, 369], [177, 891], [680, 608], [970, 679], [948, 84], [356, 215], [796, 553], [694, 103], [862, 519], [413, 453], [161, 952], [324, 823], [997, 342], [161, 981], [296, 669], [201, 973], [947, 476], [690, 736], [608, 726], [907, 674], [57, 439], [402, 699], [771, 467], [237, 677], [463, 99], [504, 501], [863, 146], [495, 460], [335, 332], [129, 512], [601, 28], [191, 627], [498, 699], [265, 391], [241, 293], [920, 286], [636, 922], [202, 718], [918, 207], [571, 132], [443, 607], [78, 698], [152, 846], [69, 907], [122, 447], [830, 450], [349, 832], [444, 352], [102, 619], [614, 633], [77, 438], [205, 699], [42, 95], [334, 205], [257, 281], [774, 166], [271, 501], [524, 808], [79, 80], [777, 552]]) == 1589', 'assert minimumDistance([[115, 452], [607, 159], [403, 57], [797, 754], [960, 969], [771, 764], [857, 528], [452, 361], [478, 268], [105, 67], [761, 210], [389, 95], [655, 247], [138, 670], [23, 657], [257, 347], [83, 941], [211, 530], [525, 566], [56, 540], [601, 420], [71, 573], [98, 447], [67, 438], [305, 516], [350, 825], [544, 959], [568, 441], [977, 275], [117, 765], [176, 479], [308, 832], [358, 993], [280, 734], [435, 317], [62, 513], [12, 162], [192, 835], [363, 991], [458, 755], [914, 780], [8, 264], [249, 320], [667, 142], [422, 983], [825, 910], [14, 494], [170, 934], [204, 553], [375, 385], [137, 585], [128, 308], [871, 698], [587, 574], [487, 688], [387, 771], [624, 944], [444, 624], [967, 646], [848, 389], [654, 378], [566, 413], [844, 133], [431, 723], [986, 446], [892, 748], [790, 545], [138, 102], [293, 297], [819, 186], [700, 356], [702, 921], [755, 244], [565, 174], [983, 666], [874, 215], [743, 537], [997, 393], [424, 464], [500, 441], [692, 59], [510, 86], [510, 446], [279, 504], [659, 960], [658, 292], [286, 478], [677, 966], [537, 86], [809, 758], [775, 411], [408, 422], [1000, 396], [658, 189], [944, 727], [568, 488], [998, 921], [815, 676], [574, 366]]) == 1747', 'assert minimumDistance([[445, 125], [531, 160], [901, 902], [380, 686], [267, 272], [551, 353], [57, 23], [674, 835], [418, 294], [91, 822], [790, 405], [555, 728], [600, 481], [187, 662], [120, 813], [505, 723], [962, 652], [96, 466], [81, 285], [777, 974], [92, 742], [770, 51], [760, 547], [305, 658], [197, 188], [603, 527], [343, 481], [254, 509], [505, 663], [926, 77], [319, 983], [431, 810], [524, 207], [543, 197], [415, 113], [531, 519], [288, 680], [681, 975], [721, 258], [640, 342], [364, 432], [625, 336], [292, 510], [147, 209], [700, 596], [523, 705], [666, 506], [536, 600], [235, 772], [95, 613], [249, 111], [78, 854], [292, 823], [790, 793], [245, 53], [941, 238], [524, 649], [640, 641], [57, 4], [139, 438], [55, 257], [831, 628], [75, 898], [721, 787], [705, 59], [894, 298], [762, 470], [161, 580], [624, 667], [498, 682], [570, 234], [316, 273], [877, 958], [156, 109], [338, 648], [269, 465], [341, 593], [539, 420], [276, 81], [447, 180], [348, 885], [338, 278], [377, 680], [135, 545], [478, 302], [20, 304], [888, 971], [895, 789], [131, 426], [409, 733], [226, 32], [774, 179]]) == 1774', 'assert minimumDistance([[98466579, 30458042], [15963628, 64669997], [38515901, 45950574], [81740724, 30253019], [28226534, 56043896], [21709072, 89808938], [31515439, 19733012], [98496245, 83999444], [39161096, 4331985], [70702495, 97678191], [25430991, 63914782], [9428478, 66983951], [29627409, 58760727], [7588803, 42478450], [47257105, 78603761], [33263661, 45446604], [59776574, 61412898], [75049279, 21666340], [87005589, 64239202], [88131467, 86230307], [23547063, 87883342], [14372855, 9161057], [18269348, 41563483], [68577327, 37379181], [81034013, 90405680], [17771442, 12908043], [13704785, 25034984], [898697, 84794572], [57606937, 84872503], [40305635, 76819902], [5635535, 1357868], [57474854, 42336722], [10839358, 65621245], [20106803, 91936264], [32993411, 43911309], [5278908, 243953], [22088142, 30669321], [11634558, 21432567], [20486816, 62978088], [84336689, 50018494], [33689300, 80996065], [59349246, 29126365], [97068388, 83846272], [82107160, 75446675], [65896588, 81339520], [62073347, 72505296], [99684788, 33623423], [57181545, 54424925], [95963236, 99339557], [85980405, 29697740], [72575674, 47172156], [90292220, 24868683], [72361732, 28778927], [29857846, 84649511], [38689177, 29217753], [97185386, 71026532], [46928925, 34503324], [14247139, 22403715], [67553861, 93401073], [83181672, 84626182], [49548834, 95618205], [43374985, 47149296], [81216240, 4638478], [62593091, 58348712], [74450074, 7471086], [29068162, 28095068], [17287892, 70476540], [43067733, 34361920], [34922851, 85919410], [26672934, 92087021], [38164806, 79196106], [99015480, 94014019], [93492843, 11226424], [97350452, 95983785], [23685478, 61110469], [79121716, 94678098], [64850357, 51038082], [50700871, 9878400], [53240449, 65710677], [8113240, 2402187], [16194925, 47993566], [28004561, 50320269], [3129289, 7377233], [3407463, 89007718], [44167608, 36425726], [59725527, 71822750], [10568363, 54024660], [14731074, 21365967], [69915520, 50483488], [52922380, 41627726], [17619157, 43035945], [40973928, 14117619], [61470161, 16068465], [12873325, 76630960], [3188963, 16253465], [31644317, 31929081], [9233108, 38992154], [48041177, 72138720], [52263945, 69239379], [9351019, 99489066], [11925007, 44777673], [67649225, 36789599], [10008338, 99866724], [46077726, 95200531], [96911462, 25809927], [55555015, 23243592], [22183057, 85725438], [46165539, 1195051], [7391744, 33693084], [94304436, 67466134], [67891898, 38924838], [64053548, 38426064], [63131238, 28180531], [29834177, 22600526], [97849232, 18912001], [88023845, 52864050], [5203043, 8052342], [34877146, 63890037], [79915049, 41526636], [52863816, 56042810], [25101209, 45328760], [86896265, 92638738], [48027175, 35786261], [61941339, 38394161], [31038902, 50796913], [10498186, 54258463], [7574364, 93325210], [74336656, 60881152], [32190367, 38602308], [2633676, 22954168], [23104622, 48648520], [56221766, 47206894], [87803810, 6543493], [41939875, 2245612], [34652709, 25975379], [29504183, 78901713], [32840886, 62547267], [84346840, 19439056], [55989939, 92983008], [27155762, 44950448], [64762817, 23814657], [42636739, 22105561], [58379401, 72717081], [96914914, 34801084], [26075094, 83430598], [81562626, 74729696], [82726701, 1151769], [10874287, 40223490], [43235640, 20620377], [13720822, 92583792], [95393943, 10934121], [63137209, 44076555], [60966765, 25841209], [83156376, 9597257], [17210929, 58393863], [20484874, 45552029], [16722016, 96100189], [36220569, 8283556], [21372934, 34517744], [19712227, 49122882], [66270217, 75642827], [92277855, 30820428], [26408416, 3350722], [13778310, 52039150], [4637011, 20629127], [47272515, 28761913], [64173425, 65991881], [53714508, 91377362], [50119545, 67600828], [98924073, 20312063], [11795760, 61186258], [71574566, 84683835], [3593041, 56869184], [75423594, 15462946], [66887391, 87504880], [99575023, 69819161], [86603818, 19660643], [7209867, 14266960], [86205627, 53298436], [79949336, 43579526], [33842656, 90664391], [9431795, 4823490], [3650880, 728692], [64766643, 70460975], [59444645, 70492640], [18333775, 11518838], [85658432, 85271769], [44288540, 77804586], [11278487, 20691094], [34959889, 38581367], [52929992, 1705783], [72890135, 11384190], [9188241, 72862425], [20584543, 22631565], [71085672, 44324320], [11674846, 68546236], [30188381, 88402779], [595342, 65242070], [77200533, 11842623], [71237784, 39746228], [54265209, 44447915], [70815839, 50640171], [92675150, 44683381], [6785542, 55407072], [23725146, 53092455], [8402151, 52279367], [96594180, 77396875], [39898646, 15505592], [28897083, 8678802], [52615163, 21895050], [20285516, 45191304], [43950380, 24088183], [50395054, 41357979], [7334095, 43777531], [9191863, 9414280], [73192338, 69498314], [32076168, 72587076], [9502455, 81718697], [44934749, 44401359], [8775006, 22766765], [91204913, 86716947], [18704217, 89049552], [74755070, 82935174], [63465524, 56877560], [47581137, 44067470], [48766056, 30449607], [96484992, 16440609], [30070802, 13082009], [56277106, 82996616], [76909488, 86857218], [88071013, 30956403], [89111446, 74237476], [66648698, 49854308], [61771542, 8584323], [48577182, 84152021], [41033536, 57412512], [83134483, 33029460], [93963573, 81207308], [80356194, 84066867], [21510273, 94478502], [88978189, 7662583], [67721735, 78550343], [48549727, 59890450], [75406432, 84583365], [90525579, 79095935], [14394916, 58712431], [94196381, 18122244], [73957859, 70580171], [12993961, 70738327], [78112365, 60751443], [22857450, 24914297]]) == 188954665', 'assert minimumDistance([[100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000]]) == 0', 'assert minimumDistance([[1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]]) == 0', 'assert minimumDistance([[1, 1], [1, 1], [1, 1], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000], [100000000, 100000000]]) == 199999998', 'assert minimumDistance([[3, 10], [1300, 1056], [10, 2], [4, 4]]) == 15']
correct = 0
for t in tests:
    try:
        exec(t)
        correct+=1
    except:
        pass
success = len(tests) == correct
print(correct,'/',len(tests))
print(success)