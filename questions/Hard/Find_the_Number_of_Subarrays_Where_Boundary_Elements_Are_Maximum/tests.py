from question import numberOfSubarrays
tests = ['assert numberOfSubarrays([1, 4, 3, 3, 2]) == 6', 'assert numberOfSubarrays([3, 3, 3]) == 6', 'assert numberOfSubarrays([1]) == 1', 'assert numberOfSubarrays([6]) == 1', 'assert numberOfSubarrays([7]) == 1', 'assert numberOfSubarrays([9]) == 1', 'assert numberOfSubarrays([1, 2]) == 2', 'assert numberOfSubarrays([1, 11]) == 2', 'assert numberOfSubarrays([2, 3]) == 2', 'assert numberOfSubarrays([2, 5]) == 2', 'assert numberOfSubarrays([2, 7]) == 2', 'assert numberOfSubarrays([2, 13]) == 2', 'assert numberOfSubarrays([2, 16]) == 2', 'assert numberOfSubarrays([2, 17]) == 2', 'assert numberOfSubarrays([3, 11]) == 2', 'assert numberOfSubarrays([3, 14]) == 2', 'assert numberOfSubarrays([4, 5]) == 2', 'assert numberOfSubarrays([4, 7]) == 2', 'assert numberOfSubarrays([4, 13]) == 2', 'assert numberOfSubarrays([4, 19]) == 2', 'assert numberOfSubarrays([4, 20]) == 2', 'assert numberOfSubarrays([5, 11]) == 2', 'assert numberOfSubarrays([5, 14]) == 2', 'assert numberOfSubarrays([5, 17]) == 2', 'assert numberOfSubarrays([6, 2]) == 2', 'assert numberOfSubarrays([6, 10]) == 2', 'assert numberOfSubarrays([6, 14]) == 2', 'assert numberOfSubarrays([6, 18]) == 2', 'assert numberOfSubarrays([6, 19]) == 2', 'assert numberOfSubarrays([7, 2]) == 2', 'assert numberOfSubarrays([7, 5]) == 2', 'assert numberOfSubarrays([7, 8]) == 2', 'assert numberOfSubarrays([7, 17]) == 2', 'assert numberOfSubarrays([7, 19]) == 2', 'assert numberOfSubarrays([7, 20]) == 2', 'assert numberOfSubarrays([8, 1]) == 2', 'assert numberOfSubarrays([8, 3]) == 2', 'assert numberOfSubarrays([8, 9]) == 2', 'assert numberOfSubarrays([8, 10]) == 2', 'assert numberOfSubarrays([8, 18]) == 2', 'assert numberOfSubarrays([9, 4]) == 2', 'assert numberOfSubarrays([9, 5]) == 2', 'assert numberOfSubarrays([9, 7]) == 2', 'assert numberOfSubarrays([9, 13]) == 2', 'assert numberOfSubarrays([9, 17]) == 2', 'assert numberOfSubarrays([10, 5]) == 2', 'assert numberOfSubarrays([10, 6]) == 2', 'assert numberOfSubarrays([10, 7]) == 2', 'assert numberOfSubarrays([10, 8]) == 2', 'assert numberOfSubarrays([10, 11]) == 2', 'assert numberOfSubarrays([10, 17]) == 2', 'assert numberOfSubarrays([11, 1]) == 2', 'assert numberOfSubarrays([11, 7]) == 2', 'assert numberOfSubarrays([11, 9]) == 2', 'assert numberOfSubarrays([11, 12]) == 2', 'assert numberOfSubarrays([11, 18]) == 2', 'assert numberOfSubarrays([11, 19]) == 2', 'assert numberOfSubarrays([11, 20]) == 2', 'assert numberOfSubarrays([12, 2]) == 2', 'assert numberOfSubarrays([12, 3]) == 2', 'assert numberOfSubarrays([12, 5]) == 2', 'assert numberOfSubarrays([12, 6]) == 2', 'assert numberOfSubarrays([12, 7]) == 2', 'assert numberOfSubarrays([12, 9]) == 2', 'assert numberOfSubarrays([12, 17]) == 2', 'assert numberOfSubarrays([13, 3]) == 2', 'assert numberOfSubarrays([13, 12]) == 2', 'assert numberOfSubarrays([13, 16]) == 2', 'assert numberOfSubarrays([13, 19]) == 2', 'assert numberOfSubarrays([13, 20]) == 2', 'assert numberOfSubarrays([14, 3]) == 2', 'assert numberOfSubarrays([14, 9]) == 2', 'assert numberOfSubarrays([14, 15]) == 2', 'assert numberOfSubarrays([14, 20]) == 2', 'assert numberOfSubarrays([15, 1]) == 2', 'assert numberOfSubarrays([15, 19]) == 2', 'assert numberOfSubarrays([16, 13]) == 2', 'assert numberOfSubarrays([16, 19]) == 2', 'assert numberOfSubarrays([17, 4]) == 2', 'assert numberOfSubarrays([17, 8]) == 2', 'assert numberOfSubarrays([17, 10]) == 2', 'assert numberOfSubarrays([17, 14]) == 2', 'assert numberOfSubarrays([17, 20]) == 2', 'assert numberOfSubarrays([18, 2]) == 2', 'assert numberOfSubarrays([18, 4]) == 2', 'assert numberOfSubarrays([18, 5]) == 2', 'assert numberOfSubarrays([18, 16]) == 2', 'assert numberOfSubarrays([19, 4]) == 2', 'assert numberOfSubarrays([19, 8]) == 2', 'assert numberOfSubarrays([19, 10]) == 2', 'assert numberOfSubarrays([19, 13]) == 2', 'assert numberOfSubarrays([19, 14]) == 2', 'assert numberOfSubarrays([19, 17]) == 2', 'assert numberOfSubarrays([20, 6]) == 2', 'assert numberOfSubarrays([20, 17]) == 2', 'assert numberOfSubarrays([20, 20]) == 3', 'assert numberOfSubarrays([1, 9, 21]) == 3', 'assert numberOfSubarrays([2, 33, 16]) == 3', 'assert numberOfSubarrays([3, 2, 18]) == 3', 'assert numberOfSubarrays([3, 3, 38]) == 4', 'assert numberOfSubarrays([3, 8, 14]) == 3', 'assert numberOfSubarrays([3, 9, 20]) == 3', 'assert numberOfSubarrays([3, 19, 29]) == 3', 'assert numberOfSubarrays([3, 30, 39]) == 3', 'assert numberOfSubarrays([4, 12, 15]) == 3', 'assert numberOfSubarrays([4, 18, 8]) == 3', 'assert numberOfSubarrays([4, 19, 32]) == 3', 'assert numberOfSubarrays([4, 20, 21]) == 3', 'assert numberOfSubarrays([4, 26, 6]) == 3', 'assert numberOfSubarrays([4, 33, 2]) == 3', 'assert numberOfSubarrays([4, 39, 37]) == 3', 'assert numberOfSubarrays([5, 12, 40]) == 3', 'assert numberOfSubarrays([5, 20, 33]) == 3', 'assert numberOfSubarrays([6, 26, 6]) == 3', 'assert numberOfSubarrays([7, 1, 40]) == 3', 'assert numberOfSubarrays([7, 32, 7]) == 3', 'assert numberOfSubarrays([7, 32, 27]) == 3', 'assert numberOfSubarrays([8, 8, 36]) == 4', 'assert numberOfSubarrays([8, 25, 15]) == 3', 'assert numberOfSubarrays([8, 31, 34]) == 3', 'assert numberOfSubarrays([9, 23, 28]) == 3', 'assert numberOfSubarrays([9, 36, 7]) == 3', 'assert numberOfSubarrays([9, 40, 40]) == 4', 'assert numberOfSubarrays([10, 16, 29]) == 3', 'assert numberOfSubarrays([10, 20, 23]) == 3', 'assert numberOfSubarrays([10, 27, 1]) == 3', 'assert numberOfSubarrays([11, 24, 33]) == 3', 'assert numberOfSubarrays([11, 31, 24]) == 3', 'assert numberOfSubarrays([11, 40, 18]) == 3', 'assert numberOfSubarrays([12, 14, 10]) == 3', 'assert numberOfSubarrays([12, 16, 32]) == 3', 'assert numberOfSubarrays([12, 23, 38]) == 3', 'assert numberOfSubarrays([12, 28, 21]) == 3', 'assert numberOfSubarrays([13, 29, 23]) == 3', 'assert numberOfSubarrays([13, 33, 36]) == 3', 'assert numberOfSubarrays([13, 34, 37]) == 3', 'assert numberOfSubarrays([14, 7, 32]) == 3', 'assert numberOfSubarrays([14, 10, 33]) == 3', 'assert numberOfSubarrays([14, 40, 20]) == 3', 'assert numberOfSubarrays([15, 15, 20]) == 4', 'assert numberOfSubarrays([15, 27, 3]) == 3', 'assert numberOfSubarrays([15, 39, 25]) == 3', 'assert numberOfSubarrays([16, 3, 14]) == 3', 'assert numberOfSubarrays([16, 26, 9]) == 3', 'assert numberOfSubarrays([17, 8, 39]) == 3', 'assert numberOfSubarrays([17, 12, 34]) == 3', 'assert numberOfSubarrays([17, 15, 15]) == 4', 'assert numberOfSubarrays([17, 18, 26]) == 3', 'assert numberOfSubarrays([17, 34, 24]) == 3', 'assert numberOfSubarrays([17, 36, 38]) == 3', 'assert numberOfSubarrays([18, 10, 39]) == 3', 'assert numberOfSubarrays([18, 12, 34]) == 3', 'assert numberOfSubarrays([18, 20, 30]) == 3', 'assert numberOfSubarrays([18, 20, 36]) == 3', 'assert numberOfSubarrays([19, 22, 28]) == 3', 'assert numberOfSubarrays([19, 26, 9]) == 3', 'assert numberOfSubarrays([19, 30, 33]) == 3', 'assert numberOfSubarrays([19, 40, 25]) == 3', 'assert numberOfSubarrays([20, 29, 12]) == 3', 'assert numberOfSubarrays([21, 13, 18]) == 3', 'assert numberOfSubarrays([21, 21, 11]) == 4', 'assert numberOfSubarrays([21, 35, 35]) == 4', 'assert numberOfSubarrays([22, 7, 10]) == 3', 'assert numberOfSubarrays([22, 9, 11]) == 3', 'assert numberOfSubarrays([23, 2, 4]) == 3', 'assert numberOfSubarrays([23, 14, 13]) == 3', 'assert numberOfSubarrays([23, 32, 14]) == 3', 'assert numberOfSubarrays([23, 37, 15]) == 3', 'assert numberOfSubarrays([24, 3, 28]) == 3', 'assert numberOfSubarrays([24, 10, 35]) == 3', 'assert numberOfSubarrays([25, 10, 23]) == 3', 'assert numberOfSubarrays([25, 17, 20]) == 3', 'assert numberOfSubarrays([25, 28, 37]) == 3', 'assert numberOfSubarrays([25, 32, 30]) == 3', 'assert numberOfSubarrays([25, 34, 8]) == 3', 'assert numberOfSubarrays([26, 27, 16]) == 3', 'assert numberOfSubarrays([26, 36, 4]) == 3', 'assert numberOfSubarrays([27, 23, 23]) == 4', 'assert numberOfSubarrays([28, 2, 32]) == 3', 'assert numberOfSubarrays([28, 14, 10]) == 3', 'assert numberOfSubarrays([28, 14, 33]) == 3', 'assert numberOfSubarrays([29, 5, 12]) == 3', 'assert numberOfSubarrays([29, 38, 40]) == 3', 'assert numberOfSubarrays([30, 14, 24]) == 3', 'assert numberOfSubarrays([30, 15, 30]) == 4', 'assert numberOfSubarrays([30, 19, 5]) == 3', 'assert numberOfSubarrays([30, 21, 19]) == 3', 'assert numberOfSubarrays([30, 31, 17]) == 3', 'assert numberOfSubarrays([31, 24, 10]) == 3', 'assert numberOfSubarrays([31, 24, 14]) == 3', 'assert numberOfSubarrays([31, 31, 12]) == 4', 'assert numberOfSubarrays([31, 34, 22]) == 3', 'assert numberOfSubarrays([32, 13, 37]) == 3', 'assert numberOfSubarrays([32, 20, 13]) == 3', 'assert numberOfSubarrays([33, 1, 18]) == 3', 'assert numberOfSubarrays([33, 14, 33]) == 4', 'assert numberOfSubarrays([33, 15, 3]) == 3', 'assert numberOfSubarrays([33, 15, 6]) == 3', 'assert numberOfSubarrays([33, 24, 34]) == 3', 'assert numberOfSubarrays([33, 38, 13]) == 3', 'assert numberOfSubarrays([34, 5, 34]) == 4', 'assert numberOfSubarrays([34, 9, 6]) == 3', 'assert numberOfSubarrays([35, 3, 20]) == 3', 'assert numberOfSubarrays([35, 3, 23]) == 3', 'assert numberOfSubarrays([35, 4, 6]) == 3', 'assert numberOfSubarrays([35, 11, 26]) == 3', 'assert numberOfSubarrays([35, 28, 12]) == 3', 'assert numberOfSubarrays([35, 35, 37]) == 4', 'assert numberOfSubarrays([36, 22, 2]) == 3', 'assert numberOfSubarrays([36, 22, 27]) == 3', 'assert numberOfSubarrays([37, 5, 12]) == 3', 'assert numberOfSubarrays([38, 5, 5]) == 4', 'assert numberOfSubarrays([39, 5, 2]) == 3', 'assert numberOfSubarrays([39, 13, 8]) == 3', 'assert numberOfSubarrays([39, 15, 20]) == 3', 'assert numberOfSubarrays([39, 18, 10]) == 3', 'assert numberOfSubarrays([39, 33, 2]) == 3', 'assert numberOfSubarrays([39, 36, 34]) == 3', 'assert numberOfSubarrays([39, 38, 5]) == 3', 'assert numberOfSubarrays([40, 9, 17]) == 3', 'assert numberOfSubarrays([40, 38, 28]) == 3', 'assert numberOfSubarrays([1, 11, 41, 2]) == 4', 'assert numberOfSubarrays([1, 14, 15, 6]) == 4', 'assert numberOfSubarrays([2, 6, 24, 8]) == 4', 'assert numberOfSubarrays([2, 12, 27, 37]) == 4', 'assert numberOfSubarrays([2, 41, 21, 33]) == 4', 'assert numberOfSubarrays([3, 1, 39, 48]) == 4', 'assert numberOfSubarrays([3, 22, 2, 11]) == 4', 'assert numberOfSubarrays([3, 43, 12, 37]) == 4', 'assert numberOfSubarrays([3, 43, 38, 45]) == 4', 'assert numberOfSubarrays([5, 26, 48, 50]) == 4', 'assert numberOfSubarrays([7, 38, 12, 28]) == 4', 'assert numberOfSubarrays([7, 47, 48, 7]) == 4', 'assert numberOfSubarrays([8, 16, 28, 38]) == 4', 'assert numberOfSubarrays([9, 8, 4, 49]) == 4', 'assert numberOfSubarrays([9, 8, 45, 34]) == 4', 'assert numberOfSubarrays([9, 32, 43, 43]) == 5', 'assert numberOfSubarrays([10, 23, 29, 14]) == 4', 'assert numberOfSubarrays([10, 28, 26, 25]) == 4', 'assert numberOfSubarrays([12, 36, 22, 38]) == 4', 'assert numberOfSubarrays([12, 42, 44, 4]) == 4', 'assert numberOfSubarrays([14, 11, 15, 48]) == 4', 'assert numberOfSubarrays([14, 34, 27, 44]) == 4', 'assert numberOfSubarrays([15, 9, 11, 32]) == 4', 'assert numberOfSubarrays([15, 47, 24, 46]) == 4', 'assert numberOfSubarrays([16, 24, 26, 38]) == 4', 'assert numberOfSubarrays([16, 30, 18, 38]) == 4', 'assert numberOfSubarrays([17, 30, 8, 4]) == 4', 'assert numberOfSubarrays([19, 17, 13, 4]) == 4', 'assert numberOfSubarrays([21, 39, 14, 1]) == 4', 'assert numberOfSubarrays([22, 15, 1, 17]) == 4', 'assert numberOfSubarrays([23, 2, 26, 36]) == 4', 'assert numberOfSubarrays([23, 13, 11, 27]) == 4', 'assert numberOfSubarrays([24, 29, 45, 22]) == 4', 'assert numberOfSubarrays([26, 4, 36, 42]) == 4', 'assert numberOfSubarrays([26, 42, 2, 19]) == 4', 'assert numberOfSubarrays([28, 35, 23, 50]) == 4', 'assert numberOfSubarrays([28, 46, 21, 12]) == 4', 'assert numberOfSubarrays([28, 46, 37, 38]) == 4', 'assert numberOfSubarrays([28, 47, 4, 13]) == 4', 'assert numberOfSubarrays([29, 35, 1, 46]) == 4', 'assert numberOfSubarrays([29, 42, 34, 1]) == 4', 'assert numberOfSubarrays([30, 32, 31, 31]) == 5', 'assert numberOfSubarrays([30, 45, 3, 2]) == 4', 'assert numberOfSubarrays([31, 8, 5, 49]) == 4', 'assert numberOfSubarrays([31, 13, 30, 34]) == 4', 'assert numberOfSubarrays([32, 17, 35, 22]) == 4', 'assert numberOfSubarrays([32, 22, 50, 16]) == 4', 'assert numberOfSubarrays([33, 8, 46, 43]) == 4', 'assert numberOfSubarrays([33, 25, 9, 39]) == 4', 'assert numberOfSubarrays([33, 30, 46, 24]) == 4', 'assert numberOfSubarrays([33, 41, 42, 13]) == 4', 'assert numberOfSubarrays([34, 15, 45, 14]) == 4', 'assert numberOfSubarrays([34, 29, 10, 19]) == 4', 'assert numberOfSubarrays([34, 30, 6, 29]) == 4', 'assert numberOfSubarrays([34, 31, 32, 17]) == 4', 'assert numberOfSubarrays([36, 2, 33, 30]) == 4', 'assert numberOfSubarrays([36, 36, 32, 37]) == 5', 'assert numberOfSubarrays([37, 36, 29, 33]) == 4', 'assert numberOfSubarrays([38, 4, 6, 50]) == 4', 'assert numberOfSubarrays([38, 11, 3, 10]) == 4', 'assert numberOfSubarrays([38, 35, 26, 37]) == 4', 'assert numberOfSubarrays([38, 47, 44, 2]) == 4', 'assert numberOfSubarrays([40, 11, 33, 47]) == 4', 'assert numberOfSubarrays([40, 17, 5, 47]) == 4', 'assert numberOfSubarrays([40, 17, 35, 24]) == 4', 'assert numberOfSubarrays([43, 7, 47, 3]) == 4', 'assert numberOfSubarrays([44, 17, 26, 29]) == 4', 'assert numberOfSubarrays([44, 25, 46, 43]) == 4', 'assert numberOfSubarrays([44, 27, 2, 31]) == 4', 'assert numberOfSubarrays([44, 42, 6, 35]) == 4', 'assert numberOfSubarrays([45, 45, 45, 19]) == 7', 'assert numberOfSubarrays([47, 28, 40, 14]) == 4', 'assert numberOfSubarrays([48, 47, 28, 41]) == 4', 'assert numberOfSubarrays([50, 21, 38, 1]) == 4', 'assert numberOfSubarrays([50, 49, 36, 8]) == 4', 'assert numberOfSubarrays([1, 13, 25, 16, 50]) == 5', 'assert numberOfSubarrays([1, 18, 27, 39, 38]) == 5', 'assert numberOfSubarrays([1, 38, 1, 28, 75]) == 5', 'assert numberOfSubarrays([2, 67, 25, 65, 83]) == 5', 'assert numberOfSubarrays([3, 53, 77, 21, 63]) == 5', 'assert numberOfSubarrays([3, 57, 69, 74, 34]) == 5', 'assert numberOfSubarrays([4, 23, 23, 33, 90]) == 6', 'assert numberOfSubarrays([4, 34, 69, 52, 13]) == 5', 'assert numberOfSubarrays([6, 34, 31, 75, 1]) == 5', 'assert numberOfSubarrays([6, 76, 43, 56, 9]) == 5', 'assert numberOfSubarrays([6, 77, 70, 58, 57]) == 5', 'assert numberOfSubarrays([8, 46, 47, 1, 74]) == 5', 'assert numberOfSubarrays([8, 89, 52, 53, 23]) == 5', 'assert numberOfSubarrays([9, 35, 35, 68, 25]) == 6', 'assert numberOfSubarrays([11, 5, 7, 54, 55]) == 5', 'assert numberOfSubarrays([11, 57, 27, 14, 57]) == 6', 'assert numberOfSubarrays([13, 19, 30, 14, 18]) == 5', 'assert numberOfSubarrays([16, 26, 75, 40, 16]) == 5', 'assert numberOfSubarrays([16, 40, 33, 74, 42]) == 5', 'assert numberOfSubarrays([17, 38, 68, 66, 58]) == 5', 'assert numberOfSubarrays([17, 42, 16, 87, 5]) == 5', 'assert numberOfSubarrays([18, 53, 2, 13, 39]) == 5', 'assert numberOfSubarrays([19, 9, 18, 9, 6]) == 5', 'assert numberOfSubarrays([19, 26, 60, 60, 34]) == 6', 'assert numberOfSubarrays([19, 36, 1, 11, 36]) == 6', 'assert numberOfSubarrays([19, 76, 4, 33, 71]) == 5', 'assert numberOfSubarrays([20, 25, 52, 55, 43]) == 5', 'assert numberOfSubarrays([20, 38, 72, 80, 70]) == 5', 'assert numberOfSubarrays([20, 71, 83, 15, 54]) == 5', 'assert numberOfSubarrays([21, 38, 60, 80, 82]) == 5', 'assert numberOfSubarrays([21, 81, 2, 40, 16]) == 5', 'assert numberOfSubarrays([22, 85, 75, 50, 22]) == 5', 'assert numberOfSubarrays([24, 65, 71, 11, 62]) == 5', 'assert numberOfSubarrays([27, 19, 20, 37, 54]) == 5', 'assert numberOfSubarrays([28, 10, 22, 41, 44]) == 5', 'assert numberOfSubarrays([28, 17, 13, 45, 83]) == 5', 'assert numberOfSubarrays([28, 42, 37, 73, 21]) == 5', 'assert numberOfSubarrays([28, 44, 75, 47, 10]) == 5', 'assert numberOfSubarrays([28, 57, 33, 14, 18]) == 5', 'assert numberOfSubarrays([29, 30, 15, 81, 45]) == 5', 'assert numberOfSubarrays([29, 56, 25, 20, 82]) == 5', 'assert numberOfSubarrays([29, 69, 12, 57, 21]) == 5', 'assert numberOfSubarrays([29, 87, 64, 56, 85]) == 5', 'assert numberOfSubarrays([31, 36, 21, 25, 61]) == 5', 'assert numberOfSubarrays([31, 39, 48, 4, 60]) == 5', 'assert numberOfSubarrays([32, 41, 54, 48, 5]) == 5', 'assert numberOfSubarrays([32, 43, 66, 22, 32]) == 5', 'assert numberOfSubarrays([33, 20, 51, 64, 32]) == 5', 'assert numberOfSubarrays([35, 39, 78, 42, 1]) == 5', 'assert numberOfSubarrays([35, 56, 78, 57, 12]) == 5', 'assert numberOfSubarrays([35, 59, 78, 40, 23]) == 5', 'assert numberOfSubarrays([38, 83, 25, 61, 25]) == 5', 'assert numberOfSubarrays([41, 41, 49, 80, 89]) == 6', 'assert numberOfSubarrays([41, 67, 21, 84, 30]) == 5', 'assert numberOfSubarrays([43, 24, 35, 2, 46]) == 5', 'assert numberOfSubarrays([43, 86, 50, 16, 84]) == 5', 'assert numberOfSubarrays([45, 29, 2, 23, 65]) == 5', 'assert numberOfSubarrays([45, 63, 87, 87, 70]) == 6', 'assert numberOfSubarrays([48, 2, 86, 1, 46]) == 5', 'assert numberOfSubarrays([48, 53, 35, 37, 47]) == 5', 'assert numberOfSubarrays([48, 53, 50, 47, 3]) == 5', 'assert numberOfSubarrays([48, 84, 73, 78, 58]) == 5', 'assert numberOfSubarrays([48, 85, 9, 86, 54]) == 5', 'assert numberOfSubarrays([51, 4, 67, 18, 90]) == 5', 'assert numberOfSubarrays([51, 12, 63, 5, 28]) == 5', 'assert numberOfSubarrays([51, 20, 22, 61, 66]) == 5', 'assert numberOfSubarrays([51, 30, 37, 79, 75]) == 5', 'assert numberOfSubarrays([51, 38, 42, 9, 55]) == 5', 'assert numberOfSubarrays([51, 40, 3, 59, 39]) == 5', 'assert numberOfSubarrays([51, 68, 72, 66, 83]) == 5', 'assert numberOfSubarrays([52, 60, 12, 34, 48]) == 5', 'assert numberOfSubarrays([53, 41, 15, 15, 21]) == 6', 'assert numberOfSubarrays([54, 38, 69, 74, 21]) == 5', 'assert numberOfSubarrays([54, 49, 27, 1, 50]) == 5', 'assert numberOfSubarrays([56, 15, 65, 19, 37]) == 5', 'assert numberOfSubarrays([56, 74, 86, 52, 75]) == 5', 'assert numberOfSubarrays([59, 24, 86, 37, 5]) == 5', 'assert numberOfSubarrays([60, 67, 71, 81, 5]) == 5', 'assert numberOfSubarrays([62, 17, 84, 46, 62]) == 5', 'assert numberOfSubarrays([63, 5, 66, 18, 86]) == 5', 'assert numberOfSubarrays([63, 70, 64, 71, 48]) == 5', 'assert numberOfSubarrays([64, 82, 7, 68, 45]) == 5', 'assert numberOfSubarrays([65, 1, 25, 13, 64]) == 5', 'assert numberOfSubarrays([65, 10, 36, 76, 36]) == 5', 'assert numberOfSubarrays([65, 85, 8, 13, 53]) == 5', 'assert numberOfSubarrays([67, 30, 23, 32, 10]) == 5', 'assert numberOfSubarrays([67, 61, 39, 69, 38]) == 5', 'assert numberOfSubarrays([67, 75, 22, 18, 41]) == 5', 'assert numberOfSubarrays([67, 90, 58, 85, 71]) == 5', 'assert numberOfSubarrays([68, 3, 28, 84, 31]) == 5', 'assert numberOfSubarrays([68, 48, 75, 13, 38]) == 5', 'assert numberOfSubarrays([68, 60, 76, 85, 4]) == 5', 'assert numberOfSubarrays([69, 7, 8, 30, 61]) == 5', 'assert numberOfSubarrays([72, 10, 75, 35, 45]) == 5', 'assert numberOfSubarrays([72, 43, 18, 26, 27]) == 5', 'assert numberOfSubarrays([72, 49, 47, 30, 34]) == 5', 'assert numberOfSubarrays([73, 17, 1, 33, 31]) == 5', 'assert numberOfSubarrays([73, 22, 3, 70, 10]) == 5', 'assert numberOfSubarrays([73, 38, 67, 10, 84]) == 5', 'assert numberOfSubarrays([74, 89, 3, 90, 27]) == 5', 'assert numberOfSubarrays([75, 15, 35, 16, 61]) == 5', 'assert numberOfSubarrays([77, 31, 26, 19, 6]) == 5', 'assert numberOfSubarrays([77, 34, 59, 18, 62]) == 5', 'assert numberOfSubarrays([77, 34, 74, 46, 45]) == 5', 'assert numberOfSubarrays([77, 70, 25, 47, 11]) == 5', 'assert numberOfSubarrays([78, 29, 50, 21, 3]) == 5', 'assert numberOfSubarrays([79, 54, 47, 11, 33]) == 5', 'assert numberOfSubarrays([81, 11, 73, 51, 41]) == 5', 'assert numberOfSubarrays([82, 16, 5, 45, 55]) == 5', 'assert numberOfSubarrays([82, 85, 3, 56, 55]) == 5', 'assert numberOfSubarrays([84, 13, 60, 3, 56]) == 5', 'assert numberOfSubarrays([84, 26, 15, 19, 68]) == 5', 'assert numberOfSubarrays([84, 38, 53, 2, 19]) == 5', 'assert numberOfSubarrays([84, 64, 31, 6, 84]) == 6', 'assert numberOfSubarrays([84, 71, 50, 80, 33]) == 5', 'assert numberOfSubarrays([85, 86, 77, 56, 6]) == 5', 'assert numberOfSubarrays([86, 55, 29, 44, 42]) == 5', 'assert numberOfSubarrays([88, 60, 9, 60, 85]) == 6', 'assert numberOfSubarrays([88, 77, 63, 29, 45]) == 5', 'assert numberOfSubarrays([88, 80, 78, 71, 72]) == 5', 'assert numberOfSubarrays([89, 1, 49, 85, 38]) == 5', 'assert numberOfSubarrays([89, 30, 25, 48, 34]) == 5', 'assert numberOfSubarrays([89, 34, 29, 28, 79]) == 5', 'assert numberOfSubarrays([89, 80, 35, 62, 14]) == 5', 'assert numberOfSubarrays([90, 35, 8, 61, 76]) == 5', 'assert numberOfSubarrays([145, 145, 147, 148, 145, 149, 147, 147, 145, 147]) == 14', 'assert numberOfSubarrays([145, 145, 149, 148, 146, 148, 146, 148, 147, 145]) == 14', 'assert numberOfSubarrays([145, 145, 149, 149, 148, 150, 145, 148, 146, 149]) == 12', 'assert numberOfSubarrays([145, 146, 147, 147, 149, 149, 147, 150, 150, 150]) == 15', 'assert numberOfSubarrays([145, 147, 147, 147, 149, 147, 150, 149, 148, 149]) == 14', 'assert numberOfSubarrays([145, 147, 147, 149, 149, 149, 148, 150, 146, 149]) == 14', 'assert numberOfSubarrays([145, 147, 150, 146, 149, 149, 145, 148, 146, 148]) == 12', 'assert numberOfSubarrays([145, 148, 145, 146, 146, 145, 150, 145, 149, 150]) == 12', 'assert numberOfSubarrays([145, 148, 145, 150, 145, 147, 148, 148, 148, 150]) == 14', 'assert numberOfSubarrays([145, 148, 150, 146, 148, 149, 147, 146, 148, 147]) == 10', 'assert numberOfSubarrays([145, 150, 146, 149, 145, 145, 147, 150, 147, 145]) == 12', 'assert numberOfSubarrays([145, 150, 147, 145, 149, 148, 146, 150, 147, 146]) == 11', 'assert numberOfSubarrays([145, 150, 150, 145, 150, 149, 146, 149, 146, 150]) == 17', 'assert numberOfSubarrays([146, 145, 146, 145, 145, 147, 146, 148, 148, 149]) == 13', 'assert numberOfSubarrays([146, 146, 146, 149, 146, 148, 148, 150, 145, 148]) == 14', 'assert numberOfSubarrays([146, 146, 149, 148, 145, 148, 148, 147, 146, 147]) == 15', 'assert numberOfSubarrays([146, 146, 150, 146, 150, 145, 149, 145, 148, 149]) == 13', 'assert numberOfSubarrays([146, 147, 146, 146, 150, 150, 145, 150, 148, 146]) == 14', 'assert numberOfSubarrays([146, 147, 148, 145, 146, 150, 148, 150, 146, 149]) == 11', 'assert numberOfSubarrays([146, 148, 145, 145, 147, 149, 148, 149, 148, 145]) == 12', 'assert numberOfSubarrays([146, 148, 147, 146, 146, 147, 148, 146, 149, 146]) == 13', 'assert numberOfSubarrays([146, 148, 147, 148, 150, 150, 150, 150, 145, 148]) == 17', 'assert numberOfSubarrays([146, 148, 148, 148, 147, 149, 147, 149, 150, 150]) == 15', 'assert numberOfSubarrays([146, 148, 148, 149, 149, 150, 146, 150, 149, 150]) == 15', 'assert numberOfSubarrays([146, 148, 149, 145, 150, 146, 145, 149, 150, 148]) == 11', 'assert numberOfSubarrays([146, 148, 150, 148, 147, 148, 145, 150, 149, 147]) == 12', 'assert numberOfSubarrays([146, 149, 145, 146, 145, 150, 148, 146, 149, 148]) == 10', 'assert numberOfSubarrays([146, 149, 145, 150, 145, 149, 146, 147, 146, 147]) == 11', 'assert numberOfSubarrays([146, 149, 147, 146, 149, 149, 150, 146, 148, 149]) == 13', 'assert numberOfSubarrays([146, 149, 147, 149, 150, 147, 149, 150, 149, 148]) == 12', 'assert numberOfSubarrays([146, 149, 149, 149, 145, 147, 150, 148, 145, 145]) == 14', 'assert numberOfSubarrays([146, 150, 145, 146, 147, 148, 145, 147, 145, 149]) == 10', 'assert numberOfSubarrays([146, 150, 146, 145, 149, 149, 146, 149, 150, 150]) == 16', 'assert numberOfSubarrays([146, 150, 146, 147, 146, 146, 148, 147, 149, 148]) == 11', 'assert numberOfSubarrays([146, 150, 148, 146, 149, 147, 150, 150, 145, 146]) == 13', 'assert numberOfSubarrays([146, 150, 148, 147, 146, 147, 150, 149, 148, 148]) == 13', 'assert numberOfSubarrays([146, 150, 149, 149, 149, 148, 150, 150, 147, 148]) == 16', 'assert numberOfSubarrays([147, 146, 145, 145, 150, 149, 146, 147, 150, 146]) == 12', 'assert numberOfSubarrays([147, 146, 145, 150, 147, 149, 145, 150, 147, 148]) == 11', 'assert numberOfSubarrays([147, 147, 146, 147, 146, 146, 148, 149, 149, 147]) == 15', 'assert numberOfSubarrays([147, 147, 150, 149, 148, 148, 148, 145, 148, 149]) == 18', 'assert numberOfSubarrays([147, 148, 145, 147, 148, 147, 148, 149, 148, 145]) == 13', 'assert numberOfSubarrays([147, 148, 145, 149, 148, 150, 146, 145, 150, 147]) == 11', 'assert numberOfSubarrays([147, 148, 145, 149, 149, 147, 148, 145, 146, 149]) == 13', 'assert numberOfSubarrays([147, 150, 148, 147, 146, 148, 147, 145, 146, 145]) == 11', 'assert numberOfSubarrays([148, 145, 145, 148, 148, 150, 146, 146, 145, 149]) == 15', 'assert numberOfSubarrays([148, 145, 150, 147, 147, 146, 147, 150, 148, 146]) == 14', 'assert numberOfSubarrays([148, 146, 147, 149, 148, 149, 150, 149, 146, 150]) == 12', 'assert numberOfSubarrays([148, 146, 150, 150, 147, 149, 148, 148, 149, 145]) == 13', 'assert numberOfSubarrays([148, 146, 150, 150, 149, 149, 150, 149, 148, 150]) == 17', 'assert numberOfSubarrays([148, 147, 148, 150, 149, 146, 147, 147, 148, 148]) == 13', 'assert numberOfSubarrays([148, 148, 145, 145, 150, 146, 148, 145, 150, 149]) == 13', 'assert numberOfSubarrays([148, 148, 146, 145, 150, 148, 148, 147, 148, 149]) == 14', 'assert numberOfSubarrays([148, 148, 146, 150, 146, 150, 149, 145, 150, 145]) == 14', 'assert numberOfSubarrays([148, 148, 149, 145, 148, 145, 148, 150, 145, 148]) == 12', 'assert numberOfSubarrays([148, 148, 150, 145, 146, 150, 150, 149, 146, 148]) == 14', 'assert numberOfSubarrays([148, 149, 146, 148, 149, 147, 147, 150, 147, 147]) == 13', 'assert numberOfSubarrays([148, 149, 146, 149, 150, 149, 149, 149, 148, 150]) == 15', 'assert numberOfSubarrays([148, 149, 150, 150, 145, 145, 150, 146, 149, 150]) == 17', 'assert numberOfSubarrays([148, 150, 145, 147, 145, 147, 148, 145, 145, 149]) == 12', 'assert numberOfSubarrays([148, 150, 147, 148, 148, 148, 145, 150, 149, 146]) == 14', 'assert numberOfSubarrays([148, 150, 149, 147, 147, 148, 148, 150, 148, 149]) == 13', 'assert numberOfSubarrays([149, 145, 146, 150, 145, 147, 148, 147, 149, 145]) == 10', 'assert numberOfSubarrays([149, 145, 147, 146, 145, 149, 145, 148, 150, 147]) == 11', 'assert numberOfSubarrays([149, 145, 149, 145, 149, 146, 148, 150, 145, 147]) == 13', 'assert numberOfSubarrays([149, 146, 147, 149, 147, 150, 147, 146, 145, 145]) == 12', 'assert numberOfSubarrays([149, 146, 149, 150, 146, 150, 146, 148, 145, 147]) == 12', 'assert numberOfSubarrays([149, 147, 146, 147, 146, 145, 150, 148, 145, 146]) == 11', 'assert numberOfSubarrays([149, 147, 147, 145, 149, 145, 148, 146, 145, 145]) == 13', 'assert numberOfSubarrays([149, 147, 147, 148, 145, 145, 145, 145, 145, 147]) == 21', 'assert numberOfSubarrays([149, 147, 147, 148, 148, 147, 147, 145, 145, 146]) == 14', 'assert numberOfSubarrays([149, 147, 147, 150, 147, 147, 150, 148, 147, 145]) == 13', 'assert numberOfSubarrays([149, 147, 149, 147, 147, 147, 145, 146, 147, 147]) == 21', 'assert numberOfSubarrays([149, 148, 147, 146, 150, 150, 146, 146, 147, 149]) == 12', 'assert numberOfSubarrays([149, 148, 149, 148, 148, 148, 148, 148, 145, 147]) == 21', 'assert numberOfSubarrays([149, 149, 149, 147, 148, 150, 146, 149, 150, 148]) == 14', 'assert numberOfSubarrays([149, 149, 150, 147, 150, 145, 148, 148, 150, 150]) == 18', 'assert numberOfSubarrays([149, 150, 147, 150, 145, 147, 150, 150, 150, 148]) == 20', 'assert numberOfSubarrays([149, 150, 148, 150, 147, 149, 148, 146, 147, 146]) == 11', 'assert numberOfSubarrays([150, 145, 145, 149, 148, 149, 146, 149, 149, 149]) == 21', 'assert numberOfSubarrays([150, 145, 148, 148, 149, 150, 145, 150, 150, 150]) == 21', 'assert numberOfSubarrays([150, 145, 148, 149, 145, 145, 150, 146, 150, 146]) == 14', 'assert numberOfSubarrays([150, 145, 149, 145, 149, 149, 146, 150, 150, 150]) == 19', 'assert numberOfSubarrays([150, 145, 150, 145, 149, 145, 149, 145, 147, 149]) == 14', 'assert numberOfSubarrays([150, 145, 150, 146, 147, 146, 145, 150, 150, 148]) == 16', 'assert numberOfSubarrays([150, 145, 150, 148, 147, 146, 149, 148, 150, 150]) == 16', 'assert numberOfSubarrays([150, 146, 145, 150, 145, 149, 150, 147, 146, 146]) == 14', 'assert numberOfSubarrays([150, 146, 146, 149, 145, 150, 146, 147, 149, 145]) == 12', 'assert numberOfSubarrays([150, 146, 147, 149, 150, 148, 148, 145, 146, 149]) == 12', 'assert numberOfSubarrays([150, 146, 149, 146, 147, 149, 150, 150, 145, 145]) == 15', 'assert numberOfSubarrays([150, 147, 147, 147, 147, 149, 145, 146, 149, 146]) == 17', 'assert numberOfSubarrays([150, 147, 147, 149, 145, 149, 150, 147, 148, 148]) == 14', 'assert numberOfSubarrays([150, 147, 147, 149, 146, 148, 148, 147, 147, 145]) == 13', 'assert numberOfSubarrays([150, 147, 149, 147, 149, 146, 150, 145, 150, 146]) == 14', 'assert numberOfSubarrays([150, 148, 146, 150, 146, 149, 150, 150, 149, 147]) == 16', 'assert numberOfSubarrays([150, 148, 150, 148, 148, 150, 147, 148, 147, 146]) == 14', 'assert numberOfSubarrays([150, 149, 148, 147, 149, 148, 145, 145, 150, 147]) == 13', 'assert numberOfSubarrays([150, 150, 146, 148, 146, 148, 148, 147, 149, 146]) == 14', 'assert numberOfSubarrays([150, 150, 149, 145, 150, 145, 147, 145, 150, 146]) == 16', 'assert numberOfSubarrays([150, 150, 150, 150, 149, 148, 147, 149, 150, 146]) == 21', 'assert numberOfSubarrays([245, 245, 245, 246, 249, 245, 248, 250, 250, 248, 245, 250, 248, 246, 250, 250, 248, 248, 247, 245]) == 34', 'assert numberOfSubarrays([245, 245, 246, 248, 246, 248, 247, 246, 247, 246, 249, 248, 246, 248, 247, 249, 249, 248, 246, 249]) == 30', 'assert numberOfSubarrays([245, 245, 248, 249, 249, 248, 250, 246, 249, 247, 248, 250, 247, 246, 249, 247, 247, 248, 249, 249]) == 27', 'assert numberOfSubarrays([245, 246, 246, 246, 247, 246, 249, 247, 248, 246, 250, 248, 249, 249, 249, 248, 246, 246, 248, 247]) == 28', 'assert numberOfSubarrays([245, 246, 246, 247, 246, 246, 245, 245, 246, 248, 246, 248, 245, 247, 246, 249, 247, 248, 249, 247]) == 27', 'assert numberOfSubarrays([245, 246, 246, 247, 248, 247, 249, 250, 246, 248, 247, 249, 247, 245, 245, 247, 245, 245, 250, 246]) == 25', 'assert numberOfSubarrays([245, 247, 246, 245, 249, 246, 245, 250, 245, 245, 246, 249, 247, 250, 247, 248, 250, 248, 248, 249]) == 25', 'assert numberOfSubarrays([245, 247, 246, 250, 250, 245, 245, 247, 247, 250, 250, 247, 245, 250, 247, 248, 249, 248, 249, 249]) == 35', 'assert numberOfSubarrays([245, 247, 248, 249, 246, 248, 245, 249, 250, 248, 245, 248, 250, 245, 248, 250, 248, 248, 245, 246]) == 26', 'assert numberOfSubarrays([245, 247, 249, 247, 250, 249, 247, 248, 245, 245, 247, 248, 249, 247, 246, 247, 248, 246, 247, 249]) == 26', 'assert numberOfSubarrays([245, 248, 245, 249, 246, 248, 249, 245, 246, 246, 247, 249, 249, 250, 245, 245, 249, 249, 250, 247]) == 30', 'assert numberOfSubarrays([245, 248, 247, 250, 248, 245, 250, 249, 246, 245, 246, 248, 249, 246, 247, 247, 248, 250, 247, 250]) == 29', 'assert numberOfSubarrays([245, 248, 249, 245, 248, 246, 245, 248, 246, 250, 247, 247, 245, 247, 249, 249, 247, 245, 249, 247]) == 27', 'assert numberOfSubarrays([245, 248, 249, 246, 248, 245, 245, 248, 246, 245, 246, 247, 246, 246, 247, 250, 245, 246, 250, 247]) == 26', 'assert numberOfSubarrays([245, 248, 249, 250, 250, 246, 245, 246, 247, 247, 246, 250, 248, 249, 247, 249, 245, 245, 249, 249]) == 32', 'assert numberOfSubarrays([245, 249, 245, 250, 246, 249, 246, 247, 249, 250, 247, 249, 250, 250, 245, 247, 249, 245, 245, 245]) == 30', 'assert numberOfSubarrays([245, 249, 250, 248, 246, 250, 247, 245, 248, 246, 249, 246, 246, 248, 247, 249, 249, 248, 246, 246]) == 26', 'assert numberOfSubarrays([245, 250, 249, 246, 245, 245, 246, 248, 247, 247, 249, 247, 246, 248, 247, 248, 250, 248, 249, 248]) == 26', 'assert numberOfSubarrays([246, 245, 245, 247, 249, 248, 247, 246, 245, 250, 248, 250, 245, 249, 248, 250, 245, 247, 245, 249]) == 24', 'assert numberOfSubarrays([246, 245, 246, 247, 250, 246, 246, 246, 248, 247, 246, 250, 249, 245, 245, 245, 250, 246, 249, 247]) == 30', 'assert numberOfSubarrays([246, 245, 250, 247, 245, 245, 245, 249, 247, 249, 245, 250, 250, 250, 250, 245, 247, 248, 245, 245]) == 35', 'assert numberOfSubarrays([246, 246, 247, 247, 247, 249, 249, 245, 250, 249, 245, 247, 245, 250, 245, 245, 245, 246, 250, 247]) == 31', 'assert numberOfSubarrays([246, 246, 248, 246, 247, 246, 249, 250, 247, 247, 249, 250, 248, 248, 250, 250, 246, 248, 246, 249]) == 29', 'assert numberOfSubarrays([246, 246, 250, 247, 248, 250, 245, 249, 245, 247, 250, 247, 248, 249, 250, 246, 250, 245, 250, 245]) == 36', 'assert numberOfSubarrays([246, 247, 247, 249, 247, 247, 248, 245, 246, 250, 246, 249, 246, 245, 246, 245, 245, 247, 247, 250]) == 26', 'assert numberOfSubarrays([246, 247, 248, 249, 247, 250, 250, 248, 246, 246, 250, 248, 249, 247, 245, 250, 247, 245, 248, 245]) == 27', 'assert numberOfSubarrays([246, 247, 248, 249, 249, 247, 246, 250, 250, 246, 245, 249, 248, 250, 248, 250, 249, 248, 249, 245]) == 28', 'assert numberOfSubarrays([246, 248, 245, 247, 245, 245, 247, 248, 250, 247, 245, 248, 250, 250, 247, 249, 248, 245, 245, 250]) == 30', 'assert numberOfSubarrays([246, 248, 245, 248, 250, 246, 245, 246, 247, 249, 246, 249, 245, 247, 249, 248, 247, 247, 246, 247]) == 28', 'assert numberOfSubarrays([246, 248, 246, 249, 245, 245, 249, 248, 250, 250, 246, 249, 249, 246, 249, 245, 246, 247, 248, 246]) == 26', 'assert numberOfSubarrays([246, 248, 248, 246, 246, 245, 248, 248, 245, 249, 250, 245, 245, 249, 246, 249, 250, 248, 245, 248]) == 31', 'assert numberOfSubarrays([246, 249, 246, 249, 247, 245, 248, 250, 246, 245, 246, 248, 245, 250, 246, 248, 250, 248, 245, 245]) == 26', 'assert numberOfSubarrays([246, 249, 248, 248, 245, 245, 247, 250, 248, 249, 249, 250, 248, 248, 246, 246, 247, 246, 247, 245]) == 27', 'assert numberOfSubarrays([246, 250, 245, 249, 245, 248, 249, 250, 248, 246, 249, 246, 246, 245, 249, 247, 250, 245, 248, 247]) == 26', 'assert numberOfSubarrays([246, 250, 246, 245, 248, 248, 245, 245, 246, 245, 249, 250, 247, 247, 245, 246, 247, 247, 245, 245]) == 30', 'assert numberOfSubarrays([246, 250, 246, 250, 245, 245, 249, 248, 246, 245, 246, 245, 248, 250, 246, 250, 247, 250, 250, 249]) == 38', 'assert numberOfSubarrays([246, 250, 247, 248, 248, 250, 245, 250, 250, 245, 250, 248, 246, 245, 247, 247, 250, 247, 247, 247]) == 40', 'assert numberOfSubarrays([246, 250, 250, 245, 248, 250, 247, 249, 246, 246, 247, 245, 249, 246, 250, 248, 245, 247, 245, 247]) == 29', 'assert numberOfSubarrays([246, 250, 250, 247, 248, 249, 245, 250, 245, 245, 246, 248, 246, 249, 250, 246, 245, 247, 250, 248]) == 31', 'assert numberOfSubarrays([247, 245, 245, 247, 246, 246, 247, 245, 249, 246, 245, 248, 247, 249, 250, 247, 250, 245, 247, 250]) == 29', 'assert numberOfSubarrays([247, 245, 247, 249, 245, 246, 249, 245, 247, 245, 247, 249, 245, 247, 248, 249, 248, 249, 250, 246]) == 32', 'assert numberOfSubarrays([247, 245, 247, 249, 249, 247, 247, 249, 247, 246, 248, 248, 247, 245, 249, 246, 250, 246, 248, 249]) == 29', 'assert numberOfSubarrays([247, 246, 247, 248, 249, 249, 246, 247, 246, 247, 250, 246, 250, 250, 247, 248, 249, 250, 248, 250]) == 33', 'assert numberOfSubarrays([247, 246, 248, 245, 246, 249, 247, 247, 249, 245, 246, 249, 246, 245, 249, 247, 247, 246, 249, 248]) == 32', 'assert numberOfSubarrays([247, 246, 248, 246, 250, 245, 249, 250, 249, 249, 250, 248, 250, 247, 250, 249, 249, 247, 245, 246]) == 32', 'assert numberOfSubarrays([247, 247, 246, 249, 249, 249, 245, 249, 249, 248, 250, 249, 249, 245, 248, 248, 245, 250, 245, 250]) == 36', 'assert numberOfSubarrays([247, 247, 247, 248, 247, 246, 248, 246, 245, 246, 248, 245, 245, 247, 247, 247, 245, 250, 250, 247]) == 32', 'assert numberOfSubarrays([247, 248, 248, 248, 246, 246, 245, 245, 248, 249, 248, 245, 245, 250, 249, 248, 249, 248, 247, 245]) == 30', 'assert numberOfSubarrays([247, 248, 249, 245, 248, 246, 246, 246, 246, 248, 248, 250, 248, 248, 250, 249, 245, 247, 246, 249]) == 32', 'assert numberOfSubarrays([247, 249, 245, 249, 248, 249, 250, 249, 249, 247, 247, 247, 248, 246, 250, 246, 250, 249, 246, 249]) == 31', 'assert numberOfSubarrays([247, 249, 247, 249, 250, 248, 249, 245, 250, 247, 247, 250, 248, 245, 245, 247, 245, 245, 245, 246]) == 29', 'assert numberOfSubarrays([247, 249, 250, 247, 249, 250, 250, 250, 250, 248, 246, 245, 249, 249, 246, 247, 245, 245, 247, 248]) == 33', 'assert numberOfSubarrays([247, 250, 245, 245, 245, 248, 250, 246, 249, 250, 250, 245, 246, 250, 248, 249, 250, 246, 245, 245]) == 39', 'assert numberOfSubarrays([247, 250, 249, 248, 249, 245, 247, 250, 249, 247, 248, 245, 248, 248, 245, 247, 246, 249, 247, 246]) == 26', 'assert numberOfSubarrays([247, 250, 250, 247, 246, 248, 248, 248, 248, 250, 250, 250, 247, 248, 250, 247, 248, 249, 249, 250]) == 48', 'assert numberOfSubarrays([248, 245, 250, 248, 250, 245, 249, 248, 250, 247, 245, 248, 249, 249, 249, 248, 247, 249, 248, 249]) == 33', 'assert numberOfSubarrays([248, 246, 245, 247, 245, 246, 248, 247, 246, 250, 246, 248, 247, 249, 248, 248, 248, 246, 245, 248]) == 27', 'assert numberOfSubarrays([248, 246, 245, 248, 250, 246, 246, 246, 249, 247, 249, 248, 247, 247, 249, 250, 247, 248, 248, 247]) == 30', 'assert numberOfSubarrays([248, 246, 247, 247, 245, 247, 249, 246, 246, 248, 246, 250, 250, 250, 246, 246, 247, 250, 246, 247]) == 31', 'assert numberOfSubarrays([248, 246, 249, 248, 246, 250, 250, 246, 249, 246, 250, 247, 245, 245, 247, 246, 249, 250, 250, 245]) == 32', 'assert numberOfSubarrays([248, 247, 245, 247, 249, 245, 245, 249, 249, 248, 248, 245, 248, 248, 245, 246, 248, 250, 249, 250]) == 36', 'assert numberOfSubarrays([248, 247, 246, 246, 250, 250, 245, 248, 247, 248, 248, 248, 249, 247, 249, 247, 246, 247, 250, 245]) == 32', 'assert numberOfSubarrays([248, 247, 246, 249, 249, 245, 250, 246, 246, 249, 247, 247, 250, 247, 245, 246, 245, 250, 248, 249]) == 26', 'assert numberOfSubarrays([248, 247, 248, 250, 246, 245, 247, 250, 246, 248, 245, 249, 249, 247, 248, 250, 246, 249, 248, 247]) == 25', 'assert numberOfSubarrays([248, 248, 245, 249, 247, 249, 245, 249, 249, 246, 249, 246, 250, 245, 250, 246, 245, 248, 248, 245]) == 33', 'assert numberOfSubarrays([248, 248, 245, 250, 250, 245, 248, 246, 245, 250, 249, 249, 246, 247, 247, 247, 249, 250, 250, 247]) == 37', 'assert numberOfSubarrays([248, 248, 248, 246, 246, 246, 245, 249, 246, 248, 249, 249, 245, 246, 250, 248, 247, 248, 245, 247]) == 30', 'assert numberOfSubarrays([248, 248, 249, 245, 245, 248, 248, 248, 248, 247, 248, 247, 246, 248, 247, 245, 245, 248, 248, 247]) == 51', 'assert numberOfSubarrays([248, 248, 249, 250, 249, 247, 250, 246, 245, 245, 247, 249, 246, 248, 248, 246, 246, 247, 246, 245]) == 25', 'assert numberOfSubarrays([248, 248, 250, 249, 247, 247, 245, 246, 248, 248, 249, 250, 249, 247, 246, 250, 247, 249, 246, 246]) == 28', 'assert numberOfSubarrays([248, 249, 246, 245, 249, 245, 247, 246, 245, 247, 250, 246, 246, 247, 248, 246, 249, 250, 250, 246]) == 26', 'assert numberOfSubarrays([248, 249, 247, 250, 246, 245, 249, 246, 246, 250, 246, 248, 245, 247, 248, 247, 247, 245, 246, 246]) == 25', 'assert numberOfSubarrays([248, 249, 248, 245, 248, 250, 246, 249, 249, 245, 250, 248, 246, 247, 249, 250, 249, 246, 245, 246]) == 26', 'assert numberOfSubarrays([248, 250, 245, 250, 250, 248, 248, 246, 248, 250, 250, 247, 249, 245, 246, 246, 249, 247, 248, 246]) == 35', 'assert numberOfSubarrays([248, 250, 246, 245, 247, 250, 248, 247, 247, 246, 250, 246, 246, 247, 250, 246, 245, 249, 245, 245]) == 29', 'assert numberOfSubarrays([249, 245, 246, 250, 247, 246, 249, 248, 249, 246, 248, 245, 246, 250, 246, 246, 249, 249, 245, 250]) == 26', 'assert numberOfSubarrays([249, 245, 250, 245, 245, 248, 245, 249, 249, 249, 247, 247, 246, 247, 248, 248, 250, 248, 246, 246]) == 30', 'assert numberOfSubarrays([249, 246, 246, 245, 248, 250, 245, 250, 247, 246, 245, 246, 246, 247, 246, 245, 249, 250, 246, 248]) == 28', 'assert numberOfSubarrays([249, 246, 246, 249, 246, 248, 249, 246, 247, 250, 248, 250, 247, 246, 249, 249, 246, 248, 249, 246]) == 28', 'assert numberOfSubarrays([249, 247, 245, 249, 246, 248, 246, 246, 245, 250, 250, 250, 248, 246, 245, 249, 248, 250, 247, 250]) == 32', 'assert numberOfSubarrays([249, 247, 249, 249, 250, 247, 249, 250, 248, 248, 249, 247, 248, 247, 250, 249, 245, 247, 248, 245]) == 27', 'assert numberOfSubarrays([249, 248, 245, 246, 247, 246, 245, 246, 250, 248, 247, 246, 247, 245, 248, 249, 248, 248, 245, 246]) == 24', 'assert numberOfSubarrays([249, 248, 246, 246, 245, 246, 248, 246, 248, 249, 245, 246, 245, 250, 246, 247, 250, 246, 250, 246]) == 30', 'assert numberOfSubarrays([249, 248, 247, 246, 249, 248, 249, 248, 250, 248, 250, 246, 247, 248, 247, 246, 249, 248, 250, 246]) == 26', 'assert numberOfSubarrays([249, 248, 249, 248, 246, 246, 245, 246, 246, 248, 247, 248, 245, 250, 245, 250, 248, 247, 245, 250]) == 33', 'assert numberOfSubarrays([249, 249, 247, 245, 247, 247, 249, 248, 249, 245, 249, 246, 247, 246, 245, 245, 247, 247, 248, 248]) == 38', 'assert numberOfSubarrays([249, 249, 248, 249, 249, 248, 246, 250, 248, 247, 250, 248, 250, 249, 246, 246, 248, 246, 246, 247]) == 31', 'assert numberOfSubarrays([249, 249, 250, 246, 249, 245, 249, 249, 248, 249, 247, 249, 250, 249, 246, 247, 245, 248, 246, 248]) == 33', 'assert numberOfSubarrays([249, 249, 250, 249, 249, 247, 247, 248, 250, 247, 247, 245, 247, 247, 248, 250, 247, 246, 245, 248]) == 32', 'assert numberOfSubarrays([249, 250, 245, 246, 245, 249, 248, 250, 247, 247, 250, 249, 248, 247, 248, 249, 248, 249, 247, 245]) == 28', 'assert numberOfSubarrays([249, 250, 246, 248, 249, 246, 245, 245, 249, 250, 246, 249, 247, 245, 246, 249, 250, 249, 246, 247]) == 26', 'assert numberOfSubarrays([250, 245, 245, 248, 245, 248, 247, 249, 247, 250, 247, 250, 248, 247, 250, 245, 245, 250, 247, 247]) == 34', 'assert numberOfSubarrays([250, 245, 245, 250, 249, 248, 248, 245, 246, 249, 247, 245, 250, 245, 250, 246, 248, 249, 246, 250]) == 33', 'assert numberOfSubarrays([250, 245, 249, 246, 249, 248, 245, 250, 245, 250, 250, 247, 246, 249, 245, 247, 246, 248, 245, 245]) == 28', 'assert numberOfSubarrays([250, 245, 249, 249, 246, 250, 249, 246, 245, 248, 250, 245, 249, 249, 246, 245, 247, 247, 246, 249]) == 28', 'assert numberOfSubarrays([250, 246, 248, 250, 249, 249, 248, 249, 248, 250, 245, 249, 248, 246, 246, 245, 247, 247, 246, 245]) == 28', 'assert numberOfSubarrays([250, 247, 245, 248, 245, 250, 250, 245, 245, 245, 246, 247, 248, 247, 248, 245, 247, 247, 250, 248]) == 31', 'assert numberOfSubarrays([250, 247, 249, 247, 246, 249, 247, 246, 249, 246, 250, 245, 249, 246, 249, 247, 250, 245, 246, 246]) == 28', 'assert numberOfSubarrays([250, 249, 249, 250, 248, 249, 246, 245, 245, 249, 245, 249, 245, 247, 247, 250, 248, 248, 247, 249]) == 30', 'assert numberOfSubarrays([250, 250, 248, 249, 247, 245, 250, 250, 245, 250, 246, 249, 248, 249, 246, 245, 250, 246, 245, 247]) == 36', 'assert numberOfSubarrays([312, 326, 340, 323, 318, 320, 341, 332, 336, 345, 349, 338, 337, 347, 350, 331, 336, 332, 337, 314, 323, 341, 313, 313, 339]) == 26', 'assert numberOfSubarrays([312, 349, 336, 347, 323, 312, 340, 340, 315, 343, 321, 337, 335, 316, 337, 343, 315, 326, 320, 340, 315, 331, 336, 323, 318]) == 28', 'assert numberOfSubarrays([313, 326, 341, 333, 335, 344, 343, 324, 320, 315, 325, 345, 343, 312, 331, 323, 334, 322, 331, 320, 319, 323, 336, 338, 346]) == 25', 'assert numberOfSubarrays([313, 333, 329, 340, 337, 338, 319, 338, 350, 331, 341, 325, 317, 315, 313, 320, 327, 331, 322, 314, 329, 322, 334, 315, 345]) == 26', 'assert numberOfSubarrays([313, 334, 318, 327, 326, 321, 345, 337, 319, 313, 344, 314, 331, 342, 340, 328, 339, 319, 326, 350, 340, 340, 344, 339, 322]) == 26', 'assert numberOfSubarrays([313, 335, 320, 318, 342, 339, 328, 321, 341, 330, 326, 347, 334, 339, 329, 323, 323, 330, 334, 339, 350, 327, 316, 318, 336]) == 27', 'assert numberOfSubarrays([313, 342, 327, 332, 322, 349, 319, 319, 342, 332, 321, 336, 339, 342, 344, 328, 338, 322, 339, 350, 333, 330, 319, 333, 343]) == 28', 'assert numberOfSubarrays([314, 336, 344, 331, 347, 317, 350, 344, 326, 325, 345, 350, 336, 334, 341, 319, 323, 327, 329, 323, 315, 348, 312, 343, 339]) == 26', 'assert numberOfSubarrays([314, 344, 326, 315, 316, 334, 341, 337, 333, 313, 343, 317, 312, 345, 315, 336, 333, 346, 328, 321, 324, 321, 326, 339, 312]) == 25', 'assert numberOfSubarrays([315, 313, 318, 334, 333, 341, 341, 344, 331, 349, 345, 319, 343, 324, 347, 324, 328, 314, 338, 341, 330, 330, 348, 323, 346]) == 27', 'assert numberOfSubarrays([315, 335, 316, 324, 341, 342, 329, 350, 342, 343, 332, 326, 314, 321, 340, 325, 322, 346, 322, 347, 349, 315, 323, 317, 333]) == 25', 'assert numberOfSubarrays([316, 312, 340, 323, 325, 323, 345, 323, 327, 344, 326, 341, 323, 330, 329, 317, 329, 342, 334, 343, 347, 328, 332, 342, 342]) == 27', 'assert numberOfSubarrays([316, 313, 321, 339, 316, 332, 344, 348, 329, 333, 316, 345, 318, 337, 315, 335, 331, 324, 336, 320, 320, 318, 341, 328, 339]) == 26', 'assert numberOfSubarrays([316, 340, 323, 323, 338, 315, 341, 342, 337, 322, 347, 332, 313, 348, 320, 329, 332, 345, 323, 312, 350, 328, 339, 324, 327]) == 26', 'assert numberOfSubarrays([316, 342, 312, 327, 342, 317, 346, 319, 317, 325, 316, 350, 320, 322, 348, 336, 327, 330, 328, 318, 319, 329, 315, 331, 341]) == 26', 'assert numberOfSubarrays([318, 318, 328, 342, 325, 314, 342, 341, 340, 337, 318, 314, 332, 327, 342, 330, 348, 319, 344, 321, 338, 327, 322, 314, 318]) == 29', 'assert numberOfSubarrays([318, 323, 335, 341, 318, 313, 328, 321, 325, 328, 332, 329, 314, 335, 346, 343, 350, 323, 343, 332, 323, 339, 341, 345, 316]) == 26', 'assert numberOfSubarrays([318, 348, 348, 331, 349, 315, 315, 337, 346, 349, 339, 333, 314, 324, 318, 332, 312, 350, 319, 324, 328, 321, 321, 323, 325]) == 29', 'assert numberOfSubarrays([319, 323, 324, 350, 327, 325, 350, 350, 318, 325, 337, 330, 349, 348, 329, 331, 312, 322, 325, 325, 339, 315, 344, 331, 320]) == 29', 'assert numberOfSubarrays([319, 346, 319, 323, 318, 315, 341, 317, 315, 320, 330, 343, 317, 336, 324, 319, 333, 317, 342, 343, 327, 338, 339, 331, 316]) == 26', 'assert numberOfSubarrays([320, 321, 325, 332, 314, 327, 341, 343, 326, 350, 329, 344, 349, 328, 330, 316, 315, 346, 332, 347, 323, 325, 325, 328, 335]) == 26', 'assert numberOfSubarrays([320, 327, 318, 341, 319, 328, 350, 318, 350, 336, 320, 347, 320, 325, 336, 347, 345, 323, 314, 340, 332, 321, 323, 319, 346]) == 27', 'assert numberOfSubarrays([320, 338, 334, 341, 337, 330, 336, 342, 344, 315, 349, 336, 337, 343, 331, 329, 316, 338, 347, 333, 335, 325, 334, 316, 324]) == 25', 'assert numberOfSubarrays([322, 312, 334, 312, 324, 342, 316, 328, 333, 313, 340, 320, 336, 347, 335, 321, 322, 328, 337, 331, 326, 330, 345, 332, 323]) == 25', 'assert numberOfSubarrays([322, 312, 339, 315, 332, 330, 347, 313, 322, 320, 320, 327, 325, 342, 316, 340, 341, 339, 339, 349, 312, 324, 334, 334, 319]) == 28', 'assert numberOfSubarrays([322, 317, 342, 337, 320, 322, 323, 330, 338, 329, 315, 322, 331, 326, 349, 338, 322, 340, 313, 334, 344, 340, 350, 328, 336]) == 25', 'assert numberOfSubarrays([323, 315, 332, 337, 336, 346, 322, 330, 319, 314, 315, 345, 322, 343, 325, 319, 329, 327, 318, 334, 340, 314, 325, 323, 328]) == 25', 'assert numberOfSubarrays([323, 318, 319, 348, 328, 329, 318, 315, 334, 318, 349, 320, 339, 343, 321, 320, 323, 345, 345, 339, 330, 327, 347, 332, 342]) == 26', 'assert numberOfSubarrays([323, 319, 320, 334, 320, 328, 314, 337, 350, 328, 323, 336, 325, 335, 314, 325, 323, 347, 331, 343, 315, 333, 344, 346, 318]) == 25', 'assert numberOfSubarrays([323, 336, 342, 347, 322, 324, 332, 330, 335, 321, 339, 322, 316, 344, 347, 345, 350, 350, 331, 345, 329, 330, 320, 324, 322]) == 27', 'assert numberOfSubarrays([324, 318, 336, 333, 319, 345, 330, 318, 331, 327, 337, 314, 318, 335, 321, 319, 319, 320, 335, 317, 329, 313, 320, 329, 330]) == 28', 'assert numberOfSubarrays([324, 334, 324, 337, 340, 343, 332, 312, 345, 324, 324, 319, 340, 337, 349, 316, 339, 346, 336, 331, 330, 335, 321, 324, 342]) == 26', 'assert numberOfSubarrays([324, 334, 335, 344, 328, 312, 332, 339, 336, 347, 346, 322, 330, 317, 347, 342, 344, 315, 333, 340, 344, 314, 321, 326, 319]) == 27', 'assert numberOfSubarrays([326, 334, 341, 338, 339, 323, 342, 326, 343, 339, 331, 328, 331, 347, 344, 342, 347, 350, 312, 317, 316, 343, 315, 344, 343]) == 27', 'assert numberOfSubarrays([326, 336, 332, 318, 313, 341, 322, 328, 349, 337, 319, 320, 338, 346, 324, 349, 341, 325, 334, 320, 323, 327, 337, 347, 327]) == 26', 'assert numberOfSubarrays([327, 314, 325, 315, 348, 342, 328, 329, 334, 324, 322, 330, 321, 322, 344, 348, 335, 334, 340, 314, 320, 324, 327, 339, 314]) == 26', 'assert numberOfSubarrays([327, 324, 315, 349, 338, 345, 322, 348, 340, 332, 339, 333, 335, 346, 313, 334, 316, 315, 314, 338, 341, 317, 329, 343, 341]) == 25', 'assert numberOfSubarrays([327, 331, 330, 339, 323, 322, 333, 340, 349, 326, 315, 340, 334, 335, 348, 319, 341, 345, 336, 347, 314, 336, 326, 314, 316]) == 25', 'assert numberOfSubarrays([327, 334, 342, 335, 312, 331, 345, 329, 334, 338, 313, 331, 318, 318, 332, 348, 333, 331, 350, 349, 312, 331, 321, 350, 348]) == 27', 'assert numberOfSubarrays([328, 312, 343, 343, 344, 325, 319, 325, 341, 332, 348, 339, 318, 327, 339, 335, 317, 326, 314, 347, 348, 343, 316, 326, 347]) == 29', 'assert numberOfSubarrays([328, 321, 330, 317, 347, 320, 334, 345, 328, 326, 317, 312, 328, 348, 328, 350, 338, 343, 339, 333, 335, 350, 324, 325, 339]) == 27', 'assert numberOfSubarrays([328, 322, 346, 319, 321, 336, 315, 322, 349, 341, 347, 336, 343, 330, 314, 336, 315, 337, 341, 321, 334, 341, 321, 343, 317]) == 27', 'assert numberOfSubarrays([328, 323, 319, 319, 315, 334, 340, 333, 333, 347, 341, 324, 315, 312, 315, 314, 325, 312, 346, 324, 345, 332, 338, 331, 328]) == 28', 'assert numberOfSubarrays([328, 330, 339, 313, 331, 336, 343, 319, 320, 315, 322, 348, 345, 335, 313, 324, 344, 321, 318, 335, 345, 313, 330, 326, 331]) == 26', 'assert numberOfSubarrays([328, 335, 336, 346, 315, 320, 330, 342, 329, 347, 341, 341, 313, 330, 312, 331, 315, 323, 330, 342, 347, 335, 336, 333, 346]) == 27', 'assert numberOfSubarrays([329, 320, 322, 317, 322, 339, 322, 323, 318, 339, 343, 350, 344, 312, 327, 319, 322, 338, 327, 335, 322, 343, 316, 313, 348]) == 27', 'assert numberOfSubarrays([329, 325, 348, 337, 318, 331, 314, 347, 332, 325, 332, 348, 331, 315, 341, 317, 330, 339, 350, 333, 339, 328, 347, 319, 338]) == 27', 'assert numberOfSubarrays([329, 327, 329, 316, 317, 316, 334, 326, 313, 324, 312, 316, 350, 312, 320, 333, 341, 328, 318, 323, 331, 321, 336, 335, 333]) == 26', 'assert numberOfSubarrays([330, 320, 331, 348, 318, 338, 336, 344, 329, 325, 336, 342, 318, 324, 342, 339, 338, 329, 317, 332, 347, 320, 336, 332, 339]) == 26', 'assert numberOfSubarrays([330, 327, 334, 312, 324, 333, 328, 331, 336, 339, 322, 321, 334, 321, 315, 349, 319, 350, 344, 314, 330, 339, 319, 331, 336]) == 25', 'assert numberOfSubarrays([330, 332, 334, 348, 312, 321, 347, 326, 321, 313, 332, 323, 318, 340, 314, 343, 348, 316, 346, 343, 323, 333, 342, 326, 323]) == 26', 'assert numberOfSubarrays([330, 334, 326, 324, 331, 323, 342, 348, 336, 335, 339, 314, 343, 321, 333, 339, 328, 340, 349, 345, 318, 318, 314, 333, 316]) == 26', 'assert numberOfSubarrays([331, 315, 320, 317, 329, 321, 316, 334, 316, 338, 344, 325, 319, 317, 344, 347, 332, 350, 332, 317, 315, 320, 344, 340, 330]) == 26', 'assert numberOfSubarrays([331, 335, 347, 328, 344, 318, 349, 334, 347, 348, 342, 330, 321, 347, 317, 318, 347, 338, 349, 350, 318, 323, 339, 313, 321]) == 27', 'assert numberOfSubarrays([331, 338, 342, 325, 343, 348, 344, 312, 342, 349, 319, 330, 334, 338, 333, 345, 325, 323, 342, 346, 322, 315, 349, 334, 325]) == 26', 'assert numberOfSubarrays([332, 316, 317, 313, 327, 314, 314, 343, 335, 349, 334, 342, 333, 325, 316, 341, 333, 312, 324, 343, 317, 319, 337, 335, 347]) == 26', 'assert numberOfSubarrays([332, 320, 322, 326, 338, 343, 333, 341, 326, 314, 342, 338, 325, 332, 346, 325, 325, 347, 339, 329, 327, 350, 344, 322, 331]) == 26', 'assert numberOfSubarrays([332, 334, 323, 322, 345, 319, 312, 318, 331, 332, 321, 338, 348, 330, 314, 341, 317, 319, 341, 325, 312, 345, 349, 341, 322]) == 26', 'assert numberOfSubarrays([333, 318, 348, 337, 322, 312, 320, 314, 320, 325, 336, 342, 312, 333, 337, 348, 333, 323, 315, 340, 350, 336, 322, 330, 318]) == 27', 'assert numberOfSubarrays([333, 319, 315, 347, 346, 313, 320, 323, 335, 335, 347, 348, 338, 323, 336, 330, 350, 337, 329, 312, 340, 323, 318, 338, 317]) == 27', 'assert numberOfSubarrays([333, 325, 344, 346, 321, 340, 332, 327, 324, 346, 346, 337, 346, 330, 342, 331, 343, 332, 318, 335, 322, 336, 346, 320, 338]) == 35', 'assert numberOfSubarrays([333, 335, 346, 313, 331, 320, 314, 345, 336, 345, 339, 331, 343, 315, 340, 320, 328, 339, 349, 317, 314, 349, 336, 312, 335]) == 27', 'assert numberOfSubarrays([333, 343, 319, 339, 341, 324, 343, 340, 315, 324, 330, 318, 329, 344, 330, 321, 318, 348, 344, 340, 337, 341, 340, 338, 337]) == 26', 'assert numberOfSubarrays([333, 350, 331, 350, 330, 341, 324, 320, 343, 340, 322, 323, 313, 324, 326, 316, 335, 331, 319, 322, 349, 318, 350, 335, 327]) == 28', 'assert numberOfSubarrays([334, 345, 320, 313, 317, 336, 333, 317, 314, 313, 338, 329, 350, 318, 349, 350, 345, 317, 327, 322, 330, 336, 350, 333, 333]) == 29', 'assert numberOfSubarrays([335, 316, 320, 350, 324, 312, 336, 327, 343, 339, 333, 316, 336, 336, 339, 332, 313, 340, 340, 320, 328, 340, 313, 347, 322]) == 30', 'assert numberOfSubarrays([335, 321, 341, 314, 342, 321, 342, 338, 315, 312, 340, 318, 350, 314, 341, 327, 314, 338, 312, 315, 340, 313, 318, 329, 331]) == 26', 'assert numberOfSubarrays([335, 332, 324, 319, 313, 338, 342, 320, 334, 329, 316, 344, 314, 342, 322, 338, 330, 338, 322, 313, 345, 312, 331, 347, 348]) == 26', 'assert numberOfSubarrays([335, 340, 314, 342, 328, 338, 333, 314, 343, 349, 316, 319, 314, 331, 331, 315, 329, 318, 329, 338, 323, 334, 316, 350, 350]) == 28', 'assert numberOfSubarrays([335, 347, 344, 315, 321, 339, 346, 319, 340, 339, 327, 339, 334, 346, 328, 334, 325, 315, 348, 337, 313, 340, 323, 336, 322]) == 27', 'assert numberOfSubarrays([336, 322, 343, 318, 327, 326, 344, 328, 349, 312, 317, 328, 332, 333, 320, 336, 335, 340, 328, 346, 348, 346, 333, 315, 322]) == 25', 'assert numberOfSubarrays([336, 332, 343, 330, 323, 322, 331, 323, 326, 346, 319, 316, 313, 318, 345, 329, 315, 344, 338, 329, 332, 340, 330, 324, 317]) == 25', 'assert numberOfSubarrays([336, 338, 318, 336, 348, 330, 341, 313, 318, 343, 344, 319, 324, 317, 320, 329, 343, 342, 315, 340, 339, 325, 349, 329, 332]) == 25', 'assert numberOfSubarrays([337, 313, 336, 312, 342, 345, 340, 320, 340, 345, 349, 313, 312, 341, 317, 350, 343, 338, 333, 342, 327, 331, 312, 337, 349]) == 27', 'assert numberOfSubarrays([337, 332, 318, 346, 326, 320, 343, 349, 326, 324, 334, 313, 323, 317, 316, 333, 325, 321, 312, 333, 335, 317, 334, 320, 337]) == 26', 'assert numberOfSubarrays([337, 334, 312, 344, 315, 320, 332, 344, 334, 337, 347, 321, 323, 336, 328, 322, 319, 349, 312, 333, 341, 348, 336, 313, 322]) == 26', 'assert numberOfSubarrays([338, 325, 315, 339, 340, 343, 315, 331, 343, 346, 343, 317, 336, 338, 324, 317, 325, 323, 346, 348, 350, 333, 318, 325, 340]) == 27', 'assert numberOfSubarrays([339, 313, 341, 335, 322, 348, 325, 348, 313, 346, 332, 325, 331, 324, 323, 350, 340, 315, 328, 350, 331, 332, 348, 337, 313]) == 27', 'assert numberOfSubarrays([340, 335, 327, 315, 323, 323, 332, 328, 324, 329, 333, 347, 338, 316, 323, 326, 326, 318, 329, 316, 319, 347, 322, 326, 341]) == 28', 'assert numberOfSubarrays([341, 337, 324, 322, 324, 331, 323, 335, 316, 336, 324, 321, 335, 318, 345, 341, 349, 344, 328, 344, 346, 347, 331, 336, 330]) == 27', 'assert numberOfSubarrays([341, 343, 343, 313, 348, 337, 326, 331, 332, 335, 350, 334, 338, 341, 335, 336, 326, 325, 332, 312, 346, 322, 322, 340, 322]) == 27', 'assert numberOfSubarrays([341, 346, 319, 323, 347, 341, 341, 346, 343, 312, 319, 312, 326, 323, 320, 345, 342, 330, 320, 324, 333, 349, 328, 344, 349]) == 27', 'assert numberOfSubarrays([342, 338, 339, 330, 319, 327, 326, 337, 320, 349, 339, 319, 318, 315, 338, 324, 322, 330, 315, 321, 316, 332, 332, 331, 332]) == 28', 'assert numberOfSubarrays([343, 316, 343, 317, 338, 348, 343, 349, 345, 329, 330, 337, 342, 320, 338, 332, 349, 339, 327, 320, 324, 333, 323, 333, 312]) == 28', 'assert numberOfSubarrays([343, 332, 347, 342, 314, 326, 349, 335, 333, 349, 320, 342, 321, 331, 329, 315, 325, 347, 324, 344, 343, 349, 340, 343, 321]) == 28', 'assert numberOfSubarrays([343, 338, 318, 326, 322, 345, 313, 330, 333, 348, 329, 327, 315, 324, 323, 336, 326, 347, 347, 340, 326, 313, 313, 346, 347]) == 29', 'assert numberOfSubarrays([343, 346, 346, 336, 332, 330, 332, 341, 316, 329, 319, 324, 337, 332, 333, 331, 321, 328, 325, 341, 328, 325, 312, 327, 345]) == 28', 'assert numberOfSubarrays([343, 350, 313, 329, 348, 343, 316, 342, 327, 332, 321, 314, 348, 319, 330, 328, 324, 346, 348, 317, 323, 347, 317, 315, 324]) == 28', 'assert numberOfSubarrays([344, 315, 320, 341, 341, 315, 321, 338, 343, 318, 341, 330, 348, 329, 342, 315, 340, 326, 327, 341, 344, 347, 314, 342, 325]) == 26', 'assert numberOfSubarrays([347, 315, 347, 325, 334, 344, 312, 338, 321, 341, 330, 324, 342, 332, 343, 326, 335, 333, 330, 339, 324, 322, 338, 349, 314]) == 26', 'assert numberOfSubarrays([347, 320, 322, 315, 335, 318, 341, 341, 333, 322, 339, 338, 349, 313, 313, 336, 343, 342, 312, 319, 336, 316, 317, 324, 349]) == 28', 'assert numberOfSubarrays([347, 336, 344, 322, 345, 347, 322, 315, 328, 321, 338, 323, 339, 339, 339, 324, 334, 333, 316, 327, 313, 341, 328, 327, 350]) == 29', 'assert numberOfSubarrays([347, 342, 337, 318, 318, 314, 322, 342, 329, 342, 343, 312, 340, 340, 319, 318, 319, 316, 339, 321, 337, 338, 346, 320, 325]) == 31', 'assert numberOfSubarrays([348, 322, 349, 319, 350, 337, 341, 323, 344, 327, 348, 328, 327, 312, 348, 326, 346, 339, 348, 341, 331, 320, 332, 335, 331]) == 28', 'assert numberOfSubarrays([349, 315, 320, 321, 343, 331, 312, 339, 350, 317, 317, 324, 333, 314, 333, 328, 316, 331, 346, 331, 345, 329, 339, 334, 339]) == 28', 'assert numberOfSubarrays([349, 317, 348, 317, 323, 338, 343, 335, 337, 334, 349, 346, 348, 335, 329, 336, 314, 350, 340, 324, 335, 321, 332, 342, 324]) == 26', 'assert numberOfSubarrays([349, 320, 312, 318, 318, 322, 347, 327, 341, 324, 336, 347, 347, 343, 324, 341, 339, 327, 348, 333, 346, 325, 320, 334, 324]) == 29', 'assert numberOfSubarrays([349, 322, 314, 325, 345, 350, 317, 319, 327, 345, 318, 330, 347, 349, 313, 320, 316, 316, 332, 318, 339, 313, 317, 337, 314]) == 26', 'assert numberOfSubarrays([349, 336, 312, 332, 326, 342, 319, 328, 317, 317, 340, 328, 343, 345, 315, 325, 313, 347, 317, 324, 347, 336, 319, 340, 328]) == 27', 'assert numberOfSubarrays([350, 327, 324, 348, 340, 313, 320, 333, 343, 319, 346, 336, 329, 328, 329, 333, 320, 313, 331, 314, 348, 347, 339, 325, 331]) == 27', 'assert numberOfSubarrays([12, 118, 396, 312, 105, 496, 427, 469, 427, 453, 477, 395, 472, 35, 123, 99, 60, 230, 488, 462, 14, 257, 17, 372, 383, 174, 324, 309, 165, 59, 29, 493, 450, 30, 247, 166, 101, 36, 256, 58, 399, 52, 49, 126, 449]) == 45', 'assert numberOfSubarrays([112, 33, 432, 403, 303, 88, 362, 168, 260, 323, 300, 210, 378, 455, 252, 241, 414, 388, 384, 141, 352, 191, 253, 42, 352, 251, 296, 52, 419, 305, 341, 7, 58, 22, 136, 398, 395, 412, 490, 468, 413, 443, 104, 226, 338]) == 46', 'assert numberOfSubarrays([132, 492, 385, 306, 150, 440, 17, 109, 494, 317, 280, 338, 353, 423, 264, 66, 84, 142, 365, 459, 465, 193, 33, 167, 147, 95, 141, 54, 396, 293, 14, 182, 104, 53, 321, 259, 280, 103, 88, 383, 103, 325, 328, 425, 180]) == 45', 'assert numberOfSubarrays([149, 197, 279, 433, 85, 422, 491, 164, 355, 35, 439, 110, 26, 201, 409, 273, 253, 14, 371, 32, 365, 75, 232, 302, 465, 223, 230, 63, 359, 453, 188, 269, 217, 230, 299, 207, 419, 101, 90, 62, 328, 173, 105, 154, 241]) == 45', 'assert numberOfSubarrays([190, 243, 83, 389, 97, 235, 441, 500, 326, 395, 152, 85, 365, 191, 493, 237, 425, 65, 183, 138, 439, 490, 62, 323, 476, 482, 454, 490, 141, 325, 473, 395, 250, 232, 45, 71, 245, 174, 105, 51, 195, 295, 479, 445, 67]) == 46', 'assert numberOfSubarrays([320, 164, 243, 85, 223, 189, 184, 221, 192, 90, 240, 288, 241, 186, 82, 239, 428, 234, 436, 9, 288, 500, 410, 115, 182, 114, 276, 194, 152, 356, 220, 396, 366, 319, 72, 15, 195, 259, 27, 148, 103, 319, 380, 491, 295]) == 46', 'assert numberOfSubarrays([372, 25, 139, 342, 120, 205, 253, 216, 323, 189, 221, 209, 191, 414, 236, 191, 139, 303, 275, 375, 85, 80, 40, 304, 59, 436, 28, 18, 174, 51, 339, 137, 131, 448, 55, 131, 236, 41, 287, 218, 319, 53, 270, 353, 367]) == 45', 'assert numberOfSubarrays([382, 487, 467, 105, 377, 419, 217, 470, 418, 58, 434, 102, 313, 264, 48, 398, 104, 147, 233, 216, 345, 138, 477, 412, 19, 360, 7, 330, 147, 487, 338, 108, 472, 235, 163, 269, 164, 38, 287, 455, 437, 82, 458, 425, 480]) == 46', 'assert numberOfSubarrays([405, 408, 95, 446, 455, 158, 53, 370, 57, 293, 10, 46, 271, 326, 302, 389, 295, 344, 317, 444, 102, 179, 49, 108, 163, 338, 392, 223, 413, 103, 88, 351, 426, 219, 122, 200, 168, 442, 467, 177, 22, 409, 147, 264, 482]) == 45', 'assert numberOfSubarrays([434, 274, 181, 313, 418, 27, 95, 14, 15, 288, 419, 75, 379, 259, 371, 341, 144, 222, 445, 139, 7, 353, 337, 482, 392, 406, 289, 247, 177, 73, 279, 271, 384, 394, 58, 288, 389, 453, 33, 21, 446, 219, 231, 196, 461]) == 45', 'assert numberOfSubarrays([5, 4513, 2595, 1252, 2174, 2576, 1173, 2424, 3948, 1934, 2564, 713, 3215, 3329, 1754, 858, 2576, 2399, 151, 113, 4516, 4321, 1466, 3019, 3049, 1888, 3150, 1496, 3040, 2339, 4981, 2890, 512, 310, 3096, 2406, 2142, 4426, 2606, 121, 1078, 2706, 3814, 1599, 4479, 170, 2439, 1494, 2946, 4063]) == 50', 'assert numberOfSubarrays([170, 3726, 3534, 3510, 4729, 4087, 3335, 1185, 2876, 3171, 4894, 3982, 2141, 3008, 3450, 861, 760, 3327, 4551, 2026, 1752, 376, 4001, 160, 2642, 4981, 1820, 1867, 1592, 3655, 992, 4803, 17, 3687, 2919, 3986, 175, 4427, 874, 3153, 153, 4507, 4276, 3947, 921, 4316, 744, 4703, 4206, 1049]) == 50', 'assert numberOfSubarrays([189, 2029, 782, 22, 1511, 4003, 2396, 957, 1831, 4969, 531, 2129, 2338, 518, 4777, 926, 1996, 405, 4946, 4156, 1548, 4749, 1001, 3773, 3707, 4943, 763, 1663, 739, 171, 1384, 2950, 2091, 2488, 1197, 2681, 2728, 1170, 462, 3318, 2108, 4465, 4050, 1497, 4057, 281, 1436, 4922, 634, 4465]) == 50', 'assert numberOfSubarrays([294, 3765, 2288, 1320, 2462, 3163, 1264, 4268, 4402, 288, 3471, 2523, 1140, 4199, 3071, 3205, 45, 3458, 2165, 2456, 3869, 4928, 2077, 2119, 4456, 909, 73, 1004, 136, 1877, 235, 3700, 2421, 686, 2763, 2445, 211, 4769, 4, 4756, 983, 3495, 3260, 1315, 1407, 59, 3148, 1701, 4430, 4800]) == 50', 'assert numberOfSubarrays([296, 216, 4591, 422, 1155, 2958, 2195, 896, 2118, 3865, 1886, 1255, 1082, 873, 1711, 1058, 4898, 2779, 4238, 4479, 1663, 2197, 2252, 2056, 2838, 1348, 1735, 4375, 4580, 1783, 4620, 3477, 432, 955, 3141, 3947, 3125, 611, 4556, 977, 990, 1513, 3458, 1575, 1340, 1186, 588, 833, 817, 2198]) == 50', 'assert numberOfSubarrays([530, 686, 1536, 1757, 4704, 4537, 1615, 1751, 906, 4171, 4939, 923, 386, 4533, 1550, 4095, 1887, 4374, 39, 1685, 2159, 1618, 1283, 273, 3129, 1674, 1184, 861, 142, 3992, 2502, 4116, 4638, 3043, 2990, 4078, 1831, 1991, 1718, 218, 4116, 4026, 1131, 2627, 4796, 4103, 2882, 3546, 4795, 3535]) == 50', 'assert numberOfSubarrays([624, 1677, 1050, 2794, 2196, 4348, 629, 2063, 1609, 3652, 3159, 4419, 1873, 4924, 1564, 3786, 1804, 61, 3175, 3086, 2891, 2111, 4262, 1377, 4644, 1768, 4268, 1880, 1410, 3421, 727, 4312, 3077, 3324, 3096, 4551, 2468, 4543, 4281, 1943, 1048, 2429, 4144, 3170, 296, 381, 2678, 1085, 3871, 3207]) == 50', 'assert numberOfSubarrays([636, 818, 3388, 2647, 1731, 478, 3174, 4771, 2367, 1354, 2733, 1178, 1184, 3218, 184, 1461, 2418, 1399, 3427, 1222, 4404, 2529, 3300, 2859, 4863, 120, 3369, 4372, 775, 56, 3253, 4112, 1583, 85, 1758, 441, 4817, 3971, 3160, 156, 983, 3986, 1593, 2254, 3978, 2029, 1504, 416, 2247, 4566]) == 50', 'assert numberOfSubarrays([705, 56, 3328, 4906, 4111, 4873, 4002, 4719, 617, 4255, 4808, 1003, 4744, 3807, 2310, 2774, 4187, 3760, 229, 4004, 2524, 4561, 4125, 3938, 457, 3840, 4192, 2543, 2561, 1489, 3335, 3990, 2720, 1831, 1114, 779, 3472, 2248, 1489, 757, 3432, 1984, 734, 4748, 3702, 2097, 1031, 1715, 2985, 4839]) == 50', 'assert numberOfSubarrays([711, 340, 736, 918, 1864, 4285, 3985, 363, 3033, 3639, 3278, 2149, 3267, 2663, 4827, 2064, 4686, 3731, 2059, 3178, 3540, 223, 131, 1912, 4641, 1290, 1841, 2514, 4840, 3216, 318, 660, 1997, 1879, 1976, 4873, 3914, 44, 4086, 2903, 289, 3948, 46, 537, 3729, 4117, 497, 2625, 1716, 3730]) == 50', 'assert numberOfSubarrays([794, 849, 3622, 767, 3561, 4910, 2343, 3744, 2738, 1810, 838, 2881, 1937, 89, 4107, 1854, 3054, 4433, 1304, 4980, 3540, 3572, 2989, 2960, 2674, 183, 4524, 2169, 211, 1247, 3441, 4321, 2646, 330, 3184, 1385, 2626, 2527, 2323, 1184, 547, 4080, 1942, 4790, 112, 516, 4030, 1180, 829, 3572]) == 50', 'assert numberOfSubarrays([969, 4092, 4877, 4894, 763, 3385, 1261, 3280, 3938, 2497, 1702, 3196, 1860, 156, 230, 2989, 2113, 3582, 3882, 4884, 2776, 3726, 601, 2956, 2119, 4974, 262, 55, 645, 3584, 3689, 3176, 1998, 3042, 2469, 1757, 3570, 2525, 2735, 561, 4000, 1364, 960, 4381, 2039, 3269, 2683, 3726, 1623, 1074]) == 50', 'assert numberOfSubarrays([1002, 3953, 852, 4024, 749, 709, 39, 1139, 1147, 4775, 110, 2961, 3360, 358, 1285, 3253, 1451, 4818, 2617, 4867, 3766, 17, 4122, 550, 2410, 1673, 3303, 2582, 3369, 4842, 584, 1119, 4979, 903, 4127, 422, 3979, 2976, 326, 3861, 3458, 1357, 4278, 4247, 930, 4619, 1930, 133, 3709, 2944]) == 50', 'assert numberOfSubarrays([1033, 2651, 2974, 2256, 3888, 3153, 3499, 2527, 1987, 2859, 630, 4590, 537, 2355, 692, 2532, 3667, 2566, 893, 461, 1260, 144, 3850, 391, 3828, 4076, 2826, 1472, 2611, 4960, 3381, 2145, 2323, 2190, 2993, 1160, 3061, 555, 1880, 604, 4437, 1660, 2987, 547, 588, 3398, 1091, 4490, 4879, 1678]) == 50', 'assert numberOfSubarrays([1132, 704, 4864, 2033, 1192, 2089, 3357, 1133, 2479, 1732, 2336, 2275, 4497, 4484, 2883, 4342, 926, 3867, 1812, 3892, 1836, 1143, 1378, 4411, 3838, 821, 1705, 117, 1531, 4873, 455, 1701, 2894, 528, 2749, 131, 3876, 1299, 1961, 1014, 3398, 3312, 2951, 2599, 689, 427, 825, 2565, 2516, 4739]) == 50', 'assert numberOfSubarrays([1275, 2761, 3299, 1296, 2576, 818, 2174, 4134, 2992, 213, 200, 46, 1029, 85, 3146, 4771, 378, 2985, 947, 3827, 1961, 4328, 3073, 1872, 3980, 3170, 1356, 4345, 3113, 3306, 117, 982, 4262, 22, 4706, 4374, 1559, 3538, 1153, 3212, 4915, 2716, 3584, 1207, 4554, 1084, 3966, 4081, 3860, 908]) == 50', 'assert numberOfSubarrays([1303, 270, 265, 839, 4993, 3813, 2071, 4535, 1189, 3903, 2012, 340, 1101, 2795, 3902, 285, 1220, 4057, 1325, 1573, 3989, 1053, 4299, 1058, 3624, 4689, 3034, 4719, 3781, 537, 301, 320, 2828, 3944, 1070, 2023, 645, 2358, 3089, 2023, 4190, 3790, 3273, 4137, 3890, 3341, 547, 1590, 507, 3198]) == 50', 'assert numberOfSubarrays([1312, 1858, 709, 62, 2372, 3374, 2851, 2479, 4952, 3735, 4015, 2489, 1357, 4601, 2090, 3296, 3743, 1041, 2549, 3921, 4728, 3286, 4032, 4510, 4197, 396, 1922, 1348, 3579, 3565, 4940, 640, 2188, 2277, 2289, 2934, 678, 2771, 3808, 1383, 3853, 2928, 3639, 2005, 4433, 2401, 2801, 47, 3076, 118]) == 50', 'assert numberOfSubarrays([1338, 2783, 4650, 2825, 1260, 3226, 3891, 2160, 823, 2580, 2064, 4699, 579, 371, 2040, 506, 3785, 2132, 3063, 2225, 1323, 1156, 1613, 522, 912, 1472, 2707, 1461, 4951, 3157, 3165, 3121, 1416, 3810, 2603, 4873, 742, 304, 1141, 2583, 1496, 4150, 101, 4585, 4798, 746, 1128, 4867, 4710, 2637]) == 50', 'assert numberOfSubarrays([1349, 4805, 129, 4852, 4383, 4163, 3885, 613, 1418, 2421, 3936, 2404, 2813, 2010, 2724, 3947, 4846, 1891, 3886, 1241, 3131, 4431, 4023, 4091, 784, 3816, 1782, 4658, 1975, 217, 3756, 3228, 3624, 4096, 1265, 2208, 971, 3771, 3908, 1748, 4803, 1391, 3357, 4214, 241, 4303, 945, 510, 1137, 2864]) == 50', 'assert numberOfSubarrays([1384, 4365, 4781, 500, 305, 109, 4237, 4572, 3075, 3797, 2827, 969, 4082, 3899, 928, 1564, 3142, 2842, 1264, 370, 4205, 54, 2460, 3067, 1458, 2690, 1482, 696, 3988, 1078, 484, 2989, 4650, 1743, 4000, 2706, 2825, 1620, 3828, 673, 3460, 1900, 577, 4502, 3605, 1304, 1591, 3269, 952, 3324]) == 50', 'assert numberOfSubarrays([1400, 4638, 1160, 2422, 4002, 434, 4651, 4113, 3798, 55, 4925, 2914, 3709, 105, 3780, 880, 3383, 2467, 1548, 4582, 4408, 3897, 925, 1611, 4273, 3380, 3687, 4552, 1108, 3226, 4652, 4075, 3987, 636, 119, 4297, 636, 3031, 4753, 3407, 3280, 1516, 1222, 2264, 4448, 4069, 4395, 2768, 4219, 4909]) == 50', 'assert numberOfSubarrays([1522, 2491, 427, 1433, 3938, 1234, 3256, 899, 1139, 2357, 3771, 543, 2504, 73, 4004, 4621, 2448, 4579, 3025, 4286, 3620, 3874, 883, 343, 1375, 4653, 390, 4549, 575, 50, 218, 492, 2000, 1568, 3576, 706, 1391, 2897, 3488, 1345, 4031, 854, 3195, 334, 2739, 4781, 119, 2287, 3918, 4771]) == 50', 'assert numberOfSubarrays([1553, 4849, 1524, 4146, 2957, 4274, 4833, 4554, 120, 3203, 2044, 4523, 2775, 50, 1340, 1132, 3148, 2173, 2142, 4978, 1599, 3241, 3399, 2818, 570, 3578, 894, 1068, 2638, 1969, 3067, 4496, 213, 2456, 4199, 303, 4305, 2752, 1025, 2595, 1373, 2097, 3043, 1164, 272, 3979, 3246, 3202, 1728, 1829]) == 50', 'assert numberOfSubarrays([1609, 3389, 4664, 3830, 3640, 2045, 1252, 1029, 4215, 371, 3723, 1912, 4777, 4358, 92, 1800, 2883, 3397, 2764, 1488, 2945, 2819, 4538, 3720, 4848, 1033, 609, 2769, 415, 1329, 3126, 3859, 3166, 785, 3615, 1313, 3423, 3814, 974, 2410, 4956, 2984, 2801, 563, 4656, 1801, 3680, 2958, 1857, 2247]) == 50', 'assert numberOfSubarrays([1636, 1496, 2888, 2227, 571, 4422, 288, 1741, 3706, 1475, 1967, 2404, 1927, 2374, 3541, 1260, 1863, 4754, 3116, 2404, 876, 90, 2349, 2905, 4641, 1823, 3888, 3258, 2934, 3843, 3082, 3220, 596, 1348, 2168, 2095, 2256, 150, 4100, 4529, 1155, 3717, 2003, 1920, 956, 15, 3560, 2476, 4234, 1268]) == 50', 'assert numberOfSubarrays([1645, 3013, 2038, 1292, 2996, 2446, 2136, 1123, 1913, 1788, 1204, 3390, 4929, 2100, 995, 2750, 2367, 419, 486, 2628, 1989, 244, 4594, 4046, 4311, 3223, 4191, 3873, 2926, 4525, 3241, 1462, 2099, 4538, 1967, 3916, 2497, 2978, 1013, 2737, 1672, 4791, 1637, 4988, 2611, 1330, 2074, 3696, 2921, 4117]) == 50', 'assert numberOfSubarrays([1751, 712, 1842, 1265, 2233, 4995, 2876, 1250, 4559, 4288, 3536, 3022, 395, 4897, 2450, 222, 2073, 3683, 95, 1788, 1920, 3891, 1721, 322, 2757, 1070, 2952, 2513, 1481, 2440, 4253, 971, 1478, 1247, 4171, 2872, 1987, 2639, 3303, 1657, 1929, 3858, 4992, 1869, 633, 4885, 1577, 2731, 4434, 2852]) == 50', 'assert numberOfSubarrays([1820, 4802, 365, 3366, 1719, 4782, 4010, 2676, 2449, 3026, 4096, 2971, 3447, 1979, 4828, 3052, 2867, 937, 1367, 2426, 2312, 890, 2240, 669, 568, 2499, 4277, 2556, 4075, 3478, 3871, 149, 2240, 3329, 851, 1035, 3542, 1898, 3085, 1297, 3216, 1880, 1696, 192, 3245, 2146, 3070, 4112, 2762, 3231]) == 50', 'assert numberOfSubarrays([1873, 173, 214, 1544, 3040, 1677, 508, 2748, 1933, 3197, 201, 3063, 907, 2278, 2646, 1603, 3134, 577, 2972, 3411, 1750, 1732, 2836, 75, 2574, 3203, 2937, 2306, 3073, 1113, 2774, 1934, 1689, 259, 1591, 2315, 2682, 2237, 3660, 1753, 3532, 1996, 4012, 920, 406, 3490, 635, 3306, 2378, 2307]) == 50', 'assert numberOfSubarrays([1917, 94, 3127, 3973, 3648, 3156, 1077, 4859, 3824, 4080, 223, 8, 3312, 2940, 1297, 535, 4940, 1557, 3584, 2323, 2947, 2692, 2803, 4537, 4198, 3401, 441, 81, 2565, 1775, 412, 916, 258, 4717, 504, 3340, 4354, 1867, 1141, 4505, 1225, 3791, 602, 1298, 1715, 3461, 1289, 4206, 3307, 476]) == 50', 'assert numberOfSubarrays([1963, 149, 710, 4631, 4706, 172, 2222, 329, 3923, 3070, 2916, 4077, 1793, 2688, 2059, 2066, 4401, 1820, 661, 3338, 3905, 3654, 1701, 3466, 3963, 4078, 4877, 3486, 3075, 3208, 2284, 1632, 1299, 3094, 650, 2893, 3714, 204, 4063, 4688, 1506, 1517, 156, 1993, 3805, 4043, 1161, 917, 412, 1350]) == 50', 'assert numberOfSubarrays([2000, 3622, 103, 3060, 2321, 3885, 3063, 3947, 4395, 2937, 4357, 1509, 1995, 3189, 4156, 3920, 2717, 1520, 2438, 581, 3379, 2966, 4499, 4737, 1458, 3095, 2867, 4911, 3043, 2866, 3766, 4055, 2626, 1370, 2030, 2072, 2566, 4562, 1898, 2360, 3175, 1345, 2448, 1156, 3644, 762, 1467, 1043, 3436, 3253]) == 50', 'assert numberOfSubarrays([2005, 4191, 2658, 477, 312, 4194, 719, 771, 4, 920, 1853, 3425, 2555, 2265, 2583, 1237, 1888, 4731, 4683, 526, 3154, 3928, 928, 3024, 4192, 3240, 4320, 2929, 1885, 551, 2070, 2014, 1857, 1748, 865, 727, 465, 2029, 4955, 2192, 2017, 524, 1185, 2957, 2960, 2739, 2712, 3311, 1478, 1782]) == 50', 'assert numberOfSubarrays([2016, 795, 4087, 2753, 152, 4617, 4231, 1273, 1184, 1678, 4533, 471, 4663, 3281, 2756, 3329, 3213, 3969, 4411, 2824, 1636, 1189, 3112, 3640, 2381, 3518, 668, 2615, 2688, 3487, 439, 2237, 1845, 4185, 4676, 4745, 4045, 2446, 2172, 4520, 1361, 767, 2586, 2175, 1040, 3570, 2045, 4930, 393, 2450]) == 50', 'assert numberOfSubarrays([2075, 4955, 3154, 3974, 4996, 2019, 1894, 3566, 2251, 4966, 3536, 2756, 1950, 1718, 4546, 4572, 4216, 2872, 588, 2391, 2174, 1914, 2330, 3406, 4125, 730, 1422, 4050, 3087, 3810, 3749, 4407, 2335, 3485, 205, 4497, 4179, 1832, 597, 3033, 2388, 2091, 4138, 4957, 529, 189, 4666, 4605, 836, 3409]) == 50', 'assert numberOfSubarrays([2088, 935, 3328, 3357, 1200, 2354, 800, 4462, 2553, 3498, 4104, 1768, 2915, 2806, 3209, 4762, 196, 2669, 1415, 904, 3260, 4168, 3933, 4389, 2185, 3450, 1371, 1004, 517, 3757, 4285, 4858, 4006, 411, 535, 2064, 40, 3896, 586, 1513, 1300, 1291, 3825, 1586, 2554, 4491, 4008, 4191, 4788, 3050]) == 50', 'assert numberOfSubarrays([2094, 1497, 190, 484, 1652, 3942, 886, 2804, 3849, 1813, 4268, 4182, 4196, 1543, 4281, 1269, 2814, 1924, 4808, 613, 2155, 4891, 2660, 3359, 3930, 4941, 1206, 3376, 1843, 1629, 3293, 2462, 427, 414, 1047, 1978, 3343, 3513, 804, 1391, 1416, 3788, 424, 3028, 3541, 2564, 558, 4722, 4013, 4971]) == 50', 'assert numberOfSubarrays([2233, 1469, 1570, 1086, 4199, 4119, 3758, 2982, 781, 4382, 2844, 4893, 1374, 4525, 4463, 1573, 702, 2048, 4932, 2054, 1710, 1824, 2842, 4428, 2501, 2645, 3795, 1760, 4449, 874, 1232, 1209, 3755, 2105, 1217, 1324, 3400, 4272, 2654, 1721, 4645, 1034, 3094, 3613, 2839, 1838, 3312, 1700, 1126, 1903]) == 50', 'assert numberOfSubarrays([2295, 2391, 2133, 3089, 4204, 4006, 3338, 4983, 3247, 563, 3886, 3999, 1188, 2638, 1484, 4381, 3662, 4032, 2163, 1082, 9, 4595, 4092, 1153, 2475, 22, 3554, 3393, 3496, 2074, 1275, 3587, 2484, 1768, 3772, 1566, 667, 2305, 465, 141, 2647, 3768, 2862, 3758, 2384, 382, 3596, 4783, 4421, 2265]) == 50', 'assert numberOfSubarrays([2363, 898, 1343, 4749, 101, 2756, 685, 3671, 3240, 2813, 3400, 3814, 3806, 3353, 4374, 752, 4476, 1557, 1539, 4388, 3703, 3031, 3884, 1446, 3611, 2797, 2771, 3717, 1730, 1928, 348, 886, 1121, 4817, 3568, 4979, 2209, 1717, 3610, 4096, 414, 308, 3650, 227, 1567, 1177, 2839, 4620, 2937, 2922]) == 50', 'assert numberOfSubarrays([2378, 1197, 132, 4731, 3618, 1026, 2140, 3716, 1639, 15, 3422, 2839, 2944, 4234, 873, 606, 3860, 4582, 2884, 2943, 1841, 2971, 1080, 129, 3458, 2404, 4723, 4390, 4701, 4890, 1354, 4135, 1713, 2220, 2225, 2676, 2701, 2658, 2438, 2991, 3948, 4365, 832, 2381, 2101, 2600, 3487, 3618, 4163, 2923]) == 50', 'assert numberOfSubarrays([2433, 3364, 2586, 1561, 4596, 3760, 2878, 4492, 273, 2848, 2889, 3512, 1101, 3286, 1825, 204, 1135, 777, 4842, 44, 2894, 4030, 4695, 3791, 3298, 4435, 1678, 4145, 126, 4107, 3353, 2619, 1986, 1169, 374, 3809, 350, 3844, 4139, 3629, 853, 2163, 623, 2567, 3529, 2988, 1773, 1686, 4442, 4098]) == 50', 'assert numberOfSubarrays([2453, 28, 1049, 3112, 2378, 1981, 3794, 2296, 1094, 335, 535, 1364, 4141, 1136, 4516, 2599, 3809, 3128, 3532, 2793, 1386, 2767, 997, 3424, 1251, 3993, 3345, 4071, 960, 223, 1620, 3179, 1035, 4670, 3801, 2866, 4752, 1938, 1330, 4496, 4777, 3464, 277, 942, 4978, 1688, 2390, 4332, 4654, 3457]) == 50', 'assert numberOfSubarrays([2521, 1930, 110, 3994, 1720, 1533, 1579, 1837, 2574, 1283, 3769, 1319, 4777, 1008, 2125, 1786, 218, 4138, 330, 4030, 3575, 1460, 4299, 1011, 3461, 510, 3585, 2142, 3687, 4284, 2484, 719, 4124, 1843, 1404, 174, 3768, 880, 585, 216, 2425, 2239, 3767, 1524, 1991, 2937, 2493, 2253, 3543, 1991]) == 50', 'assert numberOfSubarrays([2543, 887, 2588, 135, 1152, 539, 3807, 932, 3499, 4982, 4361, 2957, 3636, 2161, 4914, 2791, 494, 809, 1344, 238, 4474, 418, 1586, 2401, 4873, 1785, 3717, 2307, 699, 2819, 4929, 4171, 2130, 3533, 3687, 1183, 4008, 1989, 1940, 4378, 4036, 1367, 2414, 3975, 3323, 210, 4511, 4099, 4213, 739]) == 50', 'assert numberOfSubarrays([2591, 2131, 4888, 3388, 1746, 1274, 1560, 1549, 1538, 3075, 3840, 131, 224, 3295, 2080, 4799, 4136, 3178, 2232, 1490, 228, 95, 1182, 1328, 720, 4075, 1989, 1239, 23, 300, 702, 27, 3418, 4457, 2689, 2828, 339, 302, 2888, 817, 2834, 4293, 1916, 1524, 1639, 4376, 2910, 1369, 3378, 2725]) == 50', 'assert numberOfSubarrays([2716, 900, 458, 2367, 1725, 2472, 2865, 506, 3434, 4233, 2741, 1, 512, 3969, 3712, 903, 1980, 262, 4180, 2491, 460, 1785, 4462, 4602, 1335, 1850, 1290, 1357, 2889, 2116, 3078, 1537, 2957, 2464, 3527, 4747, 4492, 4543, 4741, 4098, 4271, 4606, 3532, 1845, 4111, 530, 1687, 3438, 1257, 2407]) == 50', 'assert numberOfSubarrays([2770, 4057, 163, 3163, 1167, 2099, 1777, 3794, 3444, 1903, 4876, 4159, 1337, 635, 2357, 2378, 4584, 4127, 2887, 4915, 3183, 4088, 2921, 1848, 1589, 1175, 3664, 4063, 4956, 951, 4002, 1055, 459, 4451, 4760, 3493, 402, 4310, 1346, 1783, 155, 850, 1132, 4213, 1987, 3131, 4917, 2508, 877, 2307]) == 50', 'assert numberOfSubarrays([2781, 3966, 3226, 1049, 3522, 940, 538, 902, 35, 2235, 2081, 820, 2075, 3003, 1334, 2401, 1938, 2589, 399, 3051, 851, 1963, 285, 3133, 1705, 1932, 3766, 4144, 2332, 3741, 456, 4162, 2980, 2661, 1259, 4626, 3614, 2850, 2233, 4978, 1675, 3488, 3171, 866, 352, 514, 1997, 2476, 1051, 3605]) == 50', 'assert numberOfSubarrays([2832, 2509, 3731, 1768, 206, 3609, 2108, 981, 4335, 4330, 2196, 4290, 3151, 1465, 2129, 606, 808, 2023, 817, 1145, 4544, 1642, 1618, 3857, 4577, 1503, 3102, 481, 3756, 2142, 3379, 3659, 66, 4484, 4587, 555, 1549, 1501, 2369, 4817, 2615, 3521, 1211, 4065, 2436, 2673, 4866, 3035, 3069, 2724]) == 50', 'assert numberOfSubarrays([2843, 1610, 2884, 4772, 2484, 2140, 4227, 4436, 1883, 90, 1406, 1837, 1580, 3372, 119, 3859, 995, 2342, 1103, 1671, 45, 2402, 1531, 2533, 4033, 4823, 2008, 2366, 1344, 2742, 4781, 2219, 1739, 1794, 2158, 4887, 1481, 4060, 189, 807, 3033, 1176, 4950, 604, 1080, 1273, 1174, 4344, 4747, 249]) == 50', 'assert numberOfSubarrays([2895, 4331, 4011, 1346, 1384, 3407, 4580, 611, 4199, 2380, 1305, 4579, 2210, 2420, 4365, 26, 4977, 2179, 326, 4869, 4906, 1445, 2541, 2380, 1876, 1620, 646, 379, 4423, 4620, 1058, 3013, 655, 1424, 2096, 3833, 243, 2413, 3734, 4474, 4715, 4459, 3010, 2972, 4906, 780, 915, 4492, 4057, 20]) == 51', 'assert numberOfSubarrays([2926, 2399, 999, 261, 343, 3748, 957, 4771, 967, 4611, 4068, 721, 838, 3694, 1983, 4581, 3574, 3523, 3583, 269, 4278, 4855, 3592, 2514, 1825, 595, 350, 978, 4593, 450, 542, 4534, 218, 2909, 2030, 3904, 2962, 1383, 3979, 2105, 3114, 2227, 2616, 688, 1926, 604, 1050, 3184, 2439, 3320]) == 50', 'assert numberOfSubarrays([2956, 4971, 151, 335, 1609, 4126, 3116, 2995, 3162, 2202, 1553, 786, 1556, 1393, 250, 3242, 1418, 2595, 2334, 1061, 4016, 2096, 554, 4258, 1064, 3546, 1667, 4145, 4043, 1598, 151, 436, 2774, 3401, 2362, 3569, 4212, 964, 4928, 1870, 2932, 3292, 183, 2765, 4155, 3523, 459, 2785, 437, 1695]) == 50', 'assert numberOfSubarrays([2969, 2071, 3285, 4447, 1117, 3111, 109, 4891, 891, 4822, 3822, 2542, 1697, 2837, 3568, 3250, 3210, 1086, 4138, 3826, 126, 3599, 201, 4125, 4612, 2868, 1793, 514, 2326, 659, 1408, 1808, 692, 1482, 1177, 552, 1358, 1158, 728, 531, 527, 3590, 2644, 1017, 2412, 1681, 1194, 3637, 902, 2808]) == 50', 'assert numberOfSubarrays([3110, 3833, 4800, 1594, 2219, 507, 2516, 208, 1461, 2207, 328, 901, 787, 3544, 4077, 3076, 1129, 4696, 1504, 3996, 367, 1443, 2089, 4532, 682, 1093, 330, 3282, 3990, 2295, 4837, 1606, 601, 2220, 3817, 1710, 760, 4998, 3084, 1067, 4675, 929, 1050, 1219, 3648, 2772, 4938, 4632, 640, 3437]) == 50', 'assert numberOfSubarrays([3141, 1442, 542, 575, 486, 1407, 66, 532, 4089, 809, 251, 4466, 4999, 2755, 2106, 1639, 3844, 4343, 3712, 3385, 2613, 3692, 4397, 1331, 189, 2733, 4203, 2491, 3685, 1483, 311, 2994, 4385, 4916, 3767, 3013, 4882, 1195, 2957, 2418, 877, 4959, 1837, 292, 3535, 1577, 1132, 2322, 3403, 2752]) == 50', 'assert numberOfSubarrays([3228, 3161, 4594, 2770, 1915, 101, 694, 427, 1149, 1649, 2520, 1942, 2855, 2970, 1812, 3698, 389, 3003, 4391, 4927, 235, 4557, 4782, 212, 1124, 1610, 4490, 4538, 1188, 2737, 2824, 4015, 1305, 3468, 4444, 1608, 67, 159, 2244, 4259, 4847, 3710, 1432, 1127, 4751, 2739, 2561, 4685, 1358, 1553]) == 50', 'assert numberOfSubarrays([3260, 3288, 858, 2452, 1258, 3270, 1366, 4297, 1380, 4907, 2664, 455, 3159, 387, 4476, 2441, 1719, 3840, 2068, 714, 2980, 3113, 2312, 4124, 1586, 2956, 2955, 4585, 4831, 3164, 795, 1164, 4829, 1078, 2319, 3233, 3076, 4573, 2112, 2093, 319, 3105, 4027, 3981, 3869, 1452, 4086, 1679, 4248, 95]) == 50', 'assert numberOfSubarrays([3363, 2289, 227, 367, 995, 3614, 4966, 1431, 3444, 2708, 297, 2644, 2990, 4333, 4123, 1531, 898, 4564, 4163, 4932, 2130, 3260, 4712, 1303, 139, 2717, 1584, 3806, 3193, 4617, 4231, 1362, 3631, 1724, 1554, 810, 2352, 2746, 3864, 2212, 1958, 4994, 2742, 2603, 3291, 2217, 2041, 1054, 3419, 4082]) == 50', 'assert numberOfSubarrays([3406, 4144, 2407, 2388, 4726, 328, 200, 4790, 4376, 2542, 4066, 4455, 4511, 2699, 1590, 500, 2149, 781, 1336, 667, 1942, 1809, 1098, 4954, 4187, 2899, 2748, 3896, 352, 1167, 1675, 1281, 4654, 2543, 2019, 3151, 2368, 3655, 4712, 4014, 245, 830, 3585, 2997, 3009, 2032, 3775, 4254, 423, 2715]) == 50', 'assert numberOfSubarrays([3422, 2974, 320, 3133, 3017, 904, 2053, 425, 4087, 3707, 2489, 1992, 3779, 1130, 1632, 4164, 2290, 1745, 449, 3332, 1550, 3270, 3968, 1818, 2452, 2220, 4250, 1698, 4117, 831, 1479, 4524, 3716, 1273, 1031, 762, 2279, 1636, 3650, 2479, 800, 3000, 1535, 3843, 1960, 3990, 4360, 406, 2236, 433]) == 50', 'assert numberOfSubarrays([3453, 4103, 3732, 1100, 4593, 2578, 1247, 3899, 3751, 3601, 2669, 1492, 4491, 4687, 2826, 4431, 4418, 1924, 2096, 872, 4503, 4580, 812, 1472, 244, 930, 4156, 3028, 4275, 2568, 404, 2671, 2108, 2210, 4417, 2205, 935, 3074, 1807, 2928, 3444, 2706, 2211, 2988, 4658, 3336, 3827, 1055, 4167, 4251]) == 50', 'assert numberOfSubarrays([3477, 1902, 1086, 441, 2020, 1539, 3034, 1709, 2230, 877, 1426, 1246, 874, 3544, 2926, 3380, 4830, 256, 2331, 483, 3051, 3580, 2303, 2325, 829, 833, 599, 3903, 1273, 2447, 548, 4820, 4293, 1071, 898, 2397, 4533, 2472, 864, 670, 1852, 3814, 1247, 1556, 4869, 941, 3501, 302, 1209, 1616]) == 50', 'assert numberOfSubarrays([3510, 4722, 3884, 3113, 2134, 4932, 1666, 3741, 4974, 1117, 433, 1824, 1723, 3284, 3176, 4578, 4896, 788, 4640, 1065, 1114, 1221, 3261, 655, 1447, 1707, 3453, 1016, 962, 615, 3930, 3908, 3300, 883, 3602, 463, 4874, 1330, 2651, 864, 2621, 419, 1675, 4337, 4530, 4874, 1808, 4439, 4712, 2697]) == 51', 'assert numberOfSubarrays([3547, 974, 989, 1010, 4340, 881, 160, 4377, 2289, 2825, 985, 2427, 4576, 3615, 2124, 1502, 3623, 4527, 2766, 4069, 4000, 133, 4228, 2848, 2769, 3952, 2432, 3422, 2120, 1407, 695, 3453, 1678, 4900, 1543, 4006, 4746, 286, 150, 2496, 224, 640, 108, 2093, 1430, 212, 91, 2349, 4420, 4903]) == 50', 'assert numberOfSubarrays([3585, 167, 4423, 3499, 1537, 1990, 2406, 419, 3245, 330, 2625, 1446, 3394, 4108, 2006, 2061, 3030, 1458, 1260, 4669, 3817, 4279, 4336, 3532, 1658, 4186, 2284, 2827, 2008, 3107, 3254, 2115, 4783, 3644, 1935, 899, 3074, 1130, 2163, 4020, 3278, 4327, 3800, 1714, 1044, 1308, 4, 282, 4251, 3289]) == 50', 'assert numberOfSubarrays([3619, 3743, 1617, 3982, 4869, 4429, 995, 4451, 3826, 334, 4822, 3254, 1879, 4554, 2824, 1243, 976, 2722, 3842, 1791, 4363, 2265, 1080, 3890, 4974, 943, 3116, 4050, 4163, 4175, 902, 3448, 4580, 3615, 2801, 4436, 2367, 748, 973, 4167, 3424, 3460, 3420, 1368, 2300, 754, 2544, 2935, 2633, 756]) == 50', 'assert numberOfSubarrays([3697, 2601, 2205, 3576, 2466, 2619, 4420, 4472, 1751, 4984, 3353, 1076, 4387, 4957, 3510, 3095, 2260, 4069, 4021, 4413, 2141, 638, 2713, 4573, 1738, 1188, 4269, 1707, 4176, 1336, 887, 700, 1780, 1587, 4784, 3867, 2136, 2902, 2354, 115, 1790, 4495, 4617, 124, 4708, 1931, 636, 574, 1538, 1663]) == 50', 'assert numberOfSubarrays([3798, 2378, 1700, 1036, 1714, 3969, 9, 1451, 2901, 2557, 2106, 2663, 661, 763, 3154, 1662, 4342, 2483, 282, 3521, 4292, 336, 2732, 3057, 3214, 3165, 4435, 1941, 3384, 2480, 4606, 1038, 4814, 2572, 164, 1590, 2150, 286, 691, 3432, 2383, 1980, 413, 2923, 16, 193, 2169, 1137, 3628, 3364]) == 50', 'assert numberOfSubarrays([3830, 2319, 599, 2977, 4670, 3898, 334, 4754, 77, 1090, 2950, 3488, 221, 1195, 3828, 2530, 588, 2593, 4176, 607, 1818, 3627, 620, 431, 1778, 504, 4978, 3898, 2220, 2750, 1342, 4009, 423, 4202, 1506, 3861, 2439, 4229, 4902, 1358, 2488, 4664, 2898, 3515, 3619, 537, 957, 3693, 642, 1286]) == 50', 'assert numberOfSubarrays([3901, 3153, 4231, 3558, 2954, 3474, 577, 3852, 4175, 853, 4826, 4062, 1091, 2261, 343, 2092, 1480, 1251, 640, 3525, 4440, 1595, 3162, 227, 2331, 3239, 1176, 680, 58, 3128, 533, 2997, 821, 2349, 983, 1927, 2630, 1159, 3379, 25, 2452, 3598, 2322, 1106, 2143, 1831, 364, 86, 2334, 4042]) == 50', 'assert numberOfSubarrays([3986, 1364, 3402, 2798, 3545, 1899, 382, 2853, 2946, 4494, 3290, 1877, 3719, 743, 2865, 3493, 1408, 3036, 2454, 1175, 1, 187, 2511, 945, 3584, 4620, 1434, 3675, 2876, 139, 4142, 896, 4492, 2535, 324, 2341, 268, 4572, 4726, 3287, 1513, 844, 2650, 2901, 1220, 3900, 841, 3274, 667, 3215]) == 50', 'assert numberOfSubarrays([4018, 2991, 4954, 4477, 1655, 459, 4158, 483, 4793, 4213, 4987, 1948, 3045, 1038, 4652, 556, 43, 3628, 962, 1909, 3555, 2149, 3114, 1439, 2044, 3172, 677, 1938, 2635, 587, 2075, 4288, 4582, 1498, 4125, 1075, 4589, 810, 432, 216, 2665, 3931, 2430, 2969, 4230, 1484, 820, 4168, 2249, 3432]) == 50', 'assert numberOfSubarrays([4028, 3776, 545, 350, 2397, 1185, 4456, 1797, 4906, 1944, 3943, 3735, 2118, 1517, 686, 940, 2750, 281, 2362, 3566, 3209, 4072, 1755, 608, 2392, 2232, 111, 2932, 3628, 3692, 4963, 3197, 4431, 1118, 534, 1922, 419, 2689, 4174, 1842, 2991, 3790, 1411, 4623, 2178, 3400, 2682, 2037, 3454, 4761]) == 50', 'assert numberOfSubarrays([4045, 1122, 3153, 769, 2257, 4317, 1846, 2584, 4897, 1594, 1235, 3239, 3355, 4043, 1279, 2236, 1252, 247, 3758, 1416, 4654, 924, 635, 3144, 4517, 598, 3041, 2897, 2692, 2710, 1077, 2532, 4583, 3882, 4208, 1512, 1759, 2630, 2279, 771, 1303, 1938, 3821, 3313, 2675, 4348, 4665, 4421, 1177, 2035]) == 50', 'assert numberOfSubarrays([4047, 4430, 4338, 2339, 3791, 3990, 4118, 2738, 2621, 2999, 1280, 2144, 1758, 204, 3693, 1077, 3510, 1771, 2755, 1387, 1205, 3129, 4977, 2530, 3177, 2451, 3510, 1359, 2131, 2296, 1153, 4860, 69, 1080, 799, 4839, 4451, 1907, 4179, 3595, 2789, 4986, 2318, 520, 833, 3829, 2222, 251, 3478, 400]) == 50', 'assert numberOfSubarrays([4063, 3867, 4801, 4665, 3977, 4387, 3961, 181, 3752, 4285, 3528, 2659, 1193, 1033, 3198, 1550, 222, 4844, 4324, 2265, 3789, 1059, 4684, 3596, 4015, 778, 267, 1717, 812, 3404, 4426, 1012, 3937, 974, 1288, 4687, 3426, 722, 3068, 1092, 2711, 997, 3947, 1796, 3304, 2145, 717, 3397, 1300, 3993]) == 50', 'assert numberOfSubarrays([4090, 2097, 1194, 4877, 831, 939, 4362, 931, 2250, 3619, 1888, 4745, 2326, 1095, 2563, 1411, 4202, 2949, 2084, 3236, 3330, 2905, 285, 2372, 2189, 1178, 11, 2850, 1949, 4927, 4062, 2361, 4488, 1909, 1699, 2202, 840, 4829, 3791, 3418, 2398, 259, 4390, 451, 1619, 3151, 3725, 352, 3144, 4492]) == 50', 'assert numberOfSubarrays([4112, 4767, 4876, 2438, 198, 725, 1552, 2892, 3805, 3817, 3339, 3115, 520, 1666, 2005, 336, 1006, 2348, 4028, 1323, 3004, 4504, 1099, 128, 4481, 3965, 1610, 2796, 684, 4117, 3998, 3557, 2321, 3758, 456, 3508, 2753, 3786, 1096, 3881, 1379, 3921, 4069, 2702, 1267, 4336, 3778, 2842, 4846, 2648]) == 50', 'assert numberOfSubarrays([4167, 199, 4411, 3882, 4809, 4002, 4994, 1775, 2508, 2666, 4953, 4335, 358, 2550, 2436, 1710, 4128, 321, 3977, 376, 2308, 4588, 1810, 1574, 4546, 4517, 2216, 4614, 2335, 3457, 549, 1, 3980, 1376, 3678, 675, 197, 1474, 1328, 4228, 3510, 1866, 2334, 3116, 3485, 328, 4003, 3100, 3312, 1939]) == 50', 'assert numberOfSubarrays([4207, 3433, 2782, 3026, 1686, 3860, 4919, 330, 4596, 3058, 3293, 1488, 486, 3242, 4598, 1305, 3793, 4257, 4739, 1888, 3038, 522, 383, 3455, 2611, 4127, 1651, 1899, 721, 2871, 4215, 3058, 964, 3627, 3921, 1472, 2369, 4928, 3236, 4687, 4981, 144, 2498, 3584, 1893, 1487, 4865, 237, 1933, 4708]) == 50', 'assert numberOfSubarrays([4234, 3586, 2449, 2043, 4943, 2473, 3771, 1976, 3615, 539, 2173, 992, 4876, 2135, 1846, 3570, 3351, 2439, 2140, 2687, 3891, 760, 353, 3250, 2847, 3474, 3566, 607, 1587, 2605, 4492, 4469, 3701, 3562, 1426, 2941, 2950, 1614, 3360, 4049, 952, 3706, 2786, 3436, 2367, 4414, 1536, 3792, 1033, 3133]) == 50', 'assert numberOfSubarrays([4315, 4592, 2395, 692, 1640, 4306, 4423, 403, 2031, 2945, 3059, 4054, 1229, 3907, 3055, 2406, 1787, 2739, 1542, 2398, 3053, 1709, 2315, 4036, 487, 895, 3960, 1790, 4286, 3750, 883, 2647, 3594, 2806, 4338, 3491, 1191, 4130, 4536, 4900, 3391, 1783, 19, 2341, 4806, 130, 967, 422, 2665, 1054]) == 50', 'assert numberOfSubarrays([4344, 4934, 2479, 2238, 1075, 2423, 4979, 266, 3232, 2363, 437, 989, 2259, 4673, 3577, 2707, 2733, 1209, 4100, 1167, 2437, 4620, 689, 3256, 4699, 2197, 3461, 1766, 1911, 2184, 597, 2581, 3515, 1532, 974, 1452, 3815, 2859, 2583, 803, 4572, 2213, 2721, 656, 1962, 3235, 4375, 1447, 4581, 83]) == 50', 'assert numberOfSubarrays([4444, 2250, 4466, 4025, 2559, 2856, 4470, 3505, 2854, 4968, 4179, 1557, 4177, 3019, 1690, 3829, 4674, 382, 964, 3482, 2903, 1015, 1201, 3172, 2057, 4455, 875, 160, 2911, 3231, 2986, 2195, 4030, 4735, 3122, 3262, 2590, 2366, 3500, 4635, 4740, 4668, 430, 3263, 4498, 1960, 927, 4386, 1652, 3042]) == 50', 'assert numberOfSubarrays([4478, 4150, 2069, 1426, 2474, 3205, 1862, 4491, 1501, 2354, 514, 3992, 1363, 1752, 3547, 3270, 3742, 2783, 853, 4097, 1772, 1879, 4353, 4926, 4130, 3598, 4067, 1786, 115, 2045, 62, 3835, 3898, 4966, 1789, 2384, 4387, 4018, 3584, 2566, 3438, 4661, 4517, 4130, 2979, 13, 3257, 962, 973, 1532]) == 50', 'assert numberOfSubarrays([4586, 3782, 1117, 2968, 4160, 986, 3017, 3398, 4891, 3268, 46, 1859, 3745, 3118, 1165, 1232, 4640, 1147, 4689, 2418, 3061, 3105, 3900, 4071, 3103, 2033, 3777, 990, 4419, 1658, 4489, 2736, 2787, 3690, 4257, 4025, 3443, 1890, 3150, 4156, 1028, 2285, 3892, 4777, 1563, 2044, 423, 2878, 4890, 1938]) == 50', 'assert numberOfSubarrays([4617, 1192, 2461, 4886, 4588, 2466, 4861, 4750, 4642, 1905, 4368, 3757, 3578, 1562, 3405, 4928, 2112, 4470, 1876, 1084, 3136, 3311, 783, 1185, 1899, 3411, 3160, 1654, 4397, 3015, 1834, 662, 3472, 2805, 2896, 4079, 4301, 3433, 4030, 4301, 4924, 3918, 4338, 3394, 3968, 2135, 4794, 4204, 4748, 1225]) == 51', 'assert numberOfSubarrays([4665, 2763, 4846, 2863, 2793, 987, 995, 206, 2121, 1166, 857, 3220, 76, 2855, 1847, 3391, 1694, 4960, 495, 2413, 3455, 2225, 3148, 4266, 2305, 3943, 2442, 1018, 2241, 4610, 4377, 713, 4, 4739, 4234, 1731, 3708, 3505, 4114, 1394, 4916, 3931, 2660, 1185, 3542, 1786, 483, 4208, 1911, 3875]) == 50', 'assert numberOfSubarrays([4736, 3803, 3197, 311, 3447, 3594, 1451, 2098, 85, 3892, 574, 4951, 2258, 559, 2633, 2957, 4334, 2479, 2437, 4028, 82, 1783, 1407, 3589, 2004, 33, 2386, 2202, 2793, 603, 4244, 4592, 619, 1844, 440, 1482, 1147, 1609, 278, 3688, 4035, 1223, 2962, 1258, 218, 4561, 4248, 2069, 3490, 2806]) == 50', 'assert numberOfSubarrays([4790, 4490, 377, 423, 4080, 4363, 2383, 2552, 759, 1546, 3744, 3482, 1347, 4913, 1511, 4869, 2638, 19, 4164, 1424, 3317, 425, 1820, 1922, 529, 3894, 2305, 3345, 1652, 1764, 1023, 1874, 4288, 35, 1264, 4355, 3466, 4371, 2439, 2373, 265, 2022, 3031, 4974, 4342, 4902, 3012, 3250, 4530, 4977]) == 50', 'assert numberOfSubarrays([4793, 3345, 3755, 4140, 1324, 1867, 3670, 4026, 4673, 3463, 4832, 3615, 3273, 3214, 3134, 4135, 3310, 3881, 1958, 663, 4659, 3385, 717, 4982, 435, 1335, 791, 706, 3243, 1962, 2223, 2947, 3026, 3219, 4956, 1602, 3793, 4591, 2999, 4824, 128, 3026, 2686, 1891, 2261, 699, 3930, 628, 2796, 2141]) == 50', 'assert numberOfSubarrays([4810, 542, 4073, 2944, 2796, 3535, 3235, 827, 4608, 3529, 2770, 3845, 1981, 3760, 3342, 2229, 3178, 688, 2407, 4479, 251, 842, 672, 4696, 2713, 3762, 4116, 3377, 309, 818, 1992, 3323, 4823, 4257, 3413, 2329, 1454, 1449, 2654, 3322, 4767, 3937, 2243, 3421, 4676, 1980, 790, 1926, 3717, 4149]) == 50', 'assert numberOfSubarrays([4856, 967, 1426, 3958, 2836, 962, 2092, 437, 4779, 4037, 2475, 2652, 3446, 1947, 591, 730, 3098, 3766, 3265, 29, 3553, 849, 3037, 4774, 3189, 3736, 4515, 4771, 56, 4066, 2150, 4599, 1612, 2474, 3790, 2978, 2805, 3074, 1825, 1306, 3671, 704, 2149, 1075, 3686, 1386, 3796, 973, 756, 4946]) == 50', 'assert numberOfSubarrays([4871, 3372, 4307, 3812, 1664, 94, 167, 4953, 2641, 2940, 1593, 3487, 2642, 4598, 4729, 4137, 173, 729, 102, 2280, 3741, 2376, 50, 3713, 2748, 3309, 3104, 3026, 4245, 211, 4209, 4194, 4444, 1064, 2100, 4837, 1251, 1044, 1353, 2988, 4783, 3872, 3510, 2860, 4963, 1894, 1508, 993, 2731, 4233]) == 50', 'assert numberOfSubarrays([4879, 980, 224, 4524, 1236, 2155, 3380, 432, 718, 1430, 286, 4160, 154, 752, 541, 1804, 3239, 567, 1033, 3278, 4979, 2185, 4495, 1765, 2539, 2609, 1689, 4521, 1459, 4582, 719, 630, 4459, 1373, 278, 3302, 504, 1848, 2694, 631, 4830, 2342, 471, 173, 1300, 636, 2581, 3959, 33, 1489]) == 50', 'assert numberOfSubarrays([4942, 1452, 1671, 2466, 3270, 4209, 4757, 1457, 1646, 3848, 4144, 979, 546, 528, 2682, 334, 862, 1734, 2809, 1397, 1195, 2716, 2153, 2889, 2615, 1910, 4494, 904, 1379, 3318, 891, 4905, 664, 416, 915, 20, 1689, 4168, 3797, 3540, 4103, 4264, 3351, 3635, 2607, 1441, 4090, 2647, 155, 1965]) == 50', 'assert numberOfSubarrays([4951, 1712, 4734, 878, 3237, 1287, 4787, 1314, 168, 1612, 93, 4662, 4242, 3712, 2357, 2882, 108, 196, 1424, 2495, 4568, 1676, 747, 1720, 3326, 390, 3088, 2294, 4089, 3576, 4367, 1319, 4280, 1385, 3514, 3864, 283, 678, 4645, 352, 1715, 4287, 3341, 2932, 3266, 2184, 1337, 3834, 249, 1901]) == 50', 'assert numberOfSubarrays([4995, 4999, 4996, 4995, 4999, 4996, 4995, 4996, 4995, 5000, 4997, 4996, 5000, 4998, 4997, 4995, 4999, 5000, 4998, 4998, 4996, 4998, 4997, 5000, 4996, 5000, 4996, 4995, 5000, 4995, 4995, 5000, 4997, 4995, 4996, 4997, 4995, 4995, 4995, 4995, 4999, 5000, 4996, 4997, 4996, 4995, 4999, 4995, 5000, 4999, 4996, 4996, 4995, 4996, 4995, 4995, 4998, 4996, 4996, 4997, 4999, 4998, 4998, 4999, 4997, 4995, 5000, 4997, 4995, 4999, 4998, 4996, 4999, 4997, 4997, 4995, 4995, 4998, 4995, 4999, 4998, 5000, 4997, 5000, 4996, 5000, 4997, 4997, 4996, 4997, 4996, 4998, 4995, 4997, 4997, 4997, 4999, 4997, 4998, 4997]) == 211', 'assert numberOfSubarrays([4995, 4999, 4999, 5000, 4997, 4997, 4996, 4995, 4998, 4996, 4997, 4995, 4996, 5000, 5000, 4995, 4995, 4997, 4997, 4996, 4995, 4996, 4998, 4996, 5000, 4996, 4996, 5000, 4996, 4995, 4995, 5000, 4996, 4997, 4996, 4997, 4995, 4996, 4997, 4999, 5000, 4996, 4998, 5000, 5000, 4998, 4999, 4995, 5000, 4998, 4995, 4999, 4998, 4997, 4997, 4995, 4997, 4998, 4997, 4995, 4998, 5000, 4997, 4999, 4995, 4996, 5000, 4995, 5000, 4999, 5000, 4998, 4998, 4996, 4998, 4998, 4998, 4997, 5000, 4998, 4998, 5000, 4997, 4996, 5000, 5000, 4995, 4996, 4998, 4998, 4995, 4996, 4997, 4998, 5000, 4999, 5000, 5000, 4997, 5000]) == 361', 'assert numberOfSubarrays([4996, 4996, 4997, 4995, 5000, 4996, 4996, 5000, 5000, 4998, 4998, 4998, 4998, 4995, 4995, 4999, 4997, 4999, 4995, 5000, 5000, 4998, 4996, 4996, 4998, 4998, 4999, 4996, 4999, 5000, 5000, 4995, 4998, 4999, 5000, 4998, 4999, 4997, 4997, 4997, 4999, 4996, 5000, 5000, 4996, 4996, 5000, 4997, 4996, 4995, 4997, 4997, 4995, 4998, 4995, 4997, 4999, 4997, 5000, 4995, 4996, 4999, 4995, 5000, 4999, 5000, 4996, 4999, 4999, 4998, 4999, 4997, 4996, 4995, 4995, 4995, 4998, 4997, 4996, 4997, 4997, 4995, 4997, 4996, 4998, 4996, 4999, 4998, 4995, 4997, 4999, 4999, 5000, 4997, 4998, 5000, 4995, 4997, 4995, 4998]) == 268', 'assert numberOfSubarrays([4996, 4997, 4996, 5000, 4997, 4999, 4999, 4997, 4998, 4996, 4995, 4998, 4998, 4998, 4997, 4996, 4999, 5000, 4996, 4995, 5000, 4997, 4996, 4997, 4998, 4997, 4996, 4995, 4997, 4999, 5000, 4997, 4999, 5000, 4998, 4999, 5000, 4996, 4995, 5000, 5000, 4995, 5000, 5000, 5000, 4995, 4996, 4995, 4999, 4998, 4996, 4997, 4997, 4999, 4998, 4998, 4995, 4996, 4998, 4995, 5000, 4996, 4999, 4996, 5000, 4999, 4997, 5000, 4995, 4998, 4999, 5000, 4998, 4998, 4996, 4997, 5000, 4998, 4995, 4997, 4999, 4995, 4999, 4995, 4998, 4999, 5000, 5000, 4998, 4997, 4998, 4995, 4995, 4996, 4998, 4999, 4997, 4999, 4996, 4999]) == 280', 'assert numberOfSubarrays([4997, 4995, 5000, 4997, 4998, 5000, 4998, 4997, 4995, 4996, 4995, 4996, 4999, 4996, 4998, 4998, 4996, 4998, 4999, 4997, 4999, 5000, 5000, 4997, 4996, 4996, 5000, 5000, 4995, 4996, 5000, 4997, 4996, 5000, 4999, 5000, 4999, 4998, 4996, 4998, 4997, 4997, 5000, 5000, 4998, 4998, 4999, 4999, 4995, 4995, 4995, 4999, 4996, 4999, 4995, 4999, 4997, 4999, 4998, 4997, 4995, 4995, 4995, 4995, 5000, 4995, 5000, 4998, 4995, 4999, 5000, 4996, 4996, 4999, 4996, 4996, 4997, 4999, 4996, 5000, 5000, 4995, 4995, 4998, 4995, 4997, 4997, 4997, 5000, 4996, 5000, 4997, 4996, 4998, 4997, 4999, 4995, 4999, 4995, 4998]) == 296', 'assert numberOfSubarrays([4997, 4997, 4999, 4996, 4997, 4997, 5000, 4999, 4998, 4998, 5000, 4995, 4998, 4995, 4997, 4998, 4998, 4997, 4998, 5000, 5000, 4997, 5000, 4996, 5000, 4995, 5000, 4998, 4997, 4998, 4998, 4997, 4997, 4999, 4999, 4999, 4995, 4999, 4996, 4998, 4997, 4998, 4997, 4999, 4995, 4998, 4999, 4999, 4996, 4999, 4997, 4995, 4995, 4999, 5000, 4999, 4998, 4998, 4996, 4997, 5000, 4996, 4999, 5000, 4995, 4996, 4997, 4996, 4999, 5000, 4997, 4996, 4997, 4997, 4996, 4998, 4995, 4995, 4996, 5000, 4999, 4997, 4997, 4995, 4997, 4995, 4996, 5000, 4996, 4997, 4999, 4996, 4996, 4996, 4995, 4999, 4996, 4998, 4998, 5000]) == 255', 'assert numberOfSubarrays([4998, 4997, 4997, 4996, 4999, 4997, 5000, 4996, 4999, 4999, 4997, 4997, 4996, 4995, 4998, 4995, 4995, 5000, 4999, 4995, 4996, 4998, 5000, 4999, 4997, 4996, 5000, 4998, 4999, 5000, 5000, 4998, 4999, 4995, 4999, 4998, 4996, 4997, 4995, 4995, 4998, 4997, 5000, 4995, 5000, 5000, 4999, 4998, 4995, 4998, 4999, 5000, 4999, 4997, 5000, 4999, 4999, 5000, 5000, 4995, 4999, 4995, 4999, 5000, 4996, 4997, 4996, 5000, 4998, 4995, 4999, 5000, 5000, 4996, 4996, 5000, 4996, 4995, 4998, 4999, 4999, 4999, 4997, 4995, 4998, 5000, 4999, 4999, 5000, 5000, 5000, 4995, 4998, 4999, 4997, 4998, 4999, 4996, 4997, 4996]) == 348', 'assert numberOfSubarrays([4998, 4997, 4999, 4999, 4998, 4998, 4995, 4995, 4996, 4995, 4996, 4996, 5000, 4997, 4998, 4999, 4995, 4996, 4997, 4995, 4998, 4999, 4996, 5000, 4999, 4999, 5000, 4998, 4999, 4995, 4996, 5000, 4996, 4995, 4998, 4998, 5000, 4997, 5000, 4995, 4997, 5000, 4995, 4998, 4996, 4997, 4997, 4996, 4997, 4996, 5000, 4998, 4995, 5000, 4995, 4997, 4997, 4996, 4998, 4996, 4996, 4997, 4997, 4999, 4995, 4996, 4995, 4997, 4997, 4995, 4996, 4997, 4997, 4997, 4997, 5000, 4999, 4996, 4997, 4996, 4996, 5000, 4999, 5000, 4999, 4996, 4998, 4997, 4995, 4996, 4999, 4996, 4997, 4998, 4996, 4997, 4998, 4995, 4997, 4999]) == 201', 'assert numberOfSubarrays([4998, 4997, 5000, 4997, 5000, 4999, 4996, 4995, 4997, 4995, 4996, 4996, 4995, 5000, 4996, 4996, 4999, 4997, 4998, 4999, 4995, 4997, 4996, 4997, 4997, 4997, 5000, 4999, 4997, 4998, 4998, 4997, 4999, 5000, 4996, 4998, 5000, 4999, 4998, 4995, 4999, 4995, 4995, 4995, 4999, 4996, 4995, 4996, 4998, 4998, 4998, 4998, 4997, 4996, 4999, 4998, 4997, 4996, 4999, 4995, 4999, 4998, 4995, 4999, 5000, 4998, 4998, 4999, 5000, 4999, 4999, 4997, 4995, 4999, 4997, 4999, 4997, 4999, 4998, 4996, 4995, 4999, 4998, 4997, 4997, 4995, 4995, 5000, 4998, 4998, 4996, 4996, 5000, 4997, 4998, 4999, 4996, 5000, 4999, 4997]) == 217', 'assert numberOfSubarrays([4998, 4998, 4997, 4996, 4999, 4999, 4996, 4997, 4995, 4995, 4996, 4998, 4996, 4997, 5000, 4997, 4997, 4999, 4998, 4996, 4998, 4997, 5000, 4997, 4997, 4996, 4998, 4995, 4996, 4999, 4999, 4997, 4997, 4996, 4999, 4996, 4995, 4995, 4998, 4999, 4999, 4999, 5000, 4995, 4999, 4997, 4995, 4999, 4997, 4999, 4995, 4997, 4996, 4998, 4999, 4996, 4997, 4996, 4997, 4995, 4996, 4995, 4999, 5000, 4998, 5000, 4996, 4997, 4999, 4999, 4996, 4996, 4997, 4997, 4999, 4998, 5000, 4998, 4998, 4996, 4995, 5000, 4999, 4995, 4999, 4998, 4996, 5000, 4997, 4998, 4995, 4998, 5000, 4997, 4999, 4995, 4999, 4997, 4995, 4996]) == 179', 'assert numberOfSubarrays([4999, 4995, 4995, 4995, 4999, 5000, 4996, 4998, 4998, 4996, 4997, 4999, 4998, 4998, 4996, 4999, 4996, 4996, 4995, 4995, 4997, 4999, 4996, 5000, 4996, 4996, 4996, 4997, 4996, 4995, 4995, 4997, 4998, 5000, 4998, 4995, 4999, 4998, 5000, 4995, 4999, 5000, 4998, 5000, 4996, 4996, 4999, 4998, 4998, 4999, 4995, 4996, 5000, 4997, 4998, 4996, 4995, 4999, 5000, 4995, 4998, 5000, 4997, 4999, 4999, 4997, 4997, 4999, 5000, 4999, 4999, 4999, 4996, 4995, 4995, 4999, 4998, 4996, 5000, 4996, 4997, 4995, 4998, 4999, 5000, 4995, 4997, 4996, 5000, 5000, 5000, 5000, 4997, 4998, 4995, 4996, 4997, 4999, 4999, 4995]) == 251', 'assert numberOfSubarrays([4999, 4995, 5000, 4998, 4999, 4997, 4997, 4998, 5000, 4997, 4995, 4997, 5000, 4996, 4997, 5000, 4996, 4999, 4995, 4995, 4995, 4997, 4998, 4997, 4996, 4997, 5000, 4997, 4995, 4997, 4999, 4998, 4999, 5000, 4997, 4999, 4997, 4999, 4996, 4995, 4998, 4995, 4996, 4998, 5000, 4998, 4997, 4998, 4995, 5000, 4996, 4998, 4996, 4998, 4999, 5000, 4998, 4996, 5000, 4995, 4995, 4998, 5000, 4997, 4998, 4997, 4998, 4998, 4995, 4996, 4998, 4997, 4999, 4997, 4995, 4997, 5000, 4997, 4998, 5000, 4997, 4997, 4999, 4999, 4999, 4997, 4998, 4995, 4999, 4996, 4997, 4999, 4999, 4999, 4995, 4997, 4996, 4998, 4997, 5000]) == 233', 'assert numberOfSubarrays([4999, 4996, 5000, 4998, 4998, 5000, 4995, 4997, 4997, 4998, 4999, 5000, 4996, 4996, 4996, 4997, 4995, 4996, 4995, 5000, 4999, 4999, 4998, 4999, 4997, 4996, 4996, 4999, 4996, 4996, 4995, 4996, 4995, 4998, 5000, 4998, 4996, 4996, 4997, 4996, 4995, 4995, 4997, 4999, 5000, 4998, 4995, 4998, 5000, 4999, 5000, 4996, 4998, 5000, 4999, 4996, 4998, 4995, 4998, 4999, 4999, 4996, 4998, 4995, 4996, 4996, 4996, 4997, 4998, 4996, 4997, 4997, 4996, 4997, 5000, 4995, 4995, 4996, 4996, 4996, 4996, 5000, 4996, 4996, 4995, 4995, 5000, 4995, 4998, 4999, 4996, 4995, 4999, 4998, 4998, 4995, 4995, 4997, 4998, 4997]) == 210', 'assert numberOfSubarrays([5000, 4995, 5000, 4997, 4998, 4996, 4997, 5000, 4996, 4999, 4995, 4995, 4997, 4999, 4998, 4996, 5000, 4997, 4995, 5000, 4999, 4999, 4998, 5000, 5000, 4995, 4997, 4999, 5000, 4997, 4998, 4997, 5000, 4998, 4996, 4998, 4996, 4998, 5000, 4997, 4998, 5000, 4995, 4996, 4998, 4996, 5000, 4999, 4996, 4997, 4996, 4999, 4998, 4997, 4995, 4999, 4996, 4999, 4996, 4995, 5000, 4997, 5000, 4999, 4999, 4996, 4999, 5000, 4999, 4995, 5000, 4997, 4997, 4998, 5000, 4995, 4998, 5000, 4999, 4998, 4999, 4995, 4997, 4997, 5000, 5000, 4999, 5000, 4998, 4995, 4999, 4998, 5000, 4999, 5000, 4999, 4996, 4999, 5000, 4997]) == 395', 'assert numberOfSubarrays([5000, 4997, 4995, 4998, 4996, 4996, 4997, 4999, 4996, 4995, 4995, 4996, 5000, 5000, 4995, 4995, 5000, 5000, 4996, 4999, 4996, 4995, 4998, 4999, 5000, 4995, 5000, 4996, 4999, 4995, 4997, 4998, 4997, 4999, 4998, 4999, 4999, 4998, 4995, 4997, 4995, 4996, 4998, 4999, 4998, 4996, 4998, 4998, 4996, 4997, 4995, 5000, 4996, 4999, 4996, 4999, 5000, 4999, 4995, 4995, 4999, 4998, 4997, 4995, 4998, 5000, 4998, 4997, 4997, 4995, 4995, 4997, 4996, 4995, 4999, 5000, 4997, 4996, 4999, 4999, 4998, 5000, 4997, 4998, 4996, 4996, 4995, 4996, 4997, 4996, 4999, 4998, 4996, 5000, 4996, 4997, 4995, 4995, 4996, 4995]) == 210', 'assert numberOfSubarraysassert numberOfSubarraysassert numberOfSubarraysassert numberOfSubarraysassert numberOfSubarraysassert numberOfSubarraysassert numberOfSubarraysassert numberOfSubarraysassert numberOfSubarraysassert numberOfSubarraysassert numberOfSubarrays([10003, 10002, 10006, 10003, 10008, 10007, 10001, 10004, 10007, 10008, 10000, 10004, 10002, 10006, 10007, 10005, 10009, 10005, 10004, 10007, 10004, 10001, 10000, 10005, 10008, 10007, 10008, 10000, 10008, 10008, 10010, 10010, 10005, 10005, 10010, 10003, 10001, 10004, 10002, 10008, 10006, 10003, 10001, 10001, 10007, 10004, 10000, 10006, 10010, 10001, 10010, 10008, 10003, 10002, 10005, 10010, 10001, 10002, 10007, 10002, 10001, 10007, 10005, 10005, 10007, 10007, 10009, 10006, 10008, 10006, 10007, 10009, 10004, 10004, 10005, 10008, 10005, 10009, 10002, 10001, 10003, 10009, 10007, 10010, 10005, 10000, 10007, 10008, 10006, 10004, 10004, 10010, 10008, 10002, 10000, 10007, 10009, 10001, 10010, 10004, 10010, 10007, 10006, 10009, 10005, 10009, 10001, 10001, 10006, 10008, 10004, 10004, 10007, 10007, 10009, 10008, 10007, 10002, 10010, 10003, 10007, 10001, 10002, 10005, 10009, 10004, 10008, 10000, 10006, 10006, 10009, 10008, 10003, 10002, 10001, 10007, 10002, 10001, 10005, 10001, 10001, 10009, 10008, 10006, 10002, 10004, 10006, 10008, 10003, 10010, 10008, 10005, 10003, 10003, 10009, 10002, 10002, 10004, 10004, 10003, 10006, 10006, 10001, 10004, 10009, 10008, 10001, 10001, 10007, 10008, 10002, 10008, 10010, 10010, 10005, 10003, 10002, 10003, 10010, 10009, 10006, 10008, 10009, 10008, 10007, 10001, 10006, 10000, 10008, 10008, 10007, 10003, 10009, 10002, 10007, 10006, 10003, 10008, 10007, 10001, 10000, 10006, 10000, 10008, 10010, 10005, 10005, 10002, 10006, 10000, 10005, 10004, 10001, 10006, 10010, 10009, 10003, 10001, 10010, 10007, 10005, 10003, 10002, 10006, 10005, 10001, 10009, 10008, 10002, 10006, 10006, 10000, 10005, 10000, 10004, 10009, 10001, 10000, 10003, 10010, 10006, 10006, 10006, 10005, 10004, 10003, 10001, 10002, 10003, 10000, 10008, 10001, 10002, 10010, 10002, 10002, 10002, 10000, 10005, 10007, 10008, 10004, 10004, 10002, 10007, 10004, 10000, 10002, 10000, 10009, 10005, 10000, 10002, 10009, 10006, 10002, 10001, 10003, 10003, 10005, 10006, 10000, 10008, 10004, 10001, 10007, 10008, 10010, 10005, 10004, 10005, 10008, 10010, 10007, 10002, 10000, 10007, 10004, 10007, 10010, 10001, 10009, 10009, 10005, 10001, 10004, 10002, 10001, 10006, 10002, 10005, 10004, 10001, 10001, 10008, 10009, 10006, 10010, 10007, 10008, 10005, 10003, 10001, 10008, 10009, 10002, 10007, 10010, 10008, 10008, 10005, 10003, 10006, 10000, 10001, 10002, 10000, 10005, 10009, 10006, 10001, 10000, 10003, 10008, 10003, 10003, 10005, 10008, 10003, 10010, 10006, 10005, 10008, 10003, 10009, 10006, 10005, 10003, 10001, 10009, 10004, 10002, 10009, 10002, 10010, 10000, 10005, 10003, 10003, 10008, 10008, 10003, 10004, 10003, 10007, 10007, 10006, 10005, 10005, 10008, 10001, 10000, 10003, 10004, 10005, 10000, 10003, 10007, 10005, 10005, 10001, 10008, 10004, 10010, 10008, 10003, 10005, 10006, 10003, 10009, 10010, 10001, 10005, 10004, 10005, 10005, 10000, 10007, 10001, 10006, 10005, 10004, 10007, 10002, 10003, 10009, 10008, 10009, 10010, 10006, 10009, 10000, 10003, 10000, 10010, 10006, 10010, 10004, 10004, 10004, 10004, 10000, 10004, 10004, 10006, 10007, 10010, 10009, 10006, 10000, 10000, 10009, 10009, 10003, 10006, 10009, 10004, 10009, 10000, 10008, 10000, 10005, 10007, 10000, 10008, 10005, 10008, 10007, 10003, 10000, 10009, 10000, 10004, 10008, 10007, 10008, 10004, 10000, 10001, 10009, 10010, 10003, 10000, 10006, 10002, 10006, 10003, 10002, 10007, 10000, 10002, 10002, 10010, 10000, 10007, 10005, 10005, 10003, 10007, 10005, 10002, 10005, 10010, 10003, 10006, 10009, 10009, 10002, 10000, 10007, 10008, 10003, 10008, 10005, 10004, 10002, 10009, 10004, 10010, 10006, 10009, 10002, 10004, 10007, 10008, 10010, 10006, 10007, 10006, 10005, 10003, 10007, 10010, 10003, 10009, 10005, 10006, 10001, 10006, 10000, 10001, 10000, 10002, 10006, 10004, 10010, 10002, 10007, 10008, 10001, 10008, 10006, 10009, 10003, 10003, 10005, 10001, 10007, 10001, 10005, 10005, 10006, 10005, 10010, 10003, 10004, 10006, 10008, 10000, 10004, 10001, 10002, 10007, 10009, 10006, 10004, 10004, 10004, 10007, 10010, 10000, 10008, 10006, 10002, 10007, 10001, 10010, 10008, 10006, 10004, 10009, 10005, 10007, 10007, 10009, 10005, 10004, 10000, 10005, 10009, 10005, 10001, 10000, 10010, 10009, 10002, 10004, 10005, 10006, 10003, 10001, 10000, 10008, 10010, 10002, 10007, 10008, 10004, 10002, 10006, 10001, 10006, 10008, 10001, 10004, 10007, 10000, 10000, 10006, 10002, 10008, 10002, 10008, 10002, 10003, 10001, 10003, 10003, 10007, 10010, 10008, 10001, 10009, 10006, 10001, 10000, 10001, 10004, 10008, 10007, 10000, 10007, 10003, 10003, 10003, 10003, 10002, 10008, 10010, 10010, 10004, 10004, 10008, 10006, 10002, 10003, 10005, 10005, 10003, 10008, 10006, 10002, 10004, 10009, 10001, 10004, 10009, 10008, 10010, 10001, 10004, 10002, 10005, 10004, 10003, 10009, 10010, 10005, 10006, 10006, 10010, 10002, 10004, 10007, 10001, 10004, 10005, 10008, 10003, 10009, 10000, 10002, 10002, 10001, 10008, 10008, 10001, 10007, 10006, 10004, 10001, 10000, 10001, 10005, 10002, 10009, 10008, 10004, 10010, 10004, 10010, 10001, 10002, 10008, 10008, 10003, 10010, 10009, 10006, 10003, 10005, 10007, 10001, 10009, 10008, 10000, 10003, 10010, 10006, 10003, 10000, 10002, 10004, 10005, 10009, 10002, 10003, 10000, 10008, 10010, 10006, 10007, 10008, 10004, 10010, 10009, 10002, 10002, 10000, 10007, 10003, 10004, 10000, 10003, 10004, 10002, 10000, 10002, 10005, 10010, 10010, 10009, 10009, 10009, 10005, 10005, 10000, 10001, 10001, 10006, 10009, 10006, 10010, 10000, 10000, 10000, 10008, 10003, 10003, 10008, 10001, 10000, 10008, 10005, 10010, 10009, 10002, 10001, 10003, 10002, 10009, 10000, 10005, 10003, 10000, 10004, 10002, 10000, 10009, 10004, 10009, 10004, 10001, 10006, 10000, 10002, 10003, 10009, 10007, 10007, 10003, 10004, 10005, 10008, 10010, 10010, 10008, 10004, 10002, 10006, 10004, 10001, 10001, 10002, 10006, 10007, 10001, 10009, 10002, 10002, 10010, 10000, 10001, 10001, 10005, 10010, 10009, 10008, 10007, 10006, 10007, 10009, 10008, 10006, 10002, 10010, 10009, 10005, 10000, 10000, 10007, 10001, 10008, 10000, 10002, 10000, 10000, 10000, 10007, 10007, 10000, 10002, 10000, 10008, 10004, 10003, 10010, 10010, 10004, 10001, 10001, 10001, 10004, 10002, 10000, 10004, 10000, 10003, 10007, 10004, 10008, 10010, 10001, 10003, 10007, 10000, 10004, 10003, 10008, 10000, 10003, 10009, 10007, 10010, 10005, 10009, 10008, 10001, 10007, 10006, 10004, 10003, 10008, 10003, 10000, 10008, 10010, 10003, 10007, 10004, 10006, 10002, 10001, 10007, 10010, 10003, 10008, 10005, 10006, 10008, 10005, 10000, 10009, 10001, 10008, 10005, 10000, 10007, 10002, 10006, 10009, 10003, 10005, 10007, 10009, 10002, 10000, 10006, 10002, 10000, 10010, 10009, 10004, 10009, 10001, 10007, 10008, 10005, 10007, 10002, 10004, 10000, 10001, 10004, 10003, 10003, 10003, 10010, 10003, 10009, 10000, 10003, 10009, 10000, 10005, 10009, 10008, 10004, 10008, 10002, 10007, 10009, 10001, 10008, 10005, 10008, 10001, 10009, 10009, 10002, 10001, 10003, 10008, 10010, 10007, 10000, 10003, 10001, 10008, 10009, 10006, 10002, 10005, 10004, 10004, 10008, 10008, 10008, 10000, 10008]) == 4056', 'assert numberOfSubarrays([10003, 10009, 10004, 10009, 10009, 10007, 10002, 10001, 10002, 10010, 10000, 10002, 10004, 10000, 10007, 10010, 10005, 10004, 10006, 10000, 10003, 10007, 10006, 10007, 10010, 10006, 10007, 10010, 10005, 10000, 10010, 10006, 10006, 10004, 10002, 10000, 10005, 10006, 10007, 10006, 10010, 10003, 10003, 10007, 10007, 10006, 10003, 10010, 10006, 10006, 10004, 10004, 10009, 10004, 10009, 10001, 10004, 10003, 10000, 10008, 10003, 10006, 10009, 10009, 10005, 10005, 10000, 10003, 10008, 10002, 10003, 10005, 10001, 10000, 10008, 10006, 10009, 10004, 10000, 10000, 10008, 10007, 10004, 10002, 10008, 10005, 10009, 10005, 10001, 10010, 10005, 10004, 10010, 10001, 10003, 10010, 10010, 10002, 10009, 10004, 10001, 10002, 10004, 10009, 10007, 10001, 10001, 10007, 10007, 10008, 10009, 10007, 10008, 10008, 10007, 10003, 10009, 10003, 10005, 10006, 10003, 10007, 10007, 10010, 10007, 10009, 10001, 10010, 10006, 10003, 10005, 10002, 10003, 10007, 10002, 10004, 10001, 10002, 10002, 10009, 10005, 10002, 10008, 10008, 10006, 10001, 10002, 10000, 10006, 10000, 10007, 10007, 10001, 10000, 10004, 10006, 10008, 10008, 10009, 10007, 10004, 10001, 10007, 10009, 10004, 10002, 10006, 10004, 10007, 10002, 10010, 10002, 10000, 10005, 10004, 10005, 10010, 10008, 10003, 10004, 10002, 10004, 10001, 10003, 10006, 10006, 10008, 10001, 10007, 10001, 10002, 10002, 10006, 10008, 10007, 10010, 10009, 10005, 10006, 10008, 10006, 10006, 10005, 10003, 10003, 10010, 10007, 10010, 10010, 10003, 10002, 10000, 10010, 10007, 10005, 10001, 10007, 10003, 10009, 10003, 10003, 10002, 10009, 10002, 10005, 10006, 10000, 10006, 10000, 10004, 10006, 10003, 10001, 10010, 10009, 10006, 10007, 10002, 10007, 10001, 10003, 10007, 10010, 10005, 10002, 10009, 10010, 10008, 10001, 10004, 10001, 10006, 10010, 10004, 10005, 10001, 10002, 10006, 10002, 10001, 10004, 10010, 10006, 10008, 10005, 10005, 10001, 10009, 10008, 10000, 10001, 10008, 10006, 10009, 10003, 10004, 10008, 10005, 10006, 10009, 10010, 10002, 10006, 10010, 10002, 10004, 10009, 10008, 10002, 10010, 10005, 10001, 10004, 10009, 10005, 10004, 10003, 10001, 10003, 10009, 10008, 10000, 10000, 10009, 10003, 10000, 10007, 10010, 10005, 10005, 10004, 10000, 10008, 10003, 10008, 10007, 10001, 10006, 10008, 10005, 10007, 10006, 10008, 10008, 10009, 10010, 10006, 10001, 10001, 10004, 10001, 10007, 10004, 10002, 10000, 10005, 10005, 10010, 10010, 10004, 10004, 10007, 10007, 10009, 10005, 10002, 10009, 10009, 10005, 10002, 10005, 10000, 10000, 10000, 10007, 10003, 10000, 10004, 10006, 10009, 10008, 10009, 10006, 10002, 10003, 10007, 10006, 10000, 10001, 10007, 10005, 10002, 10003, 10003, 10007, 10007, 10009, 10002, 10001, 10010, 10006, 10005, 10000, 10004, 10000, 10001, 10010, 10006, 10004, 10005, 10005, 10008, 10004, 10002, 10010, 10006, 10004, 10006, 10000, 10006, 10004, 10009, 10005, 10010, 10010, 10004, 10003, 10007, 10010, 10004, 10000, 10002, 10001, 10005, 10006, 10003, 10006, 10006, 10000, 10001, 10009, 10002, 10006, 10007, 10010, 10009, 10005, 10004, 10000, 10002, 10006, 10001, 10010, 10007, 10009, 10004, 10006, 10001, 10004, 10003, 10010, 10000, 10003, 10003, 10009, 10003, 10007, 10001, 10003, 10000, 10010, 10007, 10003, 10005, 10007, 10007, 10007, 10003, 10002, 10000, 10003, 10000, 10001, 10007, 10003, 10001, 10004, 10010, 10009, 10009, 10003, 10002, 10010, 10005, 10007, 10003, 10006, 10000, 10008, 10002, 10001, 10002, 10010, 10010, 10005, 10001, 10008, 10004, 10006, 10003, 10000, 10005, 10004, 10002, 10005, 10009, 10000, 10008, 10007, 10005, 10005, 10005, 10001, 10009, 10004, 10002, 10004, 10007, 10002, 10001, 10002, 10007, 10007, 10002, 10002, 10003, 10000, 10003, 10005, 10007, 10002, 10005, 10008, 10001, 10002, 10006, 10005, 10008, 10005, 10007, 10003, 10009, 10006, 10003, 10006, 10009, 10009, 10005, 10009, 10000, 10002, 10000, 10004, 10008, 10004, 10010, 10009, 10004, 10008, 10008, 10001, 10009, 10004, 10008, 10004, 10010, 10003, 10008, 10004, 10008, 10001, 10005, 10009, 10008, 10004, 10000, 10008, 10010, 10010, 10006, 10003, 10002, 10008, 10008, 10009, 10006, 10004, 10002, 10003, 10009, 10001, 10007, 10005, 10006, 10004, 10006, 10003, 10004, 10009, 10004, 10003, 10004, 10003, 10007, 10009, 10008, 10005, 10006, 10008, 10003, 10003, 10005, 10004, 10003, 10005, 10000, 10006, 10003, 10000, 10005, 10001, 10009, 10000, 10006, 10010, 10004, 10010, 10002, 10005, 10006, 10006, 10007, 10008, 10003, 10006, 10005, 10003, 10000, 10009, 10001, 10001, 10005, 10006, 10010, 10007, 10006, 10007, 10000, 10009, 10001, 10003, 10001, 10003, 10008, 10004, 10004, 10004, 10001, 10006, 10005, 10004, 10007, 10006, 10008, 10006, 10003, 10006, 10010, 10009, 10007, 10000, 10003, 10007, 10008, 10003, 10002, 10009, 10010, 10005, 10005, 10007, 10009, 10007, 10004, 10007, 10000, 10000, 10003, 10004, 10002, 10001, 10004, 10005, 10010, 10003, 10003, 10006, 10009, 10010, 10007, 10007, 10007, 10007, 10009, 10001, 10002, 10003, 10001, 10004, 10002, 10002, 10009, 10002, 10006, 10001, 10000, 10009, 10005, 10008, 10008, 10002, 10003, 10004, 10002, 10000, 10005, 10008, 10005, 10003, 10005, 10001, 10003, 10005, 10007, 10008, 10010, 10007, 10001, 10008, 10003, 10009, 10010, 10006, 10007, 10002, 10005, 10003, 10000, 10001, 10010, 10005, 10003, 10003, 10003, 10000, 10007, 10010, 10002, 10008, 10004, 10009, 10003, 10004, 10008, 10000, 10007, 10004, 10010, 10006, 10005, 10009, 10007, 10000, 10001, 10000, 10004, 10004, 10002, 10000, 10010, 10001, 10007, 10003, 10008, 10005, 10007, 10005, 10003, 10001, 10007, 10008, 10010, 10000, 10002, 10003, 10003, 10009, 10004, 10009, 10003, 10003, 10000, 10006, 10002, 10002, 10008, 10010, 10009, 10003, 10000, 10003, 10007, 10006, 10009, 10009, 10004, 10004, 10009, 10003, 10003, 10003, 10010, 10010, 10005, 10008, 10007, 10009, 10008, 10008, 10010, 10000, 10000, 10010, 10009, 10004, 10010, 10003, 10003, 10001, 10010, 10005, 10007, 10010, 10004, 10009, 10005, 10001, 10008, 10002, 10010, 10009, 10003, 10001, 10004, 10010, 10007, 10003, 10004, 10006, 10002, 10006, 10002, 10008, 10000, 10010, 10002, 10003, 10002, 10004, 10000, 10006, 10000, 10003, 10000, 10003, 10001, 10007, 10002, 10006, 10004, 10001, 10004, 10008, 10004, 10002, 10005, 10002, 10001, 10005, 10010, 10002, 10006, 10010, 10002, 10007, 10000, 10004, 10001, 10009, 10003, 10009, 10008, 10000, 10001, 10003, 10005, 10006, 10001, 10008, 10009, 10004, 10003, 10006, 10008, 10002, 10005, 10006, 10007, 10005, 10007, 10004, 10008, 10007, 10007, 10008, 10000, 10004, 10010, 10002, 10009, 10010, 10003, 10010, 10004, 10005, 10010, 10009, 10000, 10008, 10008, 10004, 10001, 10010, 10010, 10008, 10002, 10008, 10002, 10008, 10003, 10005, 10005, 10008, 10003, 10008, 10005, 10010, 10008, 10007, 10008, 10010, 10003, 10003, 10007, 10010, 10003, 10004, 10008, 10009, 10010, 10009, 10009, 10004, 10006, 10002, 10000, 10006, 10000, 10003, 10002, 10004, 10002, 10005, 10009, 10010, 10010, 10000, 10006, 10010, 10010, 10007, 10004, 10002, 10000, 10001, 10003, 10009, 10001, 10008, 10009, 10008, 10009, 10004, 10006, 10009, 10004, 10007, 10008, 10005, 10002]) == 5389', 'assert numberOfSubarrays([10003, 10010, 10007, 10000, 10006, 10009, 10006, 10010, 10010, 10002, 10004, 10004, 10009, 10008, 10005, 10003, 10006, 10001, 10007, 10002, 10005, 10001, 10005, 10007, 10007, 10008, 10000, 10000, 10004, 10010, 10006, 10005, 10001, 10008, 10007, 10005, 10005, 10003, 10001, 10003, 10010, 10001, 10003, 10002, 10004, 10005, 10008, 10010, 10003, 10000, 10002, 10000, 10004, 10009, 10010, 10005, 10004, 10006, 10009, 10004, 10002, 10003, 10006, 10003, 10005, 10001, 10010, 10007, 10002, 10008, 10007, 10000, 10006, 10000, 10008, 10000, 10008, 10007, 10010, 10002, 10009, 10009, 10008, 10000, 10003, 10002, 10001, 10008, 10006, 10010, 10002, 10005, 10001, 10009, 10003, 10005, 10001, 10010, 10000, 10001, 10009, 10006, 10000, 10004, 10007, 10008, 10001, 10010, 10000, 10010, 10005, 10007, 10000, 10005, 10007, 10002, 10008, 10004, 10002, 10008, 10000, 10006, 10001, 10005, 10007, 10010, 10006, 10002, 10005, 10008, 10000, 10004, 10003, 10000, 10010, 10002, 10007, 10009, 10009, 10001, 10001, 10009, 10002, 10007, 10001, 10000, 10007, 10005, 10001, 10000, 10006, 10009, 10009, 10009, 10006, 10006, 10004, 10010, 10006, 10007, 10002, 10004, 10001, 10001, 10010, 10002, 10009, 10009, 10000, 10007, 10010, 10008, 10000, 10007, 10008, 10001, 10008, 10001, 10009, 10010, 10006, 10002, 10006, 10001, 10007, 10010, 10010, 10006, 10006, 10001, 10002, 10007, 10006, 10000, 10003, 10003, 10003, 10000, 10003, 10003, 10006, 10005, 10004, 10004, 10005, 10007, 10004, 10007, 10001, 10005, 10002, 10004, 10005, 10005, 10008, 10005, 10007, 10009, 10003, 10008, 10004, 10005, 10006, 10009, 10005, 10006, 10003, 10004, 10001, 10002, 10004, 10001, 10003, 10008, 10002, 10001, 10001, 10005, 10002, 10007, 10005, 10008, 10001, 10008, 10002, 10003, 10005, 10001, 10008, 10002, 10005, 10001, 10002, 10006, 10007, 10006, 10006, 10006, 10005, 10002, 10010, 10002, 10005, 10002, 10006, 10000, 10003, 10008, 10005, 10006, 10009, 10010, 10008, 10000, 10007, 10003, 10002, 10010, 10010, 10000, 10002, 10006, 10010, 10003, 10010, 10001, 10010, 10005, 10008, 10008, 10009, 10010, 10005, 10006, 10002, 10004, 10010, 10006, 10010, 10004, 10006, 10001, 10002, 10003, 10002, 10006, 10004, 10003, 10004, 10000, 10002, 10004, 10006, 10003, 10005, 10007, 10002, 10009, 10009, 10007, 10009, 10010, 10000, 10010, 10002, 10006, 10002, 10003, 10004, 10005, 10001, 10002, 10004, 10001, 10008, 10007, 10002, 10002, 10009, 10001, 10000, 10000, 10001, 10006, 10002, 10000, 10006, 10002, 10007, 10000, 10000, 10005, 10007, 10000, 10004, 10001, 10001, 10005, 10001, 10002, 10010, 10002, 10000, 10010, 10001, 10008, 10004, 10009, 10010, 10010, 10010, 10004, 10005, 10004, 10006, 10007, 10007, 10009, 10003, 10008, 10000, 10002, 10006, 10003, 10010, 10009, 10010, 10000, 10009, 10008, 10003, 10008, 10001, 10002, 10000, 10009, 10010, 10002, 10003, 10008, 10003, 10002, 10003, 10005, 10004, 10002, 10005, 10000, 10009, 10007, 10003, 10005, 10004, 10005, 10007, 10000, 10009, 10008, 10005, 10001, 10007, 10002, 10003, 10005, 10009, 10001, 10001, 10003, 10000, 10005, 10000, 10006, 10001, 10005, 10010, 10006, 10004, 10000, 10004, 10003, 10003, 10005, 10010, 10003, 10003, 10009, 10008, 10010, 10003, 10008, 10000, 10009, 10006, 10000, 10010, 10000, 10003, 10004, 10009, 10010, 10008, 10008, 10001, 10000, 10007, 10003, 10007, 10000, 10007, 10003, 10006, 10000, 10009, 10010, 10001, 10007, 10007, 10001, 10009, 10008, 10010, 10004, 10007, 10006, 10007, 10004, 10007, 10000, 10007, 10010, 10007, 10009, 10005, 10004, 10002, 10006, 10006, 10009, 10002, 10006, 10003, 10000, 10007, 10007, 10002, 10008, 10007, 10006, 10004, 10003, 10002, 10008, 10010, 10010, 10005, 10001, 10002, 10010, 10003, 10000, 10008, 10004, 10004, 10009, 10002, 10000, 10004, 10010, 10000, 10006, 10003, 10006, 10008, 10002, 10009, 10006, 10006, 10001, 10002, 10003, 10008, 10010, 10006, 10007, 10001, 10010, 10008, 10000, 10005, 10010, 10009, 10000, 10004, 10010, 10000, 10008, 10004, 10003, 10008, 10005, 10010, 10004, 10008, 10009, 10009, 10010, 10009, 10002, 10010, 10002, 10003, 10005, 10003, 10008, 10008, 10002, 10008, 10004, 10008, 10005, 10000, 10001, 10003, 10008, 10007, 10001, 10006, 10007, 10000, 10005, 10001, 10009, 10004, 10006, 10007, 10004, 10002, 10001, 10007, 10003, 10000, 10010, 10003, 10000, 10006, 10003, 10008, 10006, 10000, 10000, 10001, 10003, 10007, 10004, 10003, 10005, 10003, 10005, 10005, 10001, 10009, 10009, 10006, 10010, 10001, 10006, 10003, 10007, 10007, 10010, 10007, 10009, 10000, 10000, 10006, 10004, 10009, 10009, 10002, 10009, 10009, 10001, 10000, 10009, 10000, 10004, 10005, 10002, 10009, 10008, 10008, 10003, 10002, 10000, 10009, 10007, 10000, 10006, 10000, 10006, 10005, 10000, 10006, 10006, 10008, 10000, 10003, 10001, 10009, 10003, 10005, 10009, 10000, 10010, 10008, 10007, 10004, 10010, 10010, 10009, 10001, 10001, 10001, 10006, 10009, 10006, 10010, 10002, 10004, 10010, 10000, 10010, 10002, 10004, 10010, 10001, 10010, 10006, 10002, 10004, 10002, 10008, 10006, 10009, 10003, 10002, 10006, 10009, 10003, 10003, 10000, 10002, 10005, 10004, 10005, 10002, 10001, 10008, 10001, 10005, 10007, 10001, 10002, 10010, 10000, 10010, 10008, 10010, 10009, 10006, 10008, 10007, 10010, 10007, 10002, 10007, 10001, 10006, 10002, 10003, 10002, 10003, 10000, 10006, 10003, 10005, 10008, 10005, 10005, 10003, 10007, 10003, 10000, 10010, 10004, 10009, 10009, 10001, 10000, 10008, 10009, 10005, 10002, 10009, 10003, 10008, 10008, 10006, 10007, 10007, 10005, 10005, 10004, 10004, 10004, 10008, 10009, 10000, 10003, 10008, 10002, 10008, 10007, 10001, 10004, 10009, 10009, 10001, 10003, 10004, 10006, 10004, 10005, 10002, 10008, 10008, 10004, 10002, 10005, 10007, 10009, 10008, 10000, 10009, 10001, 10004, 10009, 10010, 10003, 10000, 10004, 10000, 10009, 10007, 10004, 10010, 10000, 10004, 10007, 10006, 10010, 10006, 10005, 10008, 10010, 10004, 10010, 10005, 10008, 10003, 10000, 10009, 10006, 10009, 10004, 10002, 10003, 10006, 10005, 10010, 10002, 10006, 10006, 10005, 10010, 10008, 10002, 10003, 10000, 10004, 10007, 10005, 10007, 10007, 10002, 10006, 10008, 10008, 10001, 10004, 10010, 10003, 10008, 10000, 10005, 10008, 10009, 10007, 10001, 10007, 10009, 10006, 10008, 10008, 10009, 10008, 10009, 10001, 10004, 10000, 10006, 10002, 10006, 10008, 10010, 10007, 10000, 10004, 10010, 10002, 10010, 10003, 10005, 10007, 10001, 10008, 10010, 10001, 10000, 10000, 10005, 10002, 10004, 10001, 10001, 10009, 10004, 10000, 10008, 10004, 10001, 10010, 10001, 10001, 10003, 10009, 10006, 10007, 10000, 10008, 10006, 10000, 10009, 10003, 10007, 10009, 10007, 10000, 10005, 10007, 10002, 10009, 10008, 10007, 10004, 10005, 10005, 10009, 10005, 10008, 10000, 10003, 10003, 10006, 10004, 10003, 10010, 10009, 10000, 10010, 10002, 10009, 10009, 10001, 10002, 10004, 10009, 10005, 10007, 10008, 10008, 10001, 10000, 10002, 10009, 10000, 10008, 10003, 10001, 10010, 10003, 10006, 10010, 10010, 10003, 10000, 10009, 10003, 10004, 10006, 10000, 10008, 10002, 10001, 10008, 10007, 10001, 10006, 10010, 10009, 10007, 10006, 10001, 10005, 10000, 10004, 10008, 10000, 10006, 10006]) == 5768', 'assert numberOfSubarrays([10004, 10009, 10010, 10010, 10003, 10010, 10003, 10006, 10007, 10001, 10000, 10004, 10002, 10005, 10005, 10009, 10007, 10001, 10009, 10007, 10010, 10000, 10010, 10003, 10008, 10010, 10001, 10005, 10003, 10007, 10006, 10007, 10010, 10005, 10008, 10001, 10009, 10001, 10008, 10003, 10003, 10002, 10003, 10005, 10005, 10008, 10006, 10001, 10010, 10010, 10008, 10010, 10007, 10004, 10006, 10002, 10005, 10004, 10002, 10000, 10000, 10000, 10008, 10006, 10007, 10005, 10006, 10001, 10007, 10010, 10007, 10003, 10010, 10010, 10000, 10007, 10009, 10006, 10010, 10008, 10007, 10003, 10010, 10007, 10000, 10000, 10006, 10005, 10009, 10000, 10007, 10004, 10002, 10010, 10005, 10008, 10000, 10009, 10004, 10004, 10002, 10002, 10006, 10008, 10006, 10009, 10008, 10006, 10005, 10008, 10007, 10004, 10001, 10003, 10009, 10003, 10006, 10005, 10004, 10002, 10002, 10008, 10009, 10002, 10005, 10003, 10005, 10003, 10002, 10010, 10008, 10004, 10009, 10002, 10010, 10009, 10001, 10001, 10005, 10010, 10008, 10000, 10005, 10002, 10010, 10002, 10003, 10007, 10010, 10004, 10002, 10008, 10004, 10001, 10009, 10003, 10002, 10004, 10004, 10003, 10006, 10005, 10009, 10000, 10009, 10007, 10001, 10002, 10004, 10002, 10004, 10005, 10008, 10008, 10006, 10000, 10004, 10008, 10007, 10002, 10004, 10009, 10001, 10000, 10004, 10003, 10008, 10006, 10001, 10003, 10002, 10005, 10005, 10000, 10005, 10000, 10006, 10006, 10003, 10005, 10006, 10010, 10010, 10008, 10002, 10000, 10001, 10009, 10010, 10004, 10006, 10006, 10009, 10005, 10007, 10007, 10002, 10002, 10004, 10004, 10006, 10007, 10010, 10007, 10003, 10000, 10004, 10005, 10009, 10001, 10008, 10006, 10010, 10004, 10002, 10005, 10010, 10010, 10007, 10003, 10001, 10001, 10004, 10002, 10007, 10010, 10000, 10002, 10007, 10003, 10001, 10005, 10005, 10005, 10010, 10010, 10008, 10005, 10010, 10004, 10006, 10003, 10010, 10010, 10003, 10002, 10001, 10006, 10005, 10003, 10004, 10000, 10002, 10008, 10006, 10002, 10007, 10009, 10008, 10008, 10009, 10009, 10007, 10004, 10005, 10009, 10003, 10004, 10004, 10004, 10005, 10010, 10001, 10008, 10008, 10002, 10005, 10001, 10000, 10009, 10007, 10007, 10006, 10006, 10001, 10008, 10004, 10006, 10006, 10007, 10009, 10008, 10010, 10001, 10002, 10002, 10007, 10008, 10008, 10004, 10000, 10002, 10001, 10005, 10000, 10005, 10007, 10004, 10008, 10009, 10008, 10002, 10008, 10001, 10007, 10000, 10000, 10000, 10005, 10000, 10002, 10010, 10007, 10007, 10006, 10002, 10008, 10010, 10007, 10001, 10004, 10010, 10001, 10004, 10005, 10003, 10005, 10005, 10010, 10001, 10006, 10006, 10002, 10001, 10002, 10000, 10009, 10007, 10008, 10004, 10007, 10004, 10010, 10001, 10001, 10004, 10007, 10010, 10007, 10002, 10004, 10009, 10000, 10009, 10001, 10001, 10001, 10004, 10003, 10000, 10000, 10009, 10002, 10006, 10003, 10008, 10008, 10002, 10007, 10008, 10005, 10002, 10009, 10000, 10007, 10007, 10008, 10007, 10002, 10004, 10001, 10005, 10008, 10008, 10005, 10008, 10007, 10007, 10010, 10008, 10009, 10009, 10001, 10001, 10004, 10002, 10008, 10003, 10001, 10007, 10009, 10006, 10000, 10001, 10009, 10005, 10000, 10005, 10008, 10003, 10003, 10008, 10000, 10001, 10008, 10009, 10010, 10000, 10006, 10005, 10001, 10004, 10000, 10010, 10004, 10003, 10010, 10001, 10000, 10008, 10005, 10006, 10001, 10003, 10008, 10008, 10002, 10002, 10001, 10005, 10000, 10004, 10004, 10005, 10009, 10003, 10007, 10004, 10006, 10002, 10008, 10000, 10001, 10003, 10010, 10006, 10010, 10006, 10010, 10000, 10007, 10000, 10008, 10003, 10007, 10006, 10005, 10009, 10006, 10008, 10001, 10003, 10005, 10004, 10003, 10009, 10006, 10010, 10006, 10001, 10010, 10010, 10007, 10008, 10005, 10000, 10001, 10001, 10006, 10006, 10007, 10002, 10004, 10000, 10010, 10000, 10010, 10003, 10001, 10006, 10002, 10008, 10005, 10010, 10002, 10010, 10009, 10003, 10000, 10008, 10000, 10007, 10004, 10007, 10005, 10004, 10006, 10007, 10010, 10005, 10004, 10006, 10005, 10004, 10005, 10006, 10001, 10009, 10002, 10002, 10005, 10005, 10002, 10005, 10006, 10000, 10000, 10006, 10009, 10008, 10007, 10006, 10004, 10000, 10003, 10004, 10001, 10008, 10002, 10003, 10006, 10009, 10006, 10001, 10000, 10010, 10005, 10007, 10005, 10009, 10002, 10010, 10006, 10003, 10006, 10004, 10007, 10001, 10007, 10008, 10002, 10004, 10008, 10006, 10000, 10007, 10009, 10004, 10000, 10004, 10005, 10002, 10004, 10010, 10007, 10009, 10004, 10004, 10010, 10000, 10003, 10000, 10009, 10002, 10006, 10003, 10001, 10010, 10010, 10010, 10007, 10002, 10008, 10008, 10002, 10004, 10008, 10010, 10001, 10001, 10007, 10004, 10007, 10003, 10007, 10001, 10008, 10000, 10004, 10009, 10001, 10002, 10006, 10001, 10009, 10008, 10003, 10000, 10003, 10009, 10002, 10003, 10010, 10009, 10008, 10010, 10009, 10006, 10004, 10001, 10005, 10006, 10007, 10000, 10008, 10010, 10001, 10001, 10006, 10002, 10001, 10008, 10005, 10005, 10005, 10000, 10009, 10006, 10001, 10006, 10002, 10006, 10009, 10006, 10004, 10006, 10001, 10010, 10005, 10000, 10009, 10001, 10008, 10002, 10001, 10007, 10004, 10009, 10002, 10000, 10001, 10010, 10000, 10004, 10001, 10006, 10001, 10004, 10009, 10001, 10010, 10002, 10003, 10010, 10001, 10003, 10008, 10001, 10009, 10007, 10010, 10001, 10009, 10009, 10006, 10001, 10010, 10006, 10005, 10009, 10000, 10003, 10003, 10005, 10009, 10009, 10008, 10005, 10005, 10005, 10009, 10003, 10010, 10009, 10003, 10001, 10007, 10007, 10008, 10008, 10009, 10009, 10009, 10006, 10006, 10000, 10009, 10010, 10009, 10010, 10005, 10000, 10004, 10009, 10009, 10004, 10001, 10000, 10010, 10005, 10006, 10010, 10004, 10007, 10000, 10010, 10007, 10002, 10007, 10003, 10004, 10004, 10010, 10007, 10005, 10008, 10010, 10009, 10003, 10001, 10010, 10002, 10000, 10009, 10009, 10000, 10001, 10001, 10006, 10001, 10001, 10008, 10003, 10009, 10001, 10003, 10001, 10000, 10010, 10007, 10009, 10001, 10001, 10003, 10010, 10004, 10006, 10010, 10010, 10001, 10000, 10005, 10009, 10009, 10010, 10010, 10006, 10000, 10001, 10002, 10000, 10006, 10004, 10001, 10004, 10002, 10008, 10004, 10002, 10006, 10007, 10006, 10004, 10009, 10003, 10005, 10003, 10009, 10010, 10007, 10009, 10001, 10009, 10003, 10006, 10010, 10001, 10010, 10008, 10000, 10009, 10002, 10000, 10010, 10003, 10009, 10005, 10009, 10003, 10008, 10005, 10003, 10005, 10010, 10006, 10007, 10004, 10000, 10008, 10000, 10009, 10007, 10003, 10001, 10002, 10002, 10004, 10010, 10008, 10008, 10003, 10006, 10008, 10009, 10010, 10010, 10010, 10008, 10003, 10010, 10004, 10003, 10002, 10007, 10010, 10010, 10010, 10008, 10009, 10008, 10003, 10008, 10000, 10000, 10007, 10008, 10000, 10000, 10008, 10001, 10000, 10005, 10003, 10004, 10005, 10003, 10001, 10009, 10000, 10007, 10005, 10004, 10010, 10000, 10004, 10006, 10001, 10009, 10007, 10002, 10001, 10000, 10008, 10005, 10004, 10007, 10003, 10000, 10008, 10004, 10002, 10001, 10000, 10003, 10002, 10000, 10003, 10004, 10007, 10008, 10005, 10005, 10007, 10004, 10005, 10006, 10004, 10000, 10002, 10004, 10002, 10009, 10003, 10007, 10008, 10010, 10009, 10010, 10009, 10000, 10006, 10006, 10010, 10010, 10007, 10010, 10001, 10001, 10003, 10008]) == 7018', 'assert numberOfSubarrays([10005, 10005, 10009, 10001, 10003, 10009, 10000, 10008, 10006, 10000, 10009, 10010, 10009, 10003, 10004, 10000, 10008, 10007, 10004, 10009, 10007, 10000, 10010, 10004, 10007, 10005, 10007, 10000, 10010, 10003, 10002, 10001, 10002, 10007, 10002, 10001, 10010, 10000, 10008, 10003, 10009, 10002, 10004, 10009, 10009, 10002, 10010, 10001, 10000, 10002, 10006, 10008, 10002, 10007, 10000, 10003, 10001, 10000, 10000, 10007, 10004, 10006, 10005, 10000, 10002, 10009, 10003, 10006, 10006, 10008, 10007, 10000, 10004, 10008, 10003, 10004, 10008, 10004, 10009, 10010, 10005, 10004, 10010, 10006, 10006, 10003, 10004, 10001, 10001, 10006, 10001, 10001, 10006, 10001, 10007, 10006, 10000, 10000, 10010, 10008, 10009, 10000, 10002, 10010, 10000, 10010, 10007, 10003, 10010, 10004, 10000, 10009, 10008, 10002, 10002, 10004, 10002, 10002, 10006, 10002, 10003, 10009, 10007, 10001, 10001, 10008, 10008, 10002, 10009, 10007, 10001, 10002, 10004, 10003, 10006, 10005, 10000, 10001, 10002, 10001, 10002, 10003, 10007, 10003, 10010, 10010, 10001, 10004, 10004, 10006, 10010, 10005, 10008, 10005, 10009, 10002, 10006, 10003, 10006, 10004, 10003, 10007, 10000, 10001, 10007, 10002, 10010, 10009, 10000, 10002, 10001, 10010, 10001, 10010, 10005, 10002, 10008, 10005, 10010, 10004, 10010, 10003, 10000, 10007, 10000, 10001, 10010, 10007, 10010, 10009, 10002, 10003, 10000, 10001, 10002, 10009, 10003, 10003, 10010, 10006, 10008, 10007, 10010, 10006, 10008, 10009, 10004, 10004, 10009, 10003, 10007, 10007, 10001, 10001, 10004, 10000, 10002, 10000, 10003, 10006, 10006, 10001, 10001, 10004, 10002, 10006, 10007, 10004, 10008, 10000, 10001, 10003, 10007, 10007, 10008, 10004, 10004, 10010, 10005, 10005, 10010, 10001, 10010, 10000, 10008, 10007, 10001, 10005, 10004, 10006, 10005, 10009, 10002, 10010, 10005, 10007, 10001, 10009, 10005, 10006, 10000, 10010, 10002, 10007, 10005, 10007, 10007, 10006, 10004, 10010, 10010, 10007, 10001, 10003, 10000, 10001, 10010, 10000, 10001, 10009, 10010, 10008, 10010, 10003, 10000, 10003, 10008, 10002, 10010, 10005, 10010, 10005, 10000, 10000, 10006, 10010, 10006, 10000, 10007, 10006, 10001, 10009, 10001, 10000, 10004, 10008, 10003, 10000, 10007, 10005, 10006, 10004, 10000, 10002, 10004, 10001, 10001, 10009, 10008, 10010, 10005, 10002, 10002, 10002, 10008, 10001, 10009, 10002, 10007, 10007, 10002, 10001, 10001, 10002, 10009, 10001, 10003, 10005, 10007, 10004, 10003, 10007, 10007, 10000, 10006, 10000, 10005, 10008, 10005, 10002, 10005, 10005, 10008, 10007, 10008, 10009, 10003, 10007, 10000, 10003, 10001, 10006, 10003, 10003, 10002, 10000, 10002, 10009, 10006, 10004, 10005, 10007, 10010, 10009, 10010, 10004, 10005, 10005, 10007, 10010, 10000, 10003, 10008, 10007, 10003, 10001, 10002, 10007, 10001, 10004, 10001, 10010, 10007, 10005, 10005, 10007, 10000, 10005, 10003, 10005, 10010, 10007, 10000, 10006, 10001, 10004, 10001, 10003, 10002, 10009, 10006, 10005, 10005, 10010, 10008, 10002, 10001, 10006, 10000, 10001, 10001, 10004, 10002, 10002, 10009, 10008, 10001, 10008, 10001, 10010, 10001, 10001, 10003, 10007, 10000, 10002, 10009, 10009, 10006, 10003, 10002, 10000, 10010, 10010, 10007, 10004, 10008, 10010, 10003, 10006, 10009, 10006, 10009, 10006, 10000, 10006, 10002, 10005, 10009, 10007, 10008, 10009, 10005, 10007, 10004, 10009, 10009, 10005, 10010, 10001, 10007, 10000, 10008, 10006, 10007, 10004, 10002, 10006, 10000, 10007, 10002, 10009, 10010, 10010, 10000, 10002, 10004, 10006, 10001, 10010, 10000, 10010, 10002, 10006, 10009, 10000, 10004, 10004, 10006, 10010, 10003, 10006, 10003, 10006, 10007, 10006, 10000, 10000, 10009, 10000, 10008, 10006, 10000, 10008, 10006, 10010, 10002, 10009, 10008, 10002, 10001, 10002, 10004, 10000, 10000, 10008, 10001, 10010, 10007, 10004, 10004, 10007, 10005, 10008, 10001, 10009, 10006, 10008, 10009, 10000, 10003, 10006, 10005, 10000, 10002, 10008, 10008, 10006, 10001, 10006, 10004, 10005, 10005, 10003, 10009, 10005, 10007, 10009, 10001, 10009, 10005, 10000, 10001, 10001, 10001, 10009, 10005, 10005, 10001, 10008, 10006, 10010, 10006, 10002, 10009, 10008, 10008, 10007, 10001, 10009, 10009, 10009, 10009, 10004, 10009, 10005, 10006, 10003, 10005, 10008, 10009, 10006, 10008, 10000, 10003, 10007, 10003, 10002, 10007, 10008, 10001, 10005, 10010, 10010, 10009, 10000, 10001, 10005, 10003, 10006, 10002, 10000, 10003, 10001, 10000, 10001, 10000, 10000, 10006, 10009, 10000, 10009, 10004, 10005, 10001, 10008, 10002, 10005, 10008, 10006, 10000, 10006, 10000, 10001, 10003, 10000, 10006, 10001, 10002, 10001, 10010, 10001, 10009, 10008, 10009, 10008, 10001, 10001, 10003, 10002, 10003, 10005, 10005, 10007, 10009, 10008, 10004, 10001, 10009, 10003, 10000, 10007, 10007, 10004, 10004, 10010, 10002, 10002, 10008, 10009, 10001, 10009, 10009, 10001, 10005, 10003, 10000, 10010, 10008, 10000, 10000, 10007, 10001, 10010, 10006, 10004, 10007, 10002, 10004, 10004, 10002, 10008, 10009, 10000, 10000, 10000, 10001, 10010, 10009, 10008, 10003, 10006, 10003, 10006, 10003, 10000, 10000, 10009, 10004, 10008, 10002, 10002, 10003, 10006, 10010, 10001, 10005, 10002, 10003, 10009, 10003, 10006, 10003, 10000, 10006, 10010, 10005, 10000, 10007, 10004, 10007, 10007, 10001, 10007, 10006, 10010, 10009, 10001, 10010, 10006, 10009, 10004, 10009, 10005, 10007, 10004, 10008, 10003, 10006, 10009, 10002, 10000, 10001, 10003, 10004, 10003, 10001, 10009, 10009, 10005, 10005, 10010, 10000, 10004, 10005, 10003, 10000, 10009, 10005, 10008, 10003, 10010, 10005, 10002, 10005, 10007, 10010, 10005, 10002, 10007, 10009, 10008, 10008, 10010, 10009, 10006, 10004, 10006, 10009, 10001, 10002, 10010, 10005, 10002, 10009, 10007, 10000, 10010, 10006, 10000, 10010, 10004, 10010, 10001, 10007, 10010, 10001, 10000, 10008, 10003, 10001, 10001, 10009, 10006, 10002, 10002, 10007, 10007, 10008, 10002, 10007, 10000, 10004, 10007, 10009, 10006, 10000, 10003, 10008, 10003, 10005, 10001, 10005, 10002, 10009, 10009, 10004, 10002, 10003, 10004, 10006, 10003, 10002, 10001, 10004, 10008, 10009, 10003, 10007, 10005, 10002, 10000, 10002, 10002, 10009, 10008, 10003, 10006, 10003, 10007, 10008, 10004, 10002, 10004, 10006, 10007, 10000, 10010, 10001, 10006, 10003, 10009, 10006, 10006, 10000, 10010, 10000, 10003, 10003, 10002, 10000, 10008, 10001, 10002, 10008, 10003, 10001, 10010, 10009, 10005, 10010, 10003, 10007, 10001, 10008, 10006, 10001, 10007, 10001, 10004, 10005, 10007, 10004, 10000, 10002, 10002, 10003, 10006, 10008, 10005, 10006, 10004, 10001, 10009, 10006, 10009, 10010, 10001, 10008, 10010, 10004, 10001, 10005, 10002, 10006, 10008, 10009, 10004, 10010, 10000, 10010, 10009, 10004, 10005, 10006, 10002, 10001, 10008, 10002, 10008, 10003, 10010, 10003, 10000, 10000, 10008, 10005, 10008, 10005, 10001, 10003, 10002, 10009, 10003, 10008, 10005, 10005, 10004, 10000, 10001, 10009, 10009, 10006, 10000, 10007, 10004, 10005, 10009, 10010, 10001, 10002, 10003, 10006, 10010, 10001, 10010, 10003, 10007, 10004, 10001, 10003, 10007, 10008, 10007, 10005, 10006, 10005, 10001, 10009, 10001, 10002, 10003, 10009, 10000, 10007, 10002, 10000, 10002, 10006, 10006]) == 5099', 'assert numberOfSubarrays([10006, 10003, 10005, 10003, 10001, 10005, 10009, 10006, 10004, 10002, 10005, 10000, 10001, 10005, 10009, 10010, 10008, 10001, 10006, 10000, 10000, 10006, 10002, 10003, 10001, 10004, 10005, 10002, 10010, 10001, 10000, 10006, 10003, 10007, 10006, 10010, 10001, 10007, 10001, 10005, 10006, 10010, 10010, 10008, 10001, 10006, 10008, 10010, 10006, 10006, 10005, 10003, 10003, 10006, 10008, 10001, 10010, 10002, 10000, 10003, 10004, 10000, 10008, 10003, 10004, 10004, 10008, 10005, 10007, 10010, 10006, 10007, 10003, 10010, 10000, 10006, 10007, 10005, 10003, 10009, 10004, 10005, 10005, 10009, 10007, 10005, 10006, 10000, 10001, 10001, 10000, 10006, 10003, 10005, 10004, 10000, 10006, 10003, 10010, 10000, 10007, 10002, 10006, 10004, 10003, 10001, 10002, 10008, 10007, 10004, 10001, 10002, 10006, 10001, 10005, 10002, 10004, 10000, 10005, 10001, 10005, 10004, 10010, 10009, 10008, 10010, 10000, 10009, 10001, 10005, 10001, 10002, 10007, 10009, 10003, 10000, 10008, 10006, 10007, 10008, 10003, 10010, 10009, 10007, 10010, 10003, 10001, 10010, 10009, 10007, 10002, 10007, 10010, 10008, 10001, 10005, 10008, 10005, 10003, 10008, 10003, 10002, 10000, 10008, 10006, 10000, 10008, 10002, 10007, 10006, 10007, 10009, 10003, 10001, 10009, 10003, 10001, 10008, 10006, 10001, 10004, 10005, 10004, 10005, 10009, 10009, 10010, 10003, 10001, 10000, 10003, 10003, 10003, 10002, 10002, 10008, 10007, 10001, 10010, 10009, 10006, 10003, 10010, 10005, 10000, 10005, 10004, 10002, 10008, 10000, 10003, 10009, 10010, 10003, 10006, 10006, 10009, 10001, 10010, 10004, 10004, 10000, 10002, 10007, 10004, 10007, 10010, 10010, 10008, 10000, 10001, 10006, 10005, 10003, 10007, 10003, 10002, 10001, 10007, 10008, 10007, 10006, 10008, 10001, 10009, 10001, 10009, 10000, 10006, 10003, 10001, 10003, 10001, 10005, 10005, 10005, 10004, 10003, 10008, 10007, 10003, 10008, 10007, 10004, 10002, 10005, 10001, 10002, 10000, 10002, 10006, 10009, 10005, 10006, 10002, 10006, 10000, 10001, 10008, 10003, 10002, 10000, 10005, 10007, 10005, 10007, 10010, 10004, 10001, 10009, 10004, 10007, 10010, 10001, 10009, 10004, 10003, 10002, 10001, 10010, 10001, 10010, 10009, 10008, 10001, 10003, 10008, 10002, 10005, 10006, 10005, 10006, 10000, 10009, 10008, 10005, 10004, 10005, 10008, 10005, 10010, 10009, 10007, 10010, 10008, 10007, 10005, 10001, 10010, 10007, 10010, 10010, 10002, 10007, 10007, 10002, 10009, 10008, 10008, 10000, 10001, 10004, 10002, 10010, 10000, 10003, 10003, 10001, 10010, 10002, 10002, 10007, 10004, 10002, 10005, 10004, 10010, 10006, 10001, 10000, 10003, 10008, 10005, 10009, 10010, 10001, 10009, 10004, 10010, 10010, 10008, 10005, 10008, 10002, 10009, 10004, 10009, 10001, 10001, 10007, 10005, 10001, 10008, 10005, 10009, 10010, 10008, 10001, 10000, 10008, 10009, 10003, 10008, 10008, 10008, 10000, 10007, 10009, 10003, 10004, 10003, 10001, 10008, 10006, 10010, 10004, 10004, 10000, 10002, 10001, 10004, 10005, 10010, 10004, 10004, 10004, 10002, 10009, 10001, 10009, 10001, 10005, 10008, 10000, 10008, 10007, 10006, 10010, 10002, 10000, 10005, 10005, 10003, 10007, 10006, 10002, 10004, 10004, 10002, 10000, 10007, 10005, 10008, 10007, 10007, 10003, 10005, 10004, 10005, 10001, 10002, 10005, 10004, 10009, 10005, 10007, 10000, 10005, 10009, 10003, 10008, 10008, 10001, 10001, 10010, 10000, 10003, 10009, 10001, 10003, 10002, 10002, 10005, 10001, 10006, 10009, 10003, 10010, 10003, 10003, 10010, 10000, 10006, 10007, 10008, 10009, 10008, 10000, 10007, 10000, 10001, 10005, 10009, 10002, 10003, 10009, 10002, 10004, 10000, 10003, 10004, 10000, 10006, 10008, 10001, 10010, 10003, 10009, 10004, 10004, 10008, 10004, 10008, 10002, 10006, 10001, 10005, 10003, 10005, 10002, 10002, 10002, 10007, 10001, 10008, 10005, 10000, 10006, 10008, 10008, 10007, 10005, 10009, 10008, 10009, 10010, 10004, 10002, 10003, 10004, 10010, 10003, 10007, 10006, 10010, 10009, 10007, 10003, 10001, 10002, 10010, 10008, 10004, 10010, 10005, 10001, 10002, 10008, 10009, 10006, 10004, 10002, 10004, 10003, 10008, 10001, 10001, 10008, 10009, 10001, 10006, 10000, 10004, 10008, 10010, 10002, 10001, 10003, 10007, 10006, 10002, 10010, 10002, 10002, 10002, 10005, 10006, 10002, 10000, 10004, 10005, 10005, 10008, 10002, 10005, 10006, 10001, 10001, 10001, 10006, 10009, 10004, 10009, 10001, 10002, 10004, 10008, 10006, 10001, 10003, 10010, 10010, 10000, 10002, 10005, 10010, 10010, 10008, 10002, 10006, 10005, 10005, 10004, 10009, 10007, 10006, 10009, 10006, 10009, 10005, 10009, 10002, 10007, 10010, 10001, 10003, 10009, 10002, 10006, 10006, 10000, 10009, 10005, 10001, 10006, 10007, 10002, 10003, 10003, 10004, 10010, 10000, 10004, 10000, 10009, 10006, 10003, 10002, 10003, 10000, 10006, 10009, 10008, 10010, 10001, 10010, 10000, 10007, 10000, 10006, 10007, 10000, 10003, 10009, 10001, 10010, 10000, 10009, 10005, 10005, 10010, 10005, 10000, 10001, 10005, 10003, 10003, 10006, 10006, 10007, 10006, 10005, 10004, 10009, 10010, 10006, 10007, 10006, 10000, 10008, 10004, 10000, 10008, 10004, 10001, 10003, 10004, 10005, 10003, 10001, 10006, 10008, 10006, 10002, 10010, 10010, 10002, 10004, 10000, 10004, 10009, 10008, 10005, 10006, 10002, 10001, 10003, 10009, 10001, 10004, 10008, 10000, 10009, 10003, 10010, 10007, 10008, 10004, 10004, 10005, 10008, 10005, 10001, 10009, 10009, 10005, 10010, 10002, 10006, 10002, 10008, 10007, 10010, 10005, 10003, 10007, 10000, 10003, 10000, 10000, 10002, 10001, 10001, 10001, 10000, 10009, 10003, 10008, 10009, 10005, 10001, 10003, 10000, 10005, 10008, 10005, 10001, 10008, 10000, 10006, 10006, 10000, 10008, 10006, 10008, 10007, 10000, 10004, 10002, 10002, 10006, 10002, 10007, 10009, 10007, 10008, 10000, 10006, 10005, 10000, 10005, 10006, 10002, 10007, 10003, 10002, 10007, 10003, 10003, 10010, 10009, 10006, 10009, 10001, 10009, 10007, 10005, 10003, 10009, 10005, 10001, 10009, 10000, 10002, 10010, 10007, 10002, 10001, 10001, 10007, 10001, 10002, 10009, 10003, 10008, 10009, 10004, 10007, 10003, 10009, 10000, 10010, 10004, 10004, 10003, 10001, 10010, 10002, 10000, 10002, 10000, 10003, 10002, 10009, 10000, 10004, 10010, 10007, 10005, 10004, 10007, 10006, 10006, 10008, 10007, 10000, 10008, 10004, 10004, 10004, 10000, 10010, 10000, 10001, 10000, 10003, 10003, 10009, 10002, 10004, 10007, 10000, 10001, 10010, 10001, 10005, 10000, 10010, 10006, 10004, 10001, 10006, 10005, 10003, 10000, 10003, 10008, 10003, 10001, 10004, 10003, 10001, 10003, 10004, 10008, 10000, 10001, 10009, 10005, 10001, 10010, 10007, 10001, 10005, 10007, 10004, 10006, 10002, 10002, 10001, 10008, 10001, 10003, 10004, 10005, 10000, 10006, 10010, 10005, 10010, 10004, 10007, 10009, 10006, 10009, 10001, 10009, 10009, 10003, 10006, 10008, 10001, 10005, 10007, 10003, 10005, 10004, 10001, 10007, 10000, 10009, 10006, 10009, 10006, 10010, 10006, 10008, 10000, 10004, 10001, 10008, 10002, 10002, 10004, 10003, 10008, 10008, 10001, 10004, 10009, 10009, 10004, 10008, 10000, 10001, 10000, 10005, 10007, 10008, 10010, 10004, 10007, 10005, 10005, 10007, 10008, 10004, 10003, 10008, 10006, 10008, 10003, 10007, 10006, 10007, 10007, 10009, 10009, 10008, 10001]) == 4580', 'assert numberOfSubarrays([10006, 10003, 10007, 10008, 10007, 10003, 10008, 10009, 10010, 10007, 10003, 10004, 10001, 10009, 10001, 10002, 10000, 10005, 10003, 10008, 10002, 10006, 10006, 10002, 10006, 10003, 10006, 10010, 10007, 10003, 10000, 10001, 10003, 10004, 10000, 10003, 10010, 10002, 10008, 10002, 10009, 10000, 10005, 10010, 10006, 10007, 10005, 10002, 10003, 10004, 10003, 10009, 10006, 10008, 10007, 10001, 10001, 10003, 10000, 10005, 10005, 10001, 10002, 10010, 10007, 10009, 10003, 10006, 10001, 10002, 10008, 10003, 10009, 10010, 10008, 10005, 10010, 10004, 10001, 10008, 10008, 10009, 10006, 10002, 10003, 10002, 10000, 10006, 10000, 10009, 10001, 10001, 10008, 10008, 10006, 10005, 10001, 10004, 10000, 10008, 10006, 10000, 10002, 10000, 10002, 10005, 10007, 10000, 10008, 10001, 10002, 10001, 10007, 10007, 10005, 10001, 10010, 10002, 10003, 10003, 10007, 10009, 10000, 10008, 10003, 10009, 10002, 10006, 10002, 10010, 10003, 10005, 10008, 10007, 10003, 10004, 10006, 10003, 10000, 10008, 10003, 10010, 10000, 10009, 10005, 10002, 10010, 10003, 10008, 10007, 10004, 10000, 10009, 10006, 10003, 10000, 10000, 10008, 10007, 10003, 10007, 10004, 10006, 10003, 10000, 10009, 10000, 10004, 10008, 10001, 10001, 10008, 10001, 10008, 10006, 10010, 10000, 10000, 10007, 10007, 10005, 10009, 10006, 10003, 10005, 10003, 10002, 10005, 10010, 10000, 10009, 10010, 10006, 10004, 10000, 10000, 10007, 10000, 10008, 10010, 10001, 10001, 10003, 10000, 10008, 10008, 10000, 10005, 10004, 10010, 10001, 10004, 10007, 10001, 10004, 10004, 10000, 10008, 10001, 10000, 10009, 10001, 10004, 10010, 10006, 10000, 10001, 10000, 10002, 10010, 10007, 10000, 10009, 10009, 10009, 10006, 10003, 10006, 10005, 10006, 10004, 10001, 10006, 10003, 10001, 10006, 10005, 10005, 10002, 10003, 10003, 10003, 10009, 10005, 10010, 10009, 10007, 10004, 10000, 10004, 10008, 10005, 10001, 10001, 10010, 10006, 10001, 10002, 10009, 10010, 10004, 10001, 10003, 10007, 10001, 10009, 10008, 10010, 10010, 10002, 10009, 10008, 10002, 10007, 10007, 10006, 10004, 10002, 10007, 10006, 10010, 10008, 10009, 10003, 10007, 10009, 10001, 10000, 10001, 10001, 10004, 10007, 10000, 10010, 10006, 10005, 10004, 10005, 10008, 10005, 10004, 10005, 10004, 10004, 10004, 10001, 10005, 10003, 10008, 10001, 10008, 10006, 10006, 10008, 10004, 10005, 10008, 10010, 10009, 10003, 10004, 10008, 10006, 10004, 10003, 10008, 10010, 10003, 10001, 10004, 10006, 10010, 10008, 10002, 10010, 10003, 10000, 10005, 10005, 10010, 10010, 10002, 10000, 10009, 10008, 10005, 10000, 10001, 10003, 10001, 10006, 10009, 10003, 10003, 10008, 10003, 10004, 10001, 10008, 10002, 10005, 10000, 10002, 10005, 10004, 10009, 10005, 10004, 10006, 10008, 10010, 10005, 10001, 10003, 10003, 10007, 10010, 10000, 10006, 10000, 10009, 10001, 10002, 10000, 10008, 10002, 10008, 10006, 10008, 10004, 10003, 10002, 10009, 10002, 10010, 10004, 10003, 10001, 10002, 10005, 10004, 10001, 10003, 10000, 10002, 10002, 10004, 10009, 10000, 10006, 10007, 10004, 10009, 10002, 10004, 10009, 10002, 10004, 10002, 10004, 10009, 10002, 10004, 10007, 10002, 10002, 10004, 10007, 10001, 10003, 10005, 10005, 10000, 10005, 10001, 10001, 10004, 10006, 10010, 10005, 10009, 10000, 10008, 10001, 10008, 10005, 10004, 10004, 10007, 10006, 10003, 10009, 10003, 10008, 10007, 10003, 10007, 10003, 10002, 10009, 10005, 10006, 10008, 10006, 10005, 10005, 10003, 10003, 10004, 10000, 10003, 10000, 10008, 10010, 10000, 10001, 10003, 10005, 10005, 10004, 10009, 10008, 10007, 10001, 10001, 10001, 10009, 10009, 10010, 10007, 10009, 10010, 10004, 10002, 10007, 10000, 10007, 10003, 10003, 10004, 10000, 10008, 10008, 10007, 10000, 10002, 10007, 10004, 10003, 10005, 10002, 10004, 10005, 10003, 10003, 10007, 10008, 10010, 10010, 10010, 10001, 10004, 10003, 10007, 10006, 10010, 10010, 10010, 10001, 10009, 10002, 10009, 10003, 10009, 10005, 10009, 10009, 10003, 10009, 10004, 10003, 10001, 10004, 10009, 10002, 10000, 10009, 10007, 10005, 10009, 10006, 10000, 10001, 10004, 10005, 10000, 10005, 10004, 10000, 10001, 10005, 10000, 10010, 10007, 10008, 10001, 10002, 10002, 10004, 10004, 10005, 10000, 10010, 10008, 10007, 10009, 10006, 10008, 10003, 10008, 10005, 10004, 10010, 10005, 10010, 10002, 10005, 10002, 10002, 10000, 10003, 10006, 10009, 10006, 10005, 10002, 10009, 10006, 10006, 10001, 10006, 10007, 10005, 10009, 10006, 10010, 10008, 10006, 10001, 10000, 10004, 10004, 10005, 10004, 10003, 10005, 10001, 10009, 10001, 10007, 10008, 10001, 10001, 10004, 10006, 10009, 10010, 10002, 10004, 10001, 10003, 10001, 10006, 10005, 10004, 10007, 10007, 10000, 10000, 10001, 10004, 10001, 10006, 10004, 10009, 10005, 10002, 10005, 10004, 10010, 10004, 10009, 10008, 10000, 10007, 10007, 10009, 10010, 10004, 10006, 10003, 10000, 10007, 10009, 10004, 10010, 10009, 10007, 10007, 10009, 10004, 10007, 10008, 10005, 10002, 10005, 10010, 10002, 10009, 10007, 10003, 10000, 10004, 10000, 10006, 10006, 10010, 10001, 10006, 10001, 10005, 10008, 10001, 10001, 10002, 10008, 10010, 10010, 10008, 10007, 10007, 10004, 10005, 10007, 10005, 10002, 10008, 10002, 10008, 10007, 10004, 10007, 10009, 10009, 10003, 10008, 10004, 10008, 10010, 10004, 10009, 10009, 10004, 10008, 10002, 10002, 10001, 10006, 10006, 10005, 10007, 10005, 10007, 10007, 10010, 10008, 10004, 10002, 10001, 10005, 10003, 10009, 10004, 10007, 10007, 10004, 10009, 10001, 10009, 10004, 10000, 10003, 10004, 10006, 10005, 10009, 10001, 10010, 10010, 10006, 10007, 10010, 10003, 10008, 10007, 10001, 10003, 10004, 10003, 10002, 10010, 10007, 10008, 10001, 10010, 10003, 10000, 10008, 10004, 10002, 10003, 10007, 10004, 10010, 10000, 10003, 10006, 10005, 10009, 10000, 10004, 10003, 10003, 10010, 10005, 10010, 10002, 10009, 10010, 10009, 10001, 10000, 10001, 10008, 10003, 10008, 10007, 10010, 10000, 10006, 10004, 10004, 10004, 10008, 10000, 10005, 10001, 10004, 10008, 10009, 10007, 10004, 10004, 10010, 10007, 10000, 10006, 10009, 10000, 10010, 10004, 10008, 10003, 10008, 10001, 10004, 10002, 10001, 10000, 10006, 10000, 10002, 10001, 10009, 10000, 10006, 10005, 10005, 10006, 10005, 10008, 10008, 10003, 10010, 10007, 10005, 10003, 10001, 10000, 10006, 10007, 10006, 10004, 10003, 10009, 10001, 10009, 10007, 10006, 10007, 10000, 10001, 10010, 10007, 10003, 10003, 10002, 10007, 10001, 10004, 10009, 10000, 10010, 10000, 10009, 10009, 10004, 10006, 10009, 10008, 10003, 10007, 10010, 10007, 10006, 10000, 10001, 10003, 10000, 10005, 10004, 10006, 10007, 10005, 10009, 10008, 10003, 10004, 10008, 10005, 10008, 10010, 10010, 10008, 10005, 10009, 10004, 10009, 10000, 10006, 10006, 10006, 10000, 10000, 10002, 10006, 10009, 10004, 10007, 10000, 10009, 10002, 10000, 10005, 10002, 10006, 10005, 10006, 10006, 10003, 10002, 10000, 10000, 10001, 10001, 10002, 10005, 10004, 10003, 10007, 10003, 10003, 10005, 10006, 10003, 10008, 10004, 10004, 10010, 10008, 10007, 10006, 10005, 10009, 10009, 10009, 10009, 10008, 10010, 10004, 10001, 10001, 10000, 10006, 10010, 10000, 10010, 10000, 10007, 10002, 10006, 10010, 10005, 10007, 10000, 10008, 10004, 10008, 10007, 10007]) == 4605', 'assert numberOfSubarrays([10006, 10008, 10000, 10000, 10003, 10007, 10009, 10004, 10008, 10004, 10008, 10009, 10006, 10006, 10006, 10001, 10002, 10002, 10004, 10005, 10010, 10001, 10002, 10005, 10002, 10005, 10000, 10000, 10003, 10010, 10010, 10010, 10000, 10010, 10009, 10007, 10006, 10004, 10001, 10000, 10003, 10009, 10009, 10009, 10000, 10001, 10008, 10010, 10010, 10002, 10000, 10001, 10006, 10004, 10010, 10007, 10007, 10004, 10002, 10004, 10010, 10002, 10002, 10010, 10009, 10009, 10006, 10009, 10005, 10000, 10007, 10010, 10003, 10001, 10005, 10004, 10007, 10001, 10005, 10005, 10002, 10000, 10001, 10009, 10000, 10006, 10008, 10009, 10004, 10006, 10002, 10000, 10005, 10001, 10008, 10006, 10002, 10000, 10002, 10000, 10009, 10003, 10007, 10007, 10010, 10001, 10001, 10003, 10001, 10006, 10010, 10008, 10004, 10003, 10002, 10009, 10001, 10000, 10003, 10003, 10007, 10008, 10003, 10010, 10005, 10001, 10003, 10008, 10007, 10010, 10002, 10008, 10006, 10010, 10001, 10008, 10003, 10001, 10007, 10003, 10004, 10006, 10008, 10010, 10008, 10007, 10005, 10000, 10007, 10002, 10002, 10010, 10003, 10003, 10010, 10004, 10005, 10006, 10000, 10004, 10008, 10006, 10003, 10005, 10010, 10003, 10000, 10005, 10008, 10009, 10000, 10001, 10000, 10010, 10000, 10007, 10009, 10010, 10003, 10001, 10008, 10004, 10008, 10009, 10006, 10004, 10000, 10002, 10010, 10004, 10005, 10002, 10006, 10009, 10002, 10009, 10007, 10007, 10007, 10004, 10009, 10000, 10010, 10004, 10004, 10003, 10009, 10008, 10007, 10004, 10000, 10006, 10002, 10009, 10008, 10003, 10010, 10006, 10003, 10001, 10003, 10003, 10010, 10003, 10005, 10008, 10001, 10000, 10001, 10004, 10006, 10009, 10002, 10001, 10005, 10002, 10009, 10009, 10001, 10007, 10004, 10002, 10010, 10008, 10006, 10006, 10007, 10010, 10006, 10002, 10009, 10006, 10006, 10009, 10002, 10001, 10005, 10005, 10003, 10000, 10004, 10004, 10007, 10010, 10004, 10001, 10009, 10006, 10007, 10000, 10001, 10010, 10002, 10005, 10005, 10001, 10003, 10008, 10005, 10000, 10001, 10002, 10005, 10000, 10008, 10007, 10010, 10006, 10005, 10007, 10002, 10002, 10006, 10005, 10004, 10010, 10008, 10000, 10006, 10000, 10002, 10003, 10005, 10010, 10006, 10008, 10003, 10003, 10008, 10009, 10000, 10006, 10004, 10003, 10000, 10004, 10001, 10004, 10006, 10008, 10009, 10008, 10007, 10009, 10005, 10005, 10005, 10005, 10002, 10003, 10010, 10002, 10005, 10010, 10010, 10007, 10001, 10000, 10009, 10003, 10007, 10001, 10001, 10002, 10005, 10007, 10010, 10000, 10006, 10001, 10007, 10005, 10000, 10007, 10008, 10001, 10003, 10008, 10002, 10005, 10003, 10009, 10007, 10000, 10001, 10006, 10007, 10006, 10006, 10006, 10002, 10009, 10007, 10008, 10004, 10003, 10000, 10004, 10000, 10010, 10002, 10002, 10003, 10010, 10000, 10005, 10010, 10006, 10001, 10003, 10007, 10000, 10010, 10010, 10000, 10002, 10000, 10008, 10008, 10000, 10009, 10010, 10004, 10008, 10000, 10005, 10002, 10004, 10002, 10008, 10002, 10002, 10001, 10010, 10009, 10009, 10001, 10003, 10001, 10006, 10003, 10002, 10001, 10003, 10006, 10007, 10006, 10003, 10000, 10001, 10009, 10007, 10002, 10005, 10010, 10004, 10004, 10007, 10002, 10004, 10008, 10007, 10003, 10005, 10004, 10008, 10000, 10003, 10006, 10001, 10009, 10007, 10005, 10009, 10005, 10004, 10002, 10002, 10010, 10005, 10004, 10000, 10006, 10008, 10006, 10001, 10003, 10009, 10002, 10000, 10008, 10008, 10005, 10003, 10009, 10000, 10006, 10005, 10003, 10005, 10000, 10010, 10008, 10008, 10010, 10002, 10007, 10010, 10003, 10007, 10001, 10005, 10003, 10009, 10005, 10006, 10009, 10009, 10000, 10009, 10009, 10006, 10003, 10009, 10009, 10000, 10003, 10008, 10000, 10007, 10002, 10003, 10003, 10008, 10007, 10000, 10004, 10005, 10002, 10005, 10009, 10003, 10001, 10001, 10002, 10006, 10001, 10000, 10006, 10008, 10009, 10009, 10001, 10004, 10003, 10004, 10000, 10000, 10004, 10008, 10001, 10009, 10008, 10010, 10009, 10000, 10009, 10004, 10003, 10006, 10000, 10008, 10006, 10002, 10009, 10007, 10003, 10006, 10009, 10007, 10005, 10002, 10000, 10010, 10000, 10002, 10001, 10003, 10000, 10010, 10009, 10004, 10006, 10000, 10000, 10005, 10004, 10005, 10005, 10008, 10009, 10010, 10003, 10001, 10006, 10002, 10007, 10007, 10010, 10008, 10003, 10002, 10002, 10010, 10007, 10001, 10004, 10004, 10008, 10002, 10006, 10006, 10004, 10002, 10003, 10001, 10006, 10001, 10002, 10002, 10006, 10001, 10000, 10005, 10002, 10006, 10004, 10004, 10010, 10010, 10008, 10001, 10004, 10007, 10002, 10001, 10005, 10005, 10004, 10006, 10006, 10002, 10010, 10002, 10010, 10006, 10008, 10009, 10003, 10001, 10007, 10005, 10002, 10005, 10004, 10004, 10009, 10006, 10006, 10008, 10007, 10001, 10009, 10010, 10000, 10005, 10003, 10003, 10007, 10003, 10007, 10005, 10007, 10007, 10005, 10000, 10002, 10004, 10002, 10002, 10007, 10010, 10001, 10008, 10006, 10002, 10007, 10010, 10007, 10002, 10001, 10010, 10000, 10005, 10003, 10007, 10002, 10008, 10001, 10005, 10003, 10006, 10003, 10006, 10006, 10003, 10007, 10008, 10001, 10005, 10001, 10009, 10000, 10003, 10009, 10006, 10001, 10010, 10008, 10006, 10006, 10006, 10002, 10002, 10003, 10007, 10004, 10004, 10000, 10010, 10000, 10001, 10009, 10003, 10009, 10009, 10005, 10007, 10004, 10003, 10009, 10005, 10000, 10004, 10006, 10005, 10009, 10007, 10004, 10000, 10010, 10001, 10008, 10002, 10002, 10010, 10006, 10004, 10005, 10004, 10008, 10005, 10010, 10003, 10001, 10000, 10002, 10008, 10006, 10010, 10010, 10001, 10007, 10000, 10005, 10000, 10002, 10005, 10008, 10003, 10008, 10005, 10001, 10002, 10002, 10001, 10009, 10004, 10002, 10002, 10010, 10001, 10002, 10001, 10001, 10004, 10002, 10005, 10009, 10001, 10001, 10010, 10001, 10001, 10010, 10005, 10002, 10007, 10010, 10010, 10001, 10008, 10004, 10008, 10004, 10010, 10010, 10002, 10003, 10008, 10000, 10007, 10000, 10006, 10006, 10005, 10010, 10008, 10007, 10000, 10005, 10006, 10005, 10009, 10003, 10004, 10002, 10000, 10000, 10009, 10004, 10009, 10008, 10002, 10008, 10009, 10006, 10004, 10006, 10000, 10008, 10003, 10002, 10005, 10005, 10005, 10002, 10002, 10009, 10004, 10004, 10004, 10010, 10000, 10001, 10000, 10005, 10003, 10005, 10010, 10003, 10009, 10008, 10003, 10007, 10006, 10000, 10010, 10004, 10005, 10008, 10009, 10008, 10000, 10007, 10010, 10000, 10005, 10004, 10004, 10002, 10005, 10004, 10010, 10004, 10002, 10003, 10006, 10000, 10010, 10008, 10002, 10010, 10009, 10000, 10001, 10007, 10006, 10006, 10006, 10005, 10006, 10008, 10009, 10001, 10001, 10010, 10010, 10010, 10007, 10004, 10000, 10009, 10009, 10006, 10010, 10010, 10001, 10003, 10002, 10004, 10009, 10010, 10002, 10001, 10009, 10006, 10003, 10006, 10004, 10001, 10010, 10001, 10009, 10001, 10006, 10002, 10002, 10003, 10010, 10003, 10005, 10005, 10007, 10010, 10003, 10005, 10002, 10003, 10001, 10007, 10004, 10008, 10002, 10007, 10005, 10008, 10005, 10010, 10003, 10000, 10002, 10000, 10008, 10007, 10005, 10002, 10000, 10006, 10010, 10007, 10007, 10010, 10006, 10000, 10000, 10003, 10007, 10008, 10005, 10006, 10000, 10001, 10010, 10005, 10010, 10003, 10005, 10003, 10000, 10001, 10004, 10003, 10005, 10003, 10003, 10003, 10009, 10005, 10006]) == 6133', 'assert numberOfSubarrays([10009, 10007, 10004, 10002, 10010, 10008, 10010, 10005, 10008, 10004, 10002, 10009, 10004, 10004, 10009, 10009, 10010, 10004, 10004, 10008, 10005, 10000, 10000, 10007, 10003, 10004, 10002, 10008, 10003, 10008, 10008, 10002, 10001, 10009, 10006, 10004, 10009, 10007, 10008, 10008, 10001, 10006, 10009, 10006, 10002, 10003, 10000, 10000, 10007, 10010, 10001, 10002, 10002, 10007, 10003, 10010, 10005, 10002, 10006, 10002, 10007, 10008, 10005, 10010, 10003, 10007, 10003, 10009, 10005, 10002, 10003, 10009, 10004, 10010, 10003, 10005, 10006, 10004, 10003, 10003, 10002, 10010, 10001, 10002, 10005, 10007, 10002, 10006, 10007, 10003, 10010, 10000, 10010, 10009, 10007, 10009, 10003, 10009, 10002, 10007, 10000, 10009, 10000, 10010, 10000, 10008, 10010, 10002, 10008, 10007, 10001, 10006, 10000, 10000, 10004, 10001, 10004, 10003, 10003, 10004, 10007, 10010, 10004, 10007, 10006, 10008, 10004, 10000, 10007, 10004, 10009, 10009, 10008, 10006, 10007, 10003, 10006, 10003, 10003, 10010, 10005, 10003, 10003, 10010, 10001, 10002, 10010, 10007, 10001, 10007, 10004, 10005, 10000, 10009, 10005, 10005, 10007, 10003, 10002, 10010, 10002, 10002, 10006, 10007, 10002, 10009, 10000, 10004, 10005, 10004, 10006, 10004, 10009, 10008, 10009, 10010, 10007, 10008, 10009, 10008, 10004, 10003, 10004, 10005, 10009, 10010, 10007, 10010, 10006, 10002, 10008, 10006, 10009, 10010, 10004, 10006, 10008, 10001, 10010, 10001, 10004, 10008, 10001, 10009, 10009, 10010, 10004, 10007, 10010, 10008, 10007, 10002, 10007, 10006, 10000, 10004, 10002, 10005, 10004, 10006, 10004, 10009, 10008, 10005, 10006, 10006, 10001, 10006, 10006, 10002, 10005, 10001, 10007, 10006, 10000, 10007, 10005, 10008, 10009, 10006, 10002, 10003, 10002, 10004, 10003, 10004, 10001, 10004, 10002, 10005, 10004, 10005, 10002, 10006, 10003, 10002, 10000, 10009, 10001, 10003, 10010, 10008, 10010, 10001, 10010, 10004, 10009, 10008, 10003, 10008, 10007, 10010, 10002, 10010, 10004, 10005, 10001, 10004, 10008, 10002, 10008, 10001, 10001, 10002, 10009, 10009, 10003, 10009, 10006, 10000, 10002, 10003, 10000, 10006, 10008, 10000, 10009, 10006, 10004, 10000, 10009, 10002, 10004, 10004, 10002, 10003, 10007, 10002, 10005, 10007, 10007, 10001, 10009, 10002, 10003, 10010, 10002, 10006, 10006, 10001, 10004, 10006, 10008, 10008, 10005, 10003, 10000, 10006, 10009, 10004, 10007, 10004, 10000, 10007, 10006, 10008, 10003, 10005, 10006, 10008, 10007, 10008, 10002, 10009, 10003, 10000, 10009, 10004, 10001, 10002, 10006, 10003, 10001, 10001, 10003, 10010, 10007, 10003, 10003, 10007, 10009, 10004, 10001, 10005, 10007, 10010, 10000, 10003, 10010, 10010, 10004, 10005, 10007, 10009, 10001, 10000, 10005, 10009, 10009, 10002, 10006, 10003, 10000, 10008, 10009, 10002, 10005, 10001, 10000, 10001, 10003, 10006, 10005, 10006, 10002, 10002, 10004, 10001, 10006, 10005, 10005, 10004, 10001, 10002, 10010, 10002, 10004, 10006, 10010, 10002, 10010, 10003, 10001, 10003, 10008, 10000, 10001, 10010, 10010, 10007, 10007, 10001, 10003, 10001, 10009, 10004, 10008, 10001, 10005, 10005, 10003, 10008, 10003, 10010, 10002, 10001, 10002, 10008, 10001, 10002, 10001, 10006, 10009, 10007, 10003, 10001, 10002, 10007, 10002, 10008, 10010, 10005, 10003, 10003, 10004, 10006, 10001, 10010, 10002, 10001, 10007, 10007, 10002, 10008, 10004, 10006, 10004, 10005, 10005, 10006, 10009, 10000, 10003, 10006, 10004, 10010, 10010, 10007, 10008, 10008, 10003, 10010, 10007, 10001, 10004, 10003, 10002, 10004, 10010, 10007, 10010, 10008, 10001, 10007, 10003, 10000, 10009, 10006, 10002, 10006, 10007, 10004, 10000, 10002, 10007, 10004, 10010, 10001, 10003, 10002, 10003, 10001, 10008, 10002, 10000, 10000, 10004, 10006, 10000, 10004, 10010, 10001, 10003, 10010, 10004, 10000, 10004, 10002, 10003, 10005, 10005, 10005, 10002, 10007, 10009, 10002, 10008, 10006, 10007, 10004, 10007, 10001, 10005, 10010, 10010, 10002, 10010, 10010, 10007, 10008, 10003, 10000, 10008, 10007, 10006, 10003, 10000, 10004, 10006, 10002, 10010, 10008, 10008, 10002, 10002, 10002, 10009, 10003, 10006, 10005, 10004, 10006, 10008, 10009, 10002, 10005, 10007, 10001, 10001, 10004, 10000, 10008, 10008, 10004, 10001, 10005, 10004, 10002, 10003, 10006, 10001, 10005, 10004, 10007, 10002, 10002, 10007, 10006, 10005, 10009, 10010, 10009, 10003, 10009, 10010, 10003, 10006, 10004, 10007, 10000, 10004, 10000, 10006, 10010, 10006, 10005, 10004, 10005, 10008, 10007, 10001, 10009, 10010, 10004, 10005, 10006, 10000, 10005, 10002, 10007, 10006, 10008, 10008, 10006, 10010, 10000, 10009, 10010, 10002, 10007, 10010, 10008, 10001, 10002, 10002, 10008, 10004, 10006, 10001, 10001, 10006, 10003, 10004, 10007, 10007, 10004, 10008, 10002, 10001, 10002, 10008, 10001, 10000, 10010, 10005, 10005, 10001, 10009, 10010, 10003, 10010, 10010, 10008, 10010, 10007, 10008, 10000, 10005, 10000, 10005, 10000, 10008, 10007, 10004, 10000, 10005, 10004, 10004, 10002, 10008, 10007, 10000, 10003, 10010, 10001, 10007, 10000, 10002, 10009, 10002, 10005, 10010, 10000, 10003, 10003, 10005, 10001, 10006, 10009, 10007, 10001, 10000, 10000, 10006, 10003, 10002, 10008, 10000, 10003, 10001, 10006, 10005, 10001, 10001, 10005, 10004, 10005, 10007, 10006, 10001, 10003, 10005, 10010, 10001, 10000, 10002, 10008, 10000, 10010, 10008, 10001, 10001, 10000, 10004, 10009, 10009, 10008, 10004, 10007, 10002, 10003, 10006, 10003, 10004, 10009, 10007, 10009, 10010, 10008, 10009, 10001, 10005, 10003, 10004, 10001, 10005, 10005, 10008, 10008, 10001, 10002, 10006, 10000, 10008, 10006, 10007, 10006, 10010, 10008, 10004, 10001, 10007, 10001, 10007, 10006, 10002, 10009, 10008, 10005, 10003, 10005, 10005, 10006, 10002, 10001, 10010, 10006, 10008, 10006, 10008, 10003, 10003, 10000, 10006, 10009, 10002, 10001, 10008, 10003, 10010, 10002, 10008, 10000, 10008, 10008, 10007, 10007, 10002, 10004, 10009, 10001, 10000, 10004, 10005, 10001, 10010, 10006, 10010, 10009, 10007, 10004, 10003, 10008, 10002, 10006, 10007, 10001, 10008, 10004, 10000, 10006, 10002, 10009, 10006, 10000, 10010, 10008, 10010, 10000, 10008, 10009, 10009, 10007, 10007, 10003, 10008, 10005, 10006, 10006, 10000, 10007, 10009, 10000, 10008, 10009, 10000, 10002, 10010, 10008, 10003, 10007, 10000, 10001, 10009, 10005, 10010, 10008, 10003, 10005, 10001, 10004, 10005, 10002, 10004, 10004, 10003, 10010, 10006, 10005, 10003, 10007, 10002, 10008, 10007, 10002, 10003, 10000, 10006, 10007, 10006, 10002, 10000, 10005, 10009, 10008, 10002, 10009, 10004, 10010, 10008, 10000, 10004, 10004, 10006, 10006, 10004, 10010, 10006, 10002, 10010, 10000, 10003, 10006, 10003, 10006, 10003, 10009, 10005, 10002, 10002, 10010, 10007, 10004, 10002, 10004, 10004, 10002, 10004, 10006, 10005, 10005, 10008, 10007, 10009, 10000, 10010, 10007, 10005, 10000, 10001, 10001, 10006, 10001, 10010, 10009, 10001, 10008, 10006, 10009, 10007, 10006, 10003, 10007, 10003, 10009, 10004, 10002, 10008, 10001, 10010, 10000, 10002, 10000, 10003, 10001, 10001, 10007, 10007, 10004, 10008, 10004, 10008, 10007, 10010, 10004, 10006, 10010, 10009, 10010, 10006, 10004, 10005, 10009, 10004, 10004, 10007, 10009, 10003, 10001, 10005]) == 5418', 'assert numberOfSubarrays([10009, 10008, 10002, 10003, 10010, 10006, 10005, 10004, 10003, 10004, 10005, 10001, 10007, 10001, 10001, 10002, 10008, 10010, 10000, 10005, 10006, 10006, 10006, 10006, 10000, 10008, 10009, 10000, 10000, 10003, 10009, 10002, 10005, 10004, 10003, 10004, 10007, 10001, 10007, 10003, 10006, 10007, 10000, 10006, 10004, 10005, 10006, 10003, 10006, 10008, 10006, 10009, 10002, 10000, 10006, 10006, 10009, 10006, 10005, 10002, 10003, 10008, 10001, 10004, 10006, 10004, 10002, 10003, 10003, 10005, 10003, 10007, 10007, 10001, 10010, 10010, 10000, 10005, 10004, 10004, 10005, 10003, 10004, 10004, 10005, 10006, 10005, 10001, 10007, 10004, 10009, 10009, 10005, 10006, 10002, 10007, 10010, 10004, 10003, 10002, 10003, 10008, 10005, 10006, 10005, 10005, 10005, 10006, 10005, 10006, 10004, 10000, 10006, 10007, 10004, 10001, 10009, 10006, 10001, 10004, 10000, 10008, 10008, 10008, 10002, 10009, 10004, 10000, 10005, 10003, 10000, 10009, 10003, 10008, 10008, 10007, 10004, 10005, 10010, 10006, 10007, 10003, 10001, 10008, 10004, 10000, 10001, 10010, 10008, 10007, 10003, 10000, 10005, 10010, 10001, 10010, 10008, 10004, 10002, 10010, 10006, 10005, 10009, 10008, 10007, 10004, 10007, 10001, 10010, 10003, 10000, 10004, 10002, 10000, 10001, 10006, 10008, 10002, 10004, 10010, 10010, 10010, 10008, 10005, 10007, 10005, 10003, 10003, 10007, 10008, 10001, 10008, 10003, 10002, 10004, 10000, 10008, 10000, 10010, 10006, 10006, 10000, 10000, 10002, 10006, 10000, 10007, 10006, 10002, 10009, 10009, 10007, 10005, 10008, 10000, 10006, 10000, 10008, 10009, 10000, 10010, 10000, 10002, 10010, 10001, 10007, 10001, 10001, 10001, 10005, 10005, 10001, 10003, 10008, 10000, 10001, 10002, 10004, 10007, 10010, 10006, 10004, 10007, 10006, 10010, 10001, 10004, 10009, 10005, 10009, 10000, 10000, 10010, 10002, 10002, 10002, 10005, 10001, 10007, 10003, 10008, 10006, 10002, 10001, 10003, 10007, 10002, 10009, 10004, 10007, 10006, 10003, 10010, 10006, 10005, 10008, 10004, 10006, 10002, 10010, 10009, 10003, 10010, 10010, 10001, 10007, 10003, 10009, 10001, 10010, 10001, 10004, 10003, 10010, 10007, 10009, 10002, 10010, 10005, 10003, 10005, 10009, 10003, 10009, 10001, 10003, 10000, 10006, 10007, 10005, 10008, 10010, 10005, 10001, 10006, 10001, 10009, 10003, 10010, 10000, 10010, 10001, 10006, 10005, 10001, 10009, 10005, 10009, 10007, 10006, 10005, 10004, 10003, 10008, 10003, 10004, 10006, 10000, 10001, 10004, 10010, 10007, 10005, 10001, 10006, 10006, 10005, 10006, 10000, 10005, 10007, 10001, 10010, 10008, 10008, 10004, 10004, 10000, 10001, 10007, 10010, 10000, 10006, 10005, 10010, 10008, 10003, 10007, 10009, 10002, 10005, 10000, 10001, 10009, 10005, 10004, 10009, 10009, 10007, 10000, 10006, 10009, 10007, 10009, 10006, 10000, 10010, 10001, 10004, 10008, 10001, 10005, 10000, 10006, 10006, 10000, 10008, 10007, 10007, 10004, 10008, 10006, 10007, 10004, 10007, 10008, 10000, 10000, 10001, 10007, 10010, 10010, 10001, 10006, 10010, 10004, 10000, 10010, 10001, 10007, 10007, 10000, 10000, 10004, 10007, 10005, 10001, 10004, 10009, 10004, 10004, 10001, 10006, 10007, 10006, 10008, 10008, 10002, 10007, 10001, 10002, 10010, 10009, 10006, 10004, 10000, 10001, 10001, 10002, 10009, 10005, 10004, 10008, 10001, 10000, 10002, 10010, 10006, 10006, 10000, 10002, 10007, 10004, 10005, 10004, 10004, 10007, 10010, 10008, 10000, 10005, 10007, 10001, 10003, 10002, 10010, 10010, 10007, 10001, 10002, 10008, 10010, 10001, 10000, 10003, 10001, 10005, 10003, 10002, 10001, 10006, 10000, 10001, 10004, 10000, 10000, 10003, 10010, 10002, 10006, 10004, 10006, 10007, 10004, 10010, 10006, 10009, 10006, 10007, 10006, 10010, 10008, 10004, 10005, 10001, 10004, 10006, 10009, 10003, 10005, 10008, 10009, 10009, 10004, 10006, 10000, 10000, 10005, 10010, 10006, 10007, 10008, 10001, 10004, 10001, 10005, 10006, 10005, 10000, 10010, 10001, 10000, 10001, 10002, 10001, 10007, 10000, 10002, 10008, 10000, 10009, 10002, 10004, 10000, 10009, 10005, 10002, 10005, 10002, 10008, 10006, 10010, 10001, 10000, 10006, 10007, 10001, 10010, 10001, 10007, 10008, 10003, 10001, 10005, 10003, 10007, 10008, 10003, 10000, 10008, 10004, 10008, 10010, 10002, 10007, 10005, 10000, 10008, 10008, 10002, 10002, 10007, 10001, 10009, 10005, 10007, 10004, 10007, 10005, 10005, 10009, 10004, 10006, 10009, 10007, 10005, 10010, 10004, 10007, 10008, 10010, 10001, 10004, 10009, 10009, 10003, 10010, 10005, 10010, 10006, 10006, 10000, 10010, 10002, 10007, 10001, 10010, 10000, 10008, 10005, 10002, 10005, 10003, 10002, 10010, 10009, 10009, 10009, 10000, 10005, 10005, 10009, 10002, 10010, 10001, 10008, 10007, 10004, 10008, 10009, 10002, 10010, 10000, 10004, 10002, 10006, 10006, 10000, 10001, 10005, 10002, 10001, 10010, 10002, 10001, 10008, 10004, 10007, 10008, 10001, 10009, 10008, 10005, 10000, 10006, 10007, 10006, 10000, 10004, 10002, 10005, 10007, 10003, 10010, 10006, 10005, 10006, 10000, 10002, 10001, 10003, 10009, 10010, 10001, 10010, 10009, 10008, 10009, 10001, 10000, 10010, 10000, 10000, 10010, 10006, 10009, 10001, 10005, 10002, 10006, 10000, 10006, 10000, 10000, 10008, 10003, 10003, 10009, 10008, 10008, 10001, 10004, 10009, 10002, 10009, 10010, 10007, 10007, 10007, 10000, 10008, 10004, 10008, 10006, 10003, 10003, 10004, 10003, 10006, 10009, 10010, 10009, 10008, 10009, 10005, 10007, 10007, 10004, 10010, 10004, 10000, 10006, 10003, 10008, 10002, 10007, 10009, 10002, 10007, 10000, 10007, 10005, 10009, 10006, 10000, 10008, 10009, 10002, 10009, 10009, 10006, 10004, 10008, 10007, 10008, 10001, 10003, 10006, 10007, 10009, 10002, 10004, 10006, 10000, 10000, 10010, 10000, 10006, 10004, 10004, 10006, 10000, 10003, 10000, 10001, 10010, 10000, 10010, 10008, 10003, 10009, 10002, 10010, 10001, 10007, 10004, 10009, 10004, 10007, 10000, 10002, 10001, 10009, 10009, 10000, 10001, 10010, 10008, 10008, 10002, 10001, 10004, 10006, 10007, 10001, 10006, 10009, 10003, 10010, 10007, 10010, 10008, 10002, 10000, 10001, 10002, 10006, 10009, 10005, 10002, 10001, 10005, 10008, 10001, 10010, 10010, 10010, 10008, 10004, 10009, 10006, 10004, 10003, 10001, 10004, 10008, 10004, 10001, 10007, 10001, 10003, 10009, 10004, 10007, 10006, 10000, 10001, 10009, 10007, 10000, 10002, 10000, 10008, 10009, 10009, 10005, 10005, 10010, 10000, 10010, 10004, 10009, 10005, 10000, 10004, 10004, 10006, 10010, 10003, 10002, 10001, 10003, 10009, 10010, 10003, 10005, 10001, 10001, 10005, 10002, 10007, 10005, 10009, 10010, 10001, 10010, 10008, 10002, 10008, 10006, 10008, 10010, 10010, 10002, 10009, 10002, 10008, 10010, 10004, 10006, 10007, 10008, 10006, 10007, 10002, 10008, 10006, 10005, 10003, 10001, 10004, 10000, 10010, 10009, 10004, 10008, 10008, 10010, 10000, 10007, 10008, 10000, 10001, 10006, 10001, 10003, 10003, 10007, 10009, 10005, 10001, 10004, 10003, 10001, 10004, 10007, 10007, 10002, 10004, 10005, 10004, 10003, 10008, 10003, 10005, 10002, 10004, 10002, 10005, 10007, 10010, 10008, 10000, 10009, 10008, 10003, 10000, 10001, 10004, 10000, 10009, 10006, 10004, 10000, 10009, 10010, 10001, 10009, 10003, 10004, 10008, 10010, 10001, 10006, 10001, 10009, 10010, 10005, 10006, 10005]) == 5791']
correct = 0
for t in tests:
    try:
        exec(t)
        correct+=1
    except:
        pass
success = len(tests) == correct
print(correct,'/',len(tests))
print(success)