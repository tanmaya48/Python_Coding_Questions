from question import minimumAddedInteger
tests = ['assert minimumAddedInteger([4, 20, 16, 12, 8], [14, 18, 10]) == -2', 'assert minimumAddedInteger([3, 5, 5, 3], [7, 7]) == 2', 'assert minimumAddedInteger([4, 7, 5], [5]) == -2', 'assert minimumAddedInteger([4, 6, 3, 1, 4, 2, 10, 9, 5], [5, 10, 3, 2, 6, 1, 9]) == 0', 'assert minimumAddedInteger([3, 5, 4], [1]) == -4', 'assert minimumAddedInteger([10, 2, 8, 7, 5, 6, 7, 10], [5, 8, 5, 3, 8, 4]) == -2', 'assert minimumAddedInteger([7, 2, 6, 8, 7], [7, 6, 5]) == -1', 'assert minimumAddedInteger([7, 9, 1, 4], [0, 8]) == -1', 'assert minimumAddedInteger([2, 9, 4, 2, 10, 5, 8, 7, 10], [8, 3, 5, 6, 7, 0, 8]) == -2', 'assert minimumAddedInteger([6, 8, 4, 5, 5, 7], [7, 5, 8, 5]) == 0', 'assert minimumAddedInteger([0, 7, 6, 5, 7, 0, 6, 8, 2, 7], [6, 7, 8, 0, 5, 2, 7, 0]) == 0', 'assert minimumAddedInteger([9, 7, 2, 6, 4, 10, 8, 10, 4], [8, 2, 0, 6, 8, 7, 5]) == -2', 'assert minimumAddedInteger([9, 4, 3, 9, 4], [7, 8, 8]) == 4', 'assert minimumAddedInteger([9, 1, 5, 5, 7, 4, 4, 2, 7, 2], [8, 10, 5, 2, 5, 3, 8, 3]) == 1', 'assert minimumAddedInteger([8, 2, 3, 8, 3, 3, 4, 5, 10], [2, 1, 9, 2, 7, 2, 4]) == -1', 'assert minimumAddedInteger([9, 4, 2], [2]) == -7', 'assert minimumAddedInteger([6, 4, 8, 7, 9, 1, 7, 0], [8, 10, 8, 5, 2, 1]) == 1', 'assert minimumAddedInteger([8, 3, 5], [9]) == 1', 'assert minimumAddedInteger([3, 2, 8, 5, 10, 1, 10, 1, 3], [9, 0, 2, 0, 7, 4, 9]) == -1', 'assert minimumAddedInteger([6, 6, 0], [5]) == -1', 'assert minimumAddedInteger([7, 6, 6, 4, 10, 7, 0], [6, 4, 7, 10, 0]) == 0', 'assert minimumAddedInteger([8, 2, 2, 8, 7, 8, 1, 5], [6, 9, 9, 2, 3, 9]) == 1', 'assert minimumAddedInteger([3, 8, 8, 1, 6], [7, 2, 9]) == 1', 'assert minimumAddedInteger([3, 8, 8, 3, 9, 10, 4, 4, 10, 7], [6, 9, 8, 7, 2, 7, 3, 3]) == -1', 'assert minimumAddedInteger([2, 3, 2, 8], [8, 2]) == 0', 'assert minimumAddedInteger([7, 8, 4, 1, 5], [4, 0, 3]) == -4', 'assert minimumAddedInteger([3, 0, 1, 8, 9, 4, 7], [4, 10, 5, 1, 8]) == 1', 'assert minimumAddedInteger([8, 3, 2, 0, 9], [9, 10, 1]) == 1', 'assert minimumAddedInteger([9, 0, 3], [0]) == -9', 'assert minimumAddedInteger([7, 10, 3, 0, 1, 5, 0, 6, 9, 9], [1, 7, 10, 3, 6, 5, 0, 9]) == 0', 'assert minimumAddedInteger([6, 10, 2, 8, 9, 4], [8, 6, 4, 10]) == 0', 'assert minimumAddedInteger([9, 6, 9], [0]) == -9', 'assert minimumAddedInteger([7, 8, 6, 4, 8, 9, 7, 8, 8, 5], [8, 9, 9, 8, 9, 10, 5, 6]) == 1', 'assert minimumAddedInteger([9, 6, 1, 5, 0, 1], [8, 0, 4, 0]) == -1', 'assert minimumAddedInteger([2, 10, 8], [1]) == -9', 'assert minimumAddedInteger([6, 9, 2, 3, 1, 1], [9, 3, 1, 1]) == 0', 'assert minimumAddedInteger([5, 9, 8, 8, 9, 6, 9], [7, 7, 8, 8, 5]) == -1', 'assert minimumAddedInteger([5, 2, 6, 9, 0, 10, 8, 10], [3, 8, 8, 0, 4, 7]) == -2', 'assert minimumAddedInteger([2, 5, 0, 3], [3, 8]) == 3', 'assert minimumAddedInteger([4, 10, 4, 6], [0, 2]) == -4', 'assert minimumAddedInteger([0, 3, 0, 9, 4, 0, 4, 9, 8], [8, 0, 0, 4, 9, 3, 0]) == 0', 'assert minimumAddedInteger([2, 7, 9, 0, 0, 2, 0, 2, 10], [1, 10, 3, 1, 3, 8, 1]) == 1', 'assert minimumAddedInteger([6, 8, 0, 8, 5, 2, 4, 10, 10, 3], [6, 8, 5, 10, 10, 4, 2, 3]) == 0', 'assert minimumAddedInteger([5, 9, 1, 6, 9, 8, 7, 4, 4, 3], [10, 5, 8, 2, 9, 5, 4, 7]) == 1', 'assert minimumAddedInteger([9, 9, 1, 1, 1], [5, 5, 5]) == 4', 'assert minimumAddedInteger([6, 10, 9, 5, 6, 1], [9, 6, 10, 1]) == 0', 'assert minimumAddedInteger([10, 7, 1], [3]) == -7', 'assert minimumAddedInteger([8, 8, 8, 3, 10, 9, 9], [8, 7, 8, 9, 2]) == -1', 'assert minimumAddedInteger([2, 9, 3, 4, 9, 5, 7, 6, 2, 4], [4, 5, 2, 7, 2, 0, 0, 3]) == -2', 'assert minimumAddedInteger([3, 5, 10, 9, 9, 4], [1, 6, 6, 0]) == -3', 'assert minimumAddedInteger([5, 1, 2, 6, 8, 3, 8, 0], [8, 10, 7, 5, 10, 4]) == 2', 'assert minimumAddedInteger([0, 1, 10, 9, 6, 6, 3, 0, 3, 6], [7, 1, 10, 7, 4, 7, 1, 4]) == 1', 'assert minimumAddedInteger([9, 10, 0, 7, 8, 0], [0, 8, 7, 0]) == 0', 'assert minimumAddedInteger([9, 3, 5, 10, 10, 10, 7], [10, 10, 5, 10, 7]) == 0', 'assert minimumAddedInteger([3, 4, 0, 2, 6, 10, 0, 2, 1, 2], [0, 2, 10, 3, 6, 0, 4, 2]) == 0', 'assert minimumAddedInteger([3, 0, 3, 5, 3], [10, 10, 10]) == 7', 'assert minimumAddedInteger([7, 10, 9, 2, 5, 8, 1, 0, 4, 0], [10, 1, 2, 1, 6, 3, 9, 8]) == 1', 'assert minimumAddedInteger([4, 10, 0, 3, 1], [10, 7, 9]) == 6', 'assert minimumAddedInteger([6, 9, 3, 10, 9, 9, 5, 10], [4, 8, 8, 9, 2, 9]) == -1', 'assert minimumAddedInteger([4, 4, 5, 6, 0, 8, 0, 10, 5, 9], [5, 0, 9, 0, 6, 4, 10, 8]) == 0', 'assert minimumAddedInteger([1, 3, 5, 3], [6, 8]) == 3', 'assert minimumAddedInteger([9, 6, 7, 7, 7, 7, 10, 5], [5, 1, 2, 3, 3, 6]) == -4', 'assert minimumAddedInteger([7, 3, 1, 2, 0], [5, 6, 3]) == 3', 'assert minimumAddedInteger([6, 10, 4, 10], [9, 9]) == -1', 'assert minimumAddedInteger([1, 5, 6, 1, 3, 6, 4, 1, 2], [5, 3, 2, 0, 4, 1, 5]) == -1', 'assert minimumAddedInteger([4, 5, 4, 0, 4, 10, 3, 8, 3], [4, 8, 10, 0, 3, 4, 3]) == 0', 'assert minimumAddedInteger([7, 5, 7, 7, 1, 1, 8], [6, 8, 9, 8, 2]) == 1', 'assert minimumAddedInteger([10, 8, 10, 6, 7, 7, 10, 5, 9, 0], [7, 8, 10, 9, 0, 7, 10, 6]) == 0', 'assert minimumAddedInteger([8, 1, 8, 9, 9, 8, 6], [5, 4, 5, 2, 4]) == -4', 'assert minimumAddedInteger([6, 1, 8, 7, 8, 2, 8], [9, 7, 3, 8, 9]) == 1', 'assert minimumAddedInteger([2, 7, 5, 3, 6, 10, 5, 1, 2, 3], [4, 9, 6, 0, 2, 2, 1, 4]) == -1', 'assert minimumAddedInteger([0, 5, 4, 4, 4, 8, 5, 8], [1, 2, 5, 2, 1, 1]) == -3', 'assert minimumAddedInteger([1, 9, 6, 8, 4], [8, 6, 1]) == 0', 'assert minimumAddedInteger([5, 0, 3, 4, 9, 3, 5, 1], [0, 4, 8, 3, 2, 2]) == -1', 'assert minimumAddedInteger([2, 1, 1, 0, 9, 6, 9, 9, 0], [10, 1, 10, 1, 7, 2, 10]) == 1', 'assert minimumAddedInteger([4, 3, 2], [0]) == -4', 'assert minimumAddedInteger([4, 6, 1, 8, 0, 1, 5, 5, 7], [7, 6, 2, 2, 1, 8, 6]) == 1', 'assert minimumAddedInteger([1, 8, 6, 10, 1, 7, 9, 4, 3], [6, 0, 3, 0, 2, 9, 7]) == -1', 'assert minimumAddedInteger([4, 6, 2, 9, 1, 7, 8, 8], [1, 8, 6, 0, 3, 5]) == -1', 'assert minimumAddedInteger([3, 9, 3, 0, 0, 8, 3, 4, 6], [9, 3, 6, 4, 8, 0, 0]) == 0', 'assert minimumAddedInteger([2, 10, 10, 3, 7], [1, 5, 8]) == -2', 'assert minimumAddedInteger([0, 1, 10, 4, 9, 10, 7], [10, 1, 4, 10, 9]) == 0', 'assert minimumAddedInteger([9, 1, 1, 3, 3, 1, 3, 9], [1, 3, 9, 1, 1, 3]) == 0', 'assert minimumAddedInteger([1, 6, 0, 3, 2, 8, 5, 1, 5, 9], [6, 3, 1, 7, 4, 9, 10, 2]) == 1', 'assert minimumAddedInteger([10, 2, 6, 5], [10, 2]) == 0', 'assert minimumAddedInteger([7, 7, 2, 9, 3, 9, 4, 7, 6], [3, 10, 4, 10, 7, 8, 5]) == 1', 'assert minimumAddedInteger([1, 1, 3, 8, 1, 0, 10, 3, 6], [3, 6, 1, 8, 1, 10, 3]) == 0', 'assert minimumAddedInteger([2, 7, 4, 7, 2, 0], [9, 9, 2, 6]) == 2', 'assert minimumAddedInteger([7, 0, 0, 0, 10], [8, 1, 1]) == 1', 'assert minimumAddedInteger([7, 4, 9, 10, 5, 6, 8], [4, 6, 7, 9, 5]) == -1', 'assert minimumAddedInteger([9, 3, 2, 1, 3, 7], [9, 2, 7, 1]) == 0', 'assert minimumAddedInteger([9, 2, 1, 2, 0], [1, 8, 1]) == -1', 'assert minimumAddedInteger([9, 5, 5, 10], [2, 7]) == -3', 'assert minimumAddedInteger([7, 0, 0, 9, 8, 9, 0, 4, 3], [9, 4, 9, 0, 8, 0, 3]) == 0', 'assert minimumAddedInteger([9, 2, 0, 7], [3, 10]) == 1', 'assert minimumAddedInteger([9, 9, 7, 1, 7, 9], [9, 7, 1, 9]) == 0', 'assert minimumAddedInteger([9, 9, 1, 9, 8, 4, 6], [5, 0, 5, 2, 4]) == -4', 'assert minimumAddedInteger([5, 5, 8, 7, 9, 8, 4], [9, 6, 5, 6, 9]) == 1', 'assert minimumAddedInteger([0, 7, 9, 8], [5, 4]) == -4', 'assert minimumAddedInteger([4, 1, 1, 7, 4, 2, 0, 2, 2, 2], [3, 5, 3, 3, 1, 2, 5, 3]) == 1', 'assert minimumAddedInteger([3, 3, 10, 5, 5, 1, 3, 9, 6], [8, 9, 6, 6, 4, 8, 6]) == 3', 'assert minimumAddedInteger([2, 3, 1, 9, 3, 5, 5], [3, 0, 7, 3, 1]) == -2', 'assert minimumAddedInteger([0, 9, 1, 1, 8, 7, 10], [3, 2, 9, 3, 10]) == 2', 'assert minimumAddedInteger([10, 8, 2], [6]) == -4', 'assert minimumAddedInteger([6, 9, 6, 1, 0, 1, 3, 1, 10], [10, 1, 6, 6, 9, 1, 1]) == 0', 'assert minimumAddedInteger([7, 3, 10, 5, 8, 8, 1, 1], [0, 4, 7, 6, 7, 0]) == -1', 'assert minimumAddedInteger([9, 1, 9, 5, 9, 3, 9, 9], [8, 4, 0, 2, 8, 8]) == -1', 'assert minimumAddedInteger([7, 7, 7], [6]) == -1', 'assert minimumAddedInteger([10, 10, 2, 8, 8, 10, 7, 7, 7], [8, 8, 5, 5, 6, 6, 0]) == -2', 'assert minimumAddedInteger([5, 4, 7, 0, 1, 8, 8, 7, 2, 1], [5, 8, 1, 7, 0, 8, 7, 4]) == 0', 'assert minimumAddedInteger([10, 8, 10], [5]) == -5', 'assert minimumAddedInteger([4, 5, 8, 9, 4], [0, 5, 0]) == -4', 'assert minimumAddedInteger([0, 1, 10], [9]) == -1', 'assert minimumAddedInteger([8, 10, 2, 2, 1, 4], [10, 2, 8, 1]) == 0', 'assert minimumAddedInteger([8, 5, 10, 6, 1], [5, 1, 0]) == -5', 'assert minimumAddedInteger([8, 2, 0, 9], [3, 1]) == 1', 'assert minimumAddedInteger([7, 0, 9, 5, 8, 10, 2, 5], [4, 1, 4, 6, 9, 7]) == -1', 'assert minimumAddedInteger([2, 9, 3], [5]) == -4', 'assert minimumAddedInteger([10, 6, 9, 7, 1, 7, 10, 0, 1], [9, 6, 6, 0, 0, 8, 9]) == -1', 'assert minimumAddedInteger([4, 8, 7, 0, 1], [0, 8, 1]) == 0', 'assert minimumAddedInteger([0, 8, 0, 7, 0, 0, 7], [1, 8, 8, 9, 1]) == 1', 'assert minimumAddedInteger([7, 10, 6, 1], [7, 4]) == -3', 'assert minimumAddedInteger([0, 10, 9, 0, 4, 5, 8, 9], [0, 5, 9, 4, 8, 10]) == 0', 'assert minimumAddedInteger([6, 2, 10, 1, 5, 2, 1, 8, 5, 8], [1, 4, 9, 1, 5, 0, 4, 0]) == -1', 'assert minimumAddedInteger([7, 9, 0, 8, 8, 5, 5, 3, 5, 10], [10, 8, 5, 9, 5, 3, 8, 0]) == 0', 'assert minimumAddedInteger([6, 3, 6, 7], [6, 2]) == -1', 'assert minimumAddedInteger([8, 8, 1], [5]) == -3', 'assert minimumAddedInteger([2, 9, 6, 5, 10, 10, 10, 3], [8, 1, 0, 8, 3, 8]) == -2', 'assert minimumAddedInteger([3, 5, 5, 10, 1, 3, 2, 2, 1], [1, 1, 4, 4, 9, 2, 0]) == -1', 'assert minimumAddedInteger([10, 7, 3, 2, 8, 1, 9, 8, 10, 8], [8, 1, 3, 10, 8, 7, 9, 2]) == 0', 'assert minimumAddedInteger([1, 1, 6, 3, 4, 10], [5, 2, 0, 9]) == -1', 'assert minimumAddedInteger([2, 3, 10, 9, 4, 8, 9], [1, 8, 6, 0, 2]) == -2', 'assert minimumAddedInteger([9, 2, 7, 0, 4, 2], [2, 9, 0, 7]) == 0', 'assert minimumAddedInteger([5, 4, 1, 7, 5, 1], [10, 8, 4, 4]) == 3', 'assert minimumAddedInteger([7, 10, 4, 5, 7, 6, 2], [4, 2, 3, 5, 0]) == -2', 'assert minimumAddedInteger([10, 6, 2, 0, 0], [1, 1, 3]) == 1', 'assert minimumAddedInteger([0, 7, 10, 8, 9, 9], [8, 9, 10, 10]) == 1', 'assert minimumAddedInteger([7, 10, 6, 2, 0], [2, 7, 0]) == 0', 'assert minimumAddedInteger([1, 3, 8], [6]) == -2', 'assert minimumAddedInteger([0, 1, 0, 6, 8, 4, 8, 1, 7, 0], [3, 3, 9, 8, 2, 10, 6, 10]) == 2', 'assert minimumAddedInteger([6, 6, 3, 7, 10, 3, 10], [3, 7, 7, 4, 0]) == -3', 'assert minimumAddedInteger([0, 3, 8], [8]) == 0', 'assert minimumAddedInteger([8, 8, 8], [6]) == -2', 'assert minimumAddedInteger([6, 7, 8, 0, 2, 8], [10, 9, 4, 10]) == 2', 'assert minimumAddedInteger([7, 0, 6, 8, 4, 8, 5, 5, 6, 1], [9, 7, 10, 8, 2, 3, 8, 7]) == 2', 'assert minimumAddedInteger([2, 3, 6, 9, 0, 7, 3, 7], [6, 5, 6, 2, 2, 8]) == -1', 'assert minimumAddedInteger([5, 4, 2, 7, 0, 0, 4, 3, 0], [5, 5, 1, 6, 8, 1, 3]) == 1', 'assert minimumAddedInteger([6, 3, 6, 10, 0, 7, 7, 7, 3, 5], [7, 0, 7, 7, 6, 5, 3, 10]) == 0', 'assert minimumAddedInteger([3, 1, 1, 0, 1, 1, 2, 4, 8], [2, 4, 3, 1, 8, 1, 1]) == 0', 'assert minimumAddedInteger([10, 8, 8, 6, 10, 2, 10], [8, 6, 0, 6, 4]) == -2', 'assert minimumAddedInteger([8, 8, 0], [0]) == -8', 'assert minimumAddedInteger([2, 2, 6, 7], [10, 5]) == 3', 'assert minimumAddedInteger([1, 4, 6, 10], [8, 2]) == -2', 'assert minimumAddedInteger([5, 1, 6, 4, 3], [4, 7, 8]) == 3', 'assert minimumAddedInteger([5, 10, 5, 3, 0, 5, 6, 9, 7, 0], [7, 6, 0, 5, 9, 3, 0, 5]) == 0', 'assert minimumAddedInteger([8, 8, 3, 10, 7, 3, 8, 9, 0], [8, 8, 10, 0, 7, 3, 3]) == 0', 'assert minimumAddedInteger([8, 10, 7], [0]) == -10', 'assert minimumAddedInteger([0, 0, 8, 9, 1, 6, 7, 6, 0], [10, 8, 7, 2, 1, 7, 1]) == 1', 'assert minimumAddedInteger([10, 9, 10, 9], [10, 9]) == 0', 'assert minimumAddedInteger([4, 3, 2, 1, 8, 8, 3, 10, 10], [3, 9, 0, 9, 2, 7, 7]) == -1', 'assert minimumAddedInteger([8, 1, 1, 5], [2, 9]) == 1', 'assert minimumAddedInteger([7, 10, 5, 9, 8, 10, 1, 1], [0, 8, 7, 9, 9, 6]) == -1', 'assert minimumAddedInteger([2, 5, 8, 1, 9, 1, 10, 3, 1], [2, 3, 10, 1, 1, 9, 1]) == 0', 'assert minimumAddedInteger([4, 0, 1], [2]) == -2', 'assert minimumAddedInteger([6, 9, 9, 8, 1], [8, 6, 1]) == 0', 'assert minimumAddedInteger([8, 0, 8, 7, 6, 1, 4, 2, 0], [2, 6, 10, 10, 9, 4, 8]) == 2', 'assert minimumAddedInteger([2, 2, 3, 4], [9, 7]) == 5', 'assert minimumAddedInteger([3, 5, 3, 1, 5, 1, 3, 4], [5, 3, 3, 4, 5, 1]) == 0', 'assert minimumAddedInteger([5, 5, 0, 9, 3, 10, 9], [9, 9, 10, 5, 3]) == 0', 'assert minimumAddedInteger([7, 7, 3, 5, 7, 4, 5, 0], [8, 10, 3, 10, 7, 10]) == 3', 'assert minimumAddedInteger([0, 6, 0, 0, 4, 5, 1], [2, 1, 6, 7, 5]) == 1', 'assert minimumAddedInteger([5, 3, 8, 7, 4, 6, 2], [4, 5, 1, 2, 6]) == -2', 'assert minimumAddedInteger([4, 2, 9, 5, 7, 9, 2], [6, 3, 1, 4, 8]) == -1', 'assert minimumAddedInteger([4, 7, 6, 10, 5, 9], [4, 9, 10, 5]) == 0', 'assert minimumAddedInteger([8, 9, 9], [7]) == -2', 'assert minimumAddedInteger([9, 9, 2, 10, 5, 2, 3, 3, 7], [2, 8, 1, 9, 4, 6, 2]) == -1', 'assert minimumAddedInteger([2, 10, 9, 7, 7, 9, 4, 2, 5], [3, 9, 1, 6, 4, 8, 8]) == -1', 'assert minimumAddedInteger([3, 9, 5, 1, 3, 2, 0, 2, 6], [3, 5, 0, 1, 2, 9, 2]) == 0', 'assert minimumAddedInteger([3, 2, 9, 8, 10, 2, 9], [0, 1, 7, 8, 6]) == -2', 'assert minimumAddedInteger([2, 2, 4, 8, 9, 6, 10, 5, 4], [7, 8, 6, 3, 4, 0, 2]) == -2', 'assert minimumAddedInteger([6, 5, 4], [9]) == 3', 'assert minimumAddedInteger([3, 8, 3, 7, 10], [5, 8, 1]) == -2', 'assert minimumAddedInteger([10, 3, 8, 6, 9, 2, 3, 7, 10], [3, 3, 8, 10, 9, 7, 2]) == 0', 'assert minimumAddedInteger([7, 3, 3, 8, 1, 7, 6, 10], [9, 6, 7, 5, 2, 0]) == -1', 'assert minimumAddedInteger([2, 1, 10, 1, 5, 1, 6, 6, 5], [1, 1, 6, 5, 10, 6, 5]) == 0', 'assert minimumAddedInteger([1, 1, 2, 8, 7, 4, 9, 9, 9, 0], [2, 8, 9, 1, 1, 4, 0, 9]) == 0', 'assert minimumAddedInteger([3, 7, 9, 7, 9, 7, 4, 9, 8], [4, 8, 10, 9, 10, 10, 8]) == 1', 'assert minimumAddedInteger([10, 10, 8, 3], [7, 2]) == -1', 'assert minimumAddedInteger([6, 6, 6], [5]) == -1', 'assert minimumAddedInteger([1, 1, 8, 6, 9, 4], [8, 9, 4, 6]) == 0', 'assert minimumAddedInteger([6, 1, 6, 1, 8], [6, 8, 1]) == 0', 'assert minimumAddedInteger([7, 3, 5, 1], [5, 9]) == 2', 'assert minimumAddedInteger([3, 6, 9, 10, 0, 8, 2, 4], [0, 4, 8, 6, 10, 2]) == 0', 'assert minimumAddedInteger([10, 5, 2, 6, 2, 1, 10, 9, 4, 1], [9, 2, 1, 10, 4, 2, 1, 5]) == 0', 'assert minimumAddedInteger([3, 6, 5, 1, 7, 9, 0], [10, 6, 8, 1, 2]) == 1', 'assert minimumAddedInteger([9, 6, 6, 3, 10, 2, 5, 7], [10, 6, 6, 3, 9, 5]) == 0', 'assert minimumAddedInteger([3, 2, 9, 5, 3, 10, 5, 1, 7], [3, 1, 9, 5, 7, 10, 5]) == 0', 'assert minimumAddedInteger([7, 1, 8, 4, 9], [10, 6, 3]) == 2', 'assert minimumAddedInteger([10, 8, 3], [6]) == -4', 'assert minimumAddedInteger([7, 4, 2, 10, 5, 3], [2, 5, 4, 3]) == 0', 'assert minimumAddedInteger([7, 7, 5, 1, 8, 1, 9, 0], [5, 1, 9, 1, 0, 8]) == 0', 'assert minimumAddedInteger([4, 4, 7, 2, 8, 9, 8], [7, 5, 0, 6, 6]) == -2', 'assert minimumAddedInteger([7, 3, 0, 4, 7, 5, 6, 8, 3, 5], [10, 2, 9, 8, 9, 7, 5, 7]) == 2', 'assert minimumAddedInteger([10, 10, 1, 7, 6, 6, 0, 10, 5], [10, 10, 0, 10, 1, 5, 7]) == 0', 'assert minimumAddedInteger([0, 5, 9, 9, 10, 1, 5, 8, 7, 8], [9, 0, 1, 5, 5, 7, 8, 10]) == 0', 'assert minimumAddedInteger([3, 10, 10, 3, 7, 0, 3, 7], [7, 3, 7, 10, 0, 3]) == 0', 'assert minimumAddedInteger([7, 6, 5, 10, 7, 5, 10, 7, 4], [4, 9, 6, 5, 6, 3, 4]) == -1', 'assert minimumAddedInteger([0, 8, 3, 7, 0, 1, 5, 3], [3, 7, 1, 0, 0, 3]) == 0', 'assert minimumAddedInteger([4, 0, 5, 5, 2, 8], [5, 9, 7, 10]) == 5', 'assert minimumAddedInteger([7, 4, 4, 5, 8], [1, 2, 5]) == -3', 'assert minimumAddedInteger([5, 7, 7, 7, 2, 5, 6, 0], [7, 1, 8, 6, 3, 8]) == 1', 'assert minimumAddedInteger([10, 10, 4, 9, 7, 3, 0, 0, 8], [8, 4, 0, 10, 10, 3, 9]) == 0', 'assert minimumAddedInteger([2, 5, 3, 4, 0], [0, 2, 5]) == 0', 'assert minimumAddedInteger([2, 8, 6], [1]) == -7', 'assert minimumAddedInteger([10, 6, 7, 2, 7, 6, 10, 3, 3, 2], [6, 10, 10, 3, 7, 3, 6, 7]) == 0', 'assert minimumAddedInteger([5, 1, 6], [4]) == -2', 'assert minimumAddedInteger([5, 7, 2, 0, 4, 8], [1, 3, 8, 6]) == 1', 'assert minimumAddedInteger([7, 0, 5, 2, 1], [8, 1, 3]) == 1', 'assert minimumAddedInteger([4, 10, 4, 2, 3, 5, 2], [5, 4, 2, 2, 10]) == 0', 'assert minimumAddedInteger([2, 2, 8, 7, 3, 2, 10], [1, 6, 0, 8, 0]) == -2', 'assert minimumAddedInteger([10, 0, 6, 2, 6, 10, 0, 6, 6], [10, 10, 6, 0, 0, 6, 2]) == 0', 'assert minimumAddedInteger([7, 8, 8, 4, 7, 3, 3, 0, 7, 2], [7, 8, 7, 3, 3, 7, 0, 2]) == 0', 'assert minimumAddedInteger([2, 7, 2, 0, 3, 3, 1, 9, 10], [10, 1, 2, 7, 3, 2, 3]) == 0', 'assert minimumAddedInteger([8, 0, 8, 2, 9, 6, 6], [2, 6, 9, 6, 8]) == 0', 'assert minimumAddedInteger([6, 10, 10], [1]) == -9', 'assert minimumAddedInteger([8, 4, 4, 9, 1, 2, 0, 9], [1, 3, 9, 2, 10, 5]) == 1', 'assert minimumAddedInteger([2, 4, 1, 7, 1, 1, 0, 9], [0, 9, 7, 1, 1, 4]) == 0', 'assert minimumAddedInteger([6, 4, 2, 0, 10, 10, 9, 9], [5, 3, 9, 1, 9, 8]) == -1', 'assert minimumAddedInteger([0, 8, 9, 1, 3], [7, 5, 4]) == 4', 'assert minimumAddedInteger([1, 6, 4, 10, 10, 2, 10], [10, 10, 1, 4, 10]) == 0', 'assert minimumAddedInteger([2, 6, 5, 7, 8, 5], [5, 5, 8, 7]) == 0', 'assert minimumAddedInteger([4, 4, 2, 1, 1, 3], [3, 6, 5, 3]) == 2', 'assert minimumAddedInteger([4, 4, 9], [4]) == -5', 'assert minimumAddedInteger([5, 4, 1, 9, 8, 6, 7, 0, 10], [6, 8, 7, 1, 5, 10, 0]) == 0', 'assert minimumAddedInteger([5, 9, 10, 2, 6, 5, 9, 7, 8], [7, 4, 1, 5, 6, 8, 4]) == -1', 'assert minimumAddedInteger([8, 7, 2, 8, 8, 2], [9, 9, 3, 3]) == 1', 'assert minimumAddedInteger([3, 3, 4, 3, 0, 1, 6], [1, 7, 2, 4, 4]) == 1', 'assert minimumAddedInteger([1, 1, 3, 7, 1, 6, 5, 8], [2, 4, 2, 9, 2, 7]) == 1', 'assert minimumAddedInteger([4, 1, 8, 1, 1], [5, 9, 2]) == 1', 'assert minimumAddedInteger([4, 7, 6, 8, 0, 10, 7, 9], [0, 7, 10, 9, 8, 6]) == 0', 'assert minimumAddedInteger([7, 8, 3, 3, 3, 4, 9], [6, 2, 1, 7, 5]) == -2', 'assert minimumAddedInteger([9, 3, 6, 7], [8, 2]) == -1', 'assert minimumAddedInteger([3, 10, 0, 9, 0, 1, 4, 5, 4, 3], [1, 4, 5, 4, 5, 2, 10, 1]) == 1', 'assert minimumAddedInteger([3, 0, 6, 1, 1, 10, 3, 10, 0, 4], [6, 10, 1, 4, 1, 3, 10, 0]) == 0', 'assert minimumAddedInteger([1, 1, 7, 1, 8, 8, 3], [4, 2, 9, 9, 2]) == 1', 'assert minimumAddedInteger([4, 4, 1, 10, 8], [1, 8, 10]) == 0', 'assert minimumAddedInteger([9, 10, 1], [6]) == -4', 'assert minimumAddedInteger([8, 5, 0, 4, 10, 2, 10, 4, 2], [4, 10, 4, 2, 10, 8, 0]) == 0', 'assert minimumAddedInteger([4, 10, 1, 2, 9, 8, 8, 3], [8, 0, 9, 3, 7, 2]) == -1', 'assert minimumAddedInteger([6, 4, 5, 0], [9, 5]) == 5', 'assert minimumAddedInteger([2, 10, 6, 10, 0, 10, 5, 10], [10, 10, 0, 10, 5, 6]) == 0', 'assert minimumAddedInteger([4, 6, 0, 1, 9, 7, 4], [1, 0, 4, 9, 7]) == 0', 'assert minimumAddedInteger([3, 4, 1, 10, 4, 5, 9], [4, 10, 9, 3, 4]) == 0', 'assert minimumAddedInteger([5, 10, 3, 5, 7, 3], [4, 2, 0, 0]) == -3', 'assert minimumAddedInteger([9, 6, 0, 0, 7, 2, 4], [5, 3, 9, 10, 7]) == 3', 'assert minimumAddedInteger([6, 0, 6], [3]) == -3', 'assert minimumAddedInteger([10, 1, 9, 2, 10, 0, 7], [9, 2, 1, 10, 10]) == 0', 'assert minimumAddedInteger([8, 3, 2, 0, 9], [10, 3, 9]) == 1', 'assert minimumAddedInteger([3, 0, 2, 5], [4, 5]) == 2', 'assert minimumAddedInteger([0, 10, 8, 5, 8, 8, 10, 2, 1, 7], [1, 8, 2, 8, 0, 10, 8, 5]) == 0', 'assert minimumAddedInteger([8, 6, 8, 2, 7, 6, 10, 4, 0], [4, 0, 8, 6, 8, 7, 10]) == 0', 'assert minimumAddedInteger([4, 1, 4, 8, 6, 2, 5], [5, 1, 4, 7, 0]) == -1', 'assert minimumAddedInteger([6, 2, 6, 9, 6, 9, 5], [4, 0, 4, 3, 7]) == -2', 'assert minimumAddedInteger([5, 4, 4, 1, 9, 5, 9, 10, 1], [5, 1, 9, 9, 5, 4, 4]) == 0', 'assert minimumAddedInteger([5, 3, 1], [7]) == 2', 'assert minimumAddedInteger([2, 10, 0, 2], [10, 0]) == 0', 'assert minimumAddedInteger([2, 9, 2, 0, 8, 4, 7, 10, 7], [2, 2, 8, 0, 9, 7, 7]) == 0', 'assert minimumAddedInteger([5, 1, 5, 5, 9, 10], [9, 8, 4, 4]) == -1', 'assert minimumAddedInteger([9, 7, 7, 5, 6], [9, 10, 8]) == 3', 'assert minimumAddedInteger([6, 3, 3, 8, 1], [2, 4, 7]) == 1', 'assert minimumAddedInteger([2, 1, 3], [3]) == 0', 'assert minimumAddedInteger([7, 2, 2, 6, 2, 2, 6], [7, 3, 3, 7, 3]) == 1', 'assert minimumAddedInteger([9, 1, 9, 4, 10, 4], [1, 9, 10, 4]) == 0', 'assert minimumAddedInteger([5, 8, 8, 4, 2, 3, 1, 5], [6, 9, 2, 9, 3, 4]) == 1', 'assert minimumAddedInteger([0, 6, 1, 8], [6, 7]) == 6', 'assert minimumAddedInteger([9, 9, 8, 9], [1, 0]) == -8', 'assert minimumAddedInteger([2, 8, 5, 6, 10], [1, 9, 5]) == -1', 'assert minimumAddedInteger([6, 9, 1], [3]) == -6', 'assert minimumAddedInteger([7, 9, 4], [8]) == -1', 'assert minimumAddedInteger([4, 5, 9, 9, 2], [3, 10, 10]) == 1', 'assert minimumAddedInteger([3, 9, 10, 9, 0], [9, 0, 3]) == 0', 'assert minimumAddedInteger([8, 7, 0], [1]) == -7', 'assert minimumAddedInteger([4, 8, 3, 10, 4], [10, 3, 4]) == 0', 'assert minimumAddedInteger([10, 5, 1, 5, 9, 4], [0, 9, 3, 8]) == -1', 'assert minimumAddedInteger([8, 6, 5, 10, 7, 9, 9, 10, 10, 2], [3, 7, 8, 7, 8, 0, 6, 5]) == -2', 'assert minimumAddedInteger([7, 8, 2], [7]) == -1', 'assert minimumAddedInteger([3, 3, 0, 8], [3, 3]) == 0', 'assert minimumAddedInteger([1, 10, 3, 9, 7, 0, 7, 3, 10, 1], [0, 3, 10, 9, 10, 1, 1, 7]) == 0', 'assert minimumAddedInteger([6, 0, 9, 10, 5, 5], [2, 3, 2, 6]) == -3', 'assert minimumAddedInteger([5, 3, 3, 2, 0, 4], [1, 6, 4, 5]) == 1', 'assert minimumAddedInteger([8, 5, 6], [2]) == -6', 'assert minimumAddedInteger([8, 3, 2, 9, 1, 0, 0, 7, 2], [3, 7, 1, 8, 2, 0, 9]) == 0', 'assert minimumAddedInteger([3, 2, 8, 0, 2], [3, 6, 5]) == 3', 'assert minimumAddedInteger([0, 1, 7, 0], [1, 0]) == 0', 'assert minimumAddedInteger([4, 1, 9, 9, 7, 9, 2, 9, 5, 0], [10, 2, 5, 6, 10, 10, 1, 8]) == 1', 'assert minimumAddedInteger([7, 4, 7], [4]) == -3', 'assert minimumAddedInteger([3, 4, 3, 10], [7, 6]) == 3', 'assert minimumAddedInteger([10, 2, 7, 5, 7, 4, 6, 10, 9, 1], [5, 4, 9, 8, 3, 0, 1, 6]) == -1', 'assert minimumAddedInteger([2, 7, 6, 8], [4, 5]) == -3', 'assert minimumAddedInteger([3, 6, 1, 7, 6, 2, 10, 10], [0, 5, 9, 6, 5, 1]) == -1', 'assert minimumAddedInteger([0, 9, 4, 1], [0, 1]) == 0', 'assert minimumAddedInteger([7, 7, 6, 9, 9, 6, 8, 1, 6], [10, 2, 7, 8, 8, 7, 9]) == 1', 'assert minimumAddedInteger([0, 1, 1, 8], [8, 8]) == 7', 'assert minimumAddedInteger([5, 3, 10, 10], [9, 4]) == -1', 'assert minimumAddedInteger([2, 5, 1, 1, 3, 8, 4, 6], [4, 7, 2, 0, 1, 5]) == -1', 'assert minimumAddedInteger([1, 4, 6, 9, 8, 0, 4], [5, 9, 2, 10, 5]) == 1', 'assert minimumAddedInteger([1, 3, 4, 10], [8, 2]) == -2', 'assert minimumAddedInteger([7, 0, 1, 0, 2, 8, 2], [10, 9, 4, 4, 2]) == 2', 'assert minimumAddedInteger([5, 10, 8, 10, 6, 8, 2, 6, 3], [10, 2, 6, 6, 3, 5, 8]) == 0', 'assert minimumAddedInteger([4, 8, 8, 2, 5, 7, 8, 7, 10, 1], [6, 7, 7, 4, 1, 7, 0, 9]) == -1', 'assert minimumAddedInteger([8, 10, 2, 1, 2], [4, 3, 4]) == 2', 'assert minimumAddedInteger([6, 8, 1, 8, 8, 0, 2, 5, 2, 8], [0, 2, 8, 1, 8, 8, 5, 2]) == 0', 'assert minimumAddedInteger([1, 9, 8, 7, 1, 1, 4, 3], [4, 2, 8, 9, 10, 2]) == 1', 'assert minimumAddedInteger([4, 10, 5, 5, 1, 2], [9, 3, 1, 4]) == -1', 'assert minimumAddedInteger([3, 8, 8, 4, 8, 4, 3, 7, 4, 9], [4, 8, 3, 9, 8, 4, 8, 3]) == 0', 'assert minimumAddedInteger([9, 2, 5], [8]) == -1', 'assert minimumAddedInteger([9, 2, 2, 0, 6, 8, 8], [6, 6, 0, 7, 4]) == -2', 'assert minimumAddedInteger([6, 10, 4, 1], [7, 1]) == -3', 'assert minimumAddedInteger([0, 7, 4, 6, 10], [6, 10, 7]) == 0', 'assert minimumAddedInteger([9, 5, 3, 0, 5, 9, 9, 10, 0, 9], [10, 5, 9, 9, 9, 3, 0, 0]) == 0', 'assert minimumAddedInteger([3, 1, 2, 3, 7], [6, 2, 1]) == -1', 'assert minimumAddedInteger([4, 6, 0, 2, 4, 5, 2, 6, 1], [1, 3, 3, 4, 0, 1, 5]) == -1', 'assert minimumAddedInteger([10, 8, 5, 9, 9, 10], [4, 1, 5, 6]) == -4', 'assert minimumAddedInteger([10, 7, 0, 9, 1, 10, 9, 5, 5, 4], [1, 9, 5, 10, 5, 9, 10, 4]) == 0', 'assert minimumAddedInteger([1, 8, 1], [10]) == 2', 'assert minimumAddedInteger([4, 5, 2, 0, 8, 4, 8, 10, 10], [2, 8, 4, 0, 10, 5, 10]) == 0', 'assert minimumAddedInteger([3, 2, 7, 9, 10, 9, 4, 9], [9, 2, 9, 4, 10, 3]) == 0', 'assert minimumAddedInteger([4, 4, 8, 1, 10, 10, 7], [3, 6, 4, 6, 0]) == -4', 'assert minimumAddedInteger([5, 3, 7, 5, 10, 7, 6, 4, 0], [4, 0, 5, 3, 10, 7, 6]) == 0', 'assert minimumAddedInteger([10, 6, 6, 10, 8], [5, 3, 1]) == -5', 'assert minimumAddedInteger([9, 0, 9, 8, 2, 4, 3, 8], [3, 10, 10, 5, 9, 9]) == 1', 'assert minimumAddedInteger([0, 0, 6, 2, 10], [6, 10, 0]) == 0', 'assert minimumAddedInteger([2, 7, 9, 8, 9, 3, 2], [9, 3, 10, 4, 8]) == 1', 'assert minimumAddedInteger([10, 4, 6], [3]) == -7', 'assert minimumAddedInteger([5, 2, 7, 1, 2, 0], [6, 2, 8, 3]) == 1', 'assert minimumAddedInteger([1, 5, 3, 8, 8, 8, 7, 7, 3], [2, 2, 6, 7, 0, 7, 7]) == -1', 'assert minimumAddedInteger([3, 1, 3, 3], [2, 2]) == -1', 'assert minimumAddedInteger([7, 6, 8, 0, 6, 1, 1, 7], [3, 9, 8, 3, 8, 9]) == 2', 'assert minimumAddedInteger([0, 5, 2, 4, 4, 3, 7], [7, 5, 10, 3, 6]) == 3', 'assert minimumAddedInteger([2, 3, 8, 7, 7, 10, 7, 7, 6], [10, 7, 7, 3, 7, 2, 6]) == 0', 'assert minimumAddedInteger([7, 3, 2, 4, 0], [0, 1, 5]) == -2', 'assert minimumAddedInteger([3, 6, 2, 6, 0, 3, 10], [10, 0, 2, 3, 6]) == 0', 'assert minimumAddedInteger([0, 8, 9, 2, 0, 6, 3], [3, 6, 0, 9, 2]) == 0', 'assert minimumAddedInteger([9, 0, 9], [5]) == -4', 'assert minimumAddedInteger([4, 1, 4, 5, 3, 7, 3, 6, 6], [7, 8, 4, 2, 7, 5, 4]) == 1', 'assert minimumAddedInteger([10, 9, 0, 7, 3], [7, 0, 10]) == 0', 'assert minimumAddedInteger([7, 7, 6, 2, 4, 6, 4], [3, 5, 3, 6, 1]) == -1', 'assert minimumAddedInteger([2, 3, 8, 7, 10, 0], [5, 0, 7, 4]) == -3', 'assert minimumAddedInteger([10, 0, 8, 10, 3, 4, 4], [2, 8, 8, 2, 1]) == -2', 'assert minimumAddedInteger([10, 10, 0, 8, 0, 5, 10, 8, 4], [10, 5, 4, 8, 10, 0, 10]) == 0', 'assert minimumAddedInteger([6, 6, 3, 2, 3, 2], [6, 6, 2, 2]) == 0', 'assert minimumAddedInteger([9, 5, 5, 4, 3, 5, 2, 10, 3, 3], [8, 2, 2, 3, 4, 1, 2, 9]) == -1', 'assert minimumAddedInteger([6, 10, 4, 1, 1, 5], [3, 8, 6, 7]) == 2', 'assert minimumAddedInteger([10, 8, 4, 1, 6, 1, 0, 9, 3, 2], [8, 3, 1, 10, 2, 9, 6, 0]) == 0', 'assert minimumAddedInteger([4, 6, 5, 5, 6], [9, 9, 10]) == 4', 'assert minimumAddedInteger([7, 5, 3, 10, 10], [0, 2, 7]) == -3', 'assert minimumAddedInteger([1, 3, 5, 2, 0, 9, 10], [3, 1, 0, 10, 9]) == 0', 'assert minimumAddedInteger([7, 4, 4, 6], [8, 9]) == 2', 'assert minimumAddedInteger([3, 0, 2, 5, 10, 1], [10, 5, 0, 1]) == 0', 'assert minimumAddedInteger([6, 9, 8, 4], [1, 5]) == -3', 'assert minimumAddedInteger([6, 9, 3, 6, 2, 7], [5, 5, 1, 8]) == -1', 'assert minimumAddedInteger([1, 3, 0, 10], [10, 0]) == 0', 'assert minimumAddedInteger([4, 3, 7, 6, 9, 8, 2, 4], [7, 3, 8, 4, 2, 6]) == 0', 'assert minimumAddedInteger([1, 0, 7, 3, 9, 2, 5, 1, 7], [3, 2, 7, 1, 0, 9, 7]) == 0', 'assert minimumAddedInteger([1, 4, 1, 1], [7, 7]) == 6', 'assert minimumAddedInteger([9, 3, 3, 9, 2], [4, 10, 3]) == 1', 'assert minimumAddedInteger([8, 10, 9], [5]) == -5', 'assert minimumAddedInteger([6, 10, 2, 5, 9, 8, 2], [5, 2, 6, 3, 7]) == -3', 'assert minimumAddedInteger([8, 7, 1, 1, 9, 3, 2, 3, 3], [0, 7, 0, 2, 1, 2, 2]) == -1', 'assert minimumAddedInteger([4, 4, 0, 4, 10, 10], [4, 10, 4, 10]) == 0', 'assert minimumAddedInteger([2, 10, 4, 8, 2, 2, 2, 5, 3], [2, 1, 1, 4, 3, 7, 1]) == -1', 'assert minimumAddedInteger([3, 0, 9, 10, 6, 2, 3], [6, 0, 9, 2, 3]) == 0', 'assert minimumAddedInteger([3, 3, 6, 9, 7, 9, 9, 7, 8, 4], [1, 6, 5, 7, 2, 1, 7, 5]) == -2', 'assert minimumAddedInteger([1, 9, 5, 9, 2, 0, 0, 7, 2], [6, 3, 1, 10, 2, 3, 1]) == 1', 'assert minimumAddedInteger([7, 8, 9, 8, 2, 9, 2, 7, 2, 4], [7, 2, 5, 6, 7, 0, 0, 0]) == -2', 'assert minimumAddedInteger([9, 5, 2, 0, 5, 9, 7], [0, 2, 9, 9, 7]) == 0', 'assert minimumAddedInteger([8, 5, 6, 9, 10, 0, 9], [6, 5, 0, 8, 10]) == 0', 'assert minimumAddedInteger([4, 0, 6, 10, 6, 4, 3, 8], [0, 1, 3, 5, 3, 1]) == -3', 'assert minimumAddedInteger([10, 4, 0, 6, 7, 10, 10], [0, 10, 10, 6, 10]) == 0', 'assert minimumAddedInteger([4, 7, 0, 10, 0, 10, 10, 8, 9, 5], [0, 4, 10, 5, 9, 0, 10, 10]) == 0', 'assert minimumAddedInteger([8, 3, 9], [1]) == -8', 'assert minimumAddedInteger([10, 4, 0, 0, 5, 5, 10, 2], [4, 0, 5, 5, 10, 0]) == 0', 'assert minimumAddedInteger([5, 7, 3, 8], [2, 7]) == -1', 'assert minimumAddedInteger([10, 3, 9], [9]) == -1', 'assert minimumAddedInteger([2, 3, 10, 6, 6, 2, 9, 5, 4, 7], [2, 2, 3, 6, 9, 6, 7, 4]) == 0', 'assert minimumAddedInteger([2, 0, 7], [0]) == -7', 'assert minimumAddedInteger([8, 2, 10, 9, 4, 9, 10, 1, 6, 0], [9, 10, 2, 4, 6, 8, 0, 9]) == 0', 'assert minimumAddedInteger([7, 2, 2, 10], [5, 8]) == -2', 'assert minimumAddedInteger([10, 6, 4, 7, 8, 1, 6, 1], [5, 7, 0, 5, 3, 0]) == -1', 'assert minimumAddedInteger([1, 3, 10, 2], [6, 5]) == 3', 'assert minimumAddedInteger([5, 6, 1, 10, 5, 5, 2], [10, 1, 5, 5, 6]) == 0', 'assert minimumAddedInteger([10, 5, 5, 3, 6, 10, 8, 0, 0], [8, 5, 6, 10, 0, 0, 3]) == 0', 'assert minimumAddedInteger([9, 8, 7, 4, 8], [4, 8, 7]) == 0', 'assert minimumAddedInteger([6, 2, 4, 3, 0, 4, 0, 4, 0], [4, 8, 4, 10, 6, 8, 7]) == 4', 'assert minimumAddedInteger([6, 6, 10, 8], [6, 8]) == -2', 'assert minimumAddedInteger([8, 8, 4], [10]) == 2', 'assert minimumAddedInteger([3, 1, 0, 10, 1, 9, 7, 4], [5, 2, 2, 10, 8, 4]) == 1', 'assert minimumAddedInteger([9, 2, 6, 2, 5, 8, 5, 8], [2, 8, 5, 2, 5, 8]) == 0', 'assert minimumAddedInteger([7, 1, 10, 0, 0, 1, 2, 5, 6, 6], [0, 2, 1, 10, 0, 7, 1, 5]) == 0', 'assert minimumAddedInteger([3, 9, 5], [3]) == -6', 'assert minimumAddedInteger([9, 6, 0, 7, 2, 4], [3, 8, 5, 1]) == -1', 'assert minimumAddedInteger([0, 10, 10, 1, 10, 0, 1], [1, 10, 10, 0, 1]) == 0', 'assert minimumAddedInteger([4, 1, 0, 5, 0, 6, 10, 1], [0, 1, 1, 0, 4, 6]) == 0', 'assert minimumAddedInteger([4, 6, 6, 1, 3, 0, 9], [0, 3, 6, 1, 9]) == 0', 'assert minimumAddedInteger([4, 10, 6, 7, 7, 7, 0], [8, 8, 5, 1, 8]) == 1', 'assert minimumAddedInteger([9, 6, 1, 1, 5, 2, 9, 2, 5, 3], [1, 5, 6, 5, 2, 9, 9, 3]) == 0', 'assert minimumAddedInteger([9, 6, 10, 8, 2, 7, 0, 6, 9], [6, 9, 10, 9, 7, 2, 8]) == 0', 'assert minimumAddedInteger([2, 10, 1, 3], [2, 3]) == 0', 'assert minimumAddedInteger([1, 5, 3, 8, 10, 3, 3, 8, 0], [3, 3, 8, 8, 0, 10, 3]) == 0', 'assert minimumAddedInteger([2, 6, 7, 5, 2, 2, 10, 6], [6, 2, 10, 2, 5, 2]) == 0', 'assert minimumAddedInteger([7, 4, 7, 8, 10, 9, 0, 4], [7, 9, 4, 10, 4, 0]) == 0', 'assert minimumAddedInteger([7, 5, 0, 3, 2, 7, 4, 7, 3], [7, 3, 5, 3, 0, 2, 7]) == 0', 'assert minimumAddedInteger([0, 8, 0, 0], [1, 9]) == 1', 'assert minimumAddedInteger([2, 3, 1, 9], [8, 0]) == -1', 'assert minimumAddedInteger([2, 9, 1, 0, 2, 8, 1, 0, 10, 6], [6, 2, 10, 0, 9, 8, 1, 0]) == 0', 'assert minimumAddedInteger([6, 10, 7, 2, 0, 10, 4], [0, 6, 4, 10, 7]) == 0', 'assert minimumAddedInteger([5, 4, 5, 5, 10, 3, 8, 6, 1, 8], [7, 5, 9, 2, 4, 4, 0, 3]) == -1', 'assert minimumAddedInteger([10, 1, 1, 7, 5], [0, 6, 4]) == -1', 'assert minimumAddedInteger([0, 2, 2, 4, 5], [4, 1, 3]) == -1', 'assert minimumAddedInteger([9, 8, 0, 9, 0, 6, 3, 8, 7, 5], [9, 10, 1, 7, 8, 10, 9, 1]) == 1', 'assert minimumAddedInteger([10, 8, 5, 3, 5, 0, 4, 3], [4, 3, 0, 10, 3, 5]) == 0', 'assert minimumAddedInteger([2, 6, 2, 5, 5, 0, 8, 9, 8], [0, 5, 8, 5, 6, 2, 8]) == 0', 'assert minimumAddedInteger([5, 9, 9, 4, 5], [6, 1, 2]) == -3', 'assert minimumAddedInteger([8, 3, 5, 6, 2, 1, 5, 10, 10, 8], [4, 2, 7, 7, 1, 9, 0, 4]) == -1', 'assert minimumAddedInteger([2, 10, 0, 6, 3, 8, 8, 0, 9, 9], [0, 8, 10, 3, 9, 9, 2, 6]) == 0', 'assert minimumAddedInteger([2, 4, 2, 9], [3, 10]) == 1', 'assert minimumAddedInteger([1, 6, 10, 2, 5, 4], [5, 10, 2, 6]) == 0', 'assert minimumAddedInteger([5, 4, 7, 2, 2, 0], [4, 7, 0, 2]) == 0', 'assert minimumAddedInteger([8, 5, 2, 0, 0, 5], [9, 3, 1, 6]) == 1', 'assert minimumAddedInteger([10, 1, 10, 9, 9, 6], [8, 9, 8, 5]) == -1', 'assert minimumAddedInteger([8, 5, 7, 0, 8, 8, 9, 8, 1], [9, 9, 9, 2, 6, 8, 10]) == 1', 'assert minimumAddedInteger([7, 5, 1], [6]) == -1', 'assert minimumAddedInteger([5, 5, 8], [9]) == 1', 'assert minimumAddedInteger([4, 3, 2, 3, 4, 2, 5, 4], [4, 4, 3, 4, 2, 5]) == 0', 'assert minimumAddedInteger([0, 5, 1, 7, 4], [4, 1, 7]) == 0', 'assert minimumAddedInteger([10, 2, 3, 8, 1, 6, 10, 9, 6, 10], [9, 8, 1, 9, 2, 5, 7, 9]) == -1', 'assert minimumAddedInteger([0, 5, 5, 10, 8, 5, 10, 3, 1, 7], [7, 5, 10, 5, 10, 8, 0, 1]) == 0', 'assert minimumAddedInteger([9, 2, 4, 2, 5, 3, 3, 4], [9, 3, 4, 4, 3, 5]) == 0', 'assert minimumAddedInteger([7, 8, 6, 1, 8, 6, 5, 4, 3], [6, 8, 7, 10, 5, 10, 8]) == 2', 'assert minimumAddedInteger([7, 9, 7, 8, 3, 7, 7, 0, 2], [8, 2, 0, 7, 7, 7, 9]) == 0', 'assert minimumAddedInteger([3, 1, 4, 10, 9, 2], [3, 10, 1, 4]) == 0', 'assert minimumAddedInteger([2, 9, 8, 2, 6, 6, 6, 1, 10], [9, 1, 7, 5, 8, 0, 5]) == -1', 'assert minimumAddedInteger([6, 3, 10, 10, 2, 3, 5, 5], [3, 5, 3, 2, 10, 10]) == 0', 'assert minimumAddedInteger([6, 7, 7, 5, 4], [6, 9, 7]) == 2', 'assert minimumAddedInteger([2, 10, 1, 10], [0, 9]) == -1', 'assert minimumAddedInteger([3, 9, 6, 7, 0, 1, 7, 1, 5], [6, 4, 1, 10, 8, 8, 7]) == 1', 'assert minimumAddedInteger([2, 5, 6, 6, 10, 7, 7], [5, 1, 4, 6, 6]) == -1', 'assert minimumAddedInteger([1, 1, 4], [9]) == 5', 'assert minimumAddedInteger([9, 5, 6, 8, 9, 7], [8, 9, 9, 7]) == 0', 'assert minimumAddedInteger([9, 0, 5, 2], [8, 10]) == 8', 'assert minimumAddedInteger([3, 4, 2, 5, 9, 9, 5, 4, 5], [5, 6, 5, 6, 10, 4, 3]) == 1', 'assert minimumAddedInteger([5, 10, 3, 4, 3], [5, 5, 6]) == 2', 'assert minimumAddedInteger([7, 3, 6, 10, 4, 1, 10, 5, 0, 4], [7, 0, 10, 4, 6, 1, 5, 10]) == 0', 'assert minimumAddedInteger([5, 6, 4, 0, 9], [7, 6, 8]) == 2', 'assert minimumAddedInteger([4, 8, 6, 2, 7, 5, 9], [6, 3, 2, 0, 4]) == -2', 'assert minimumAddedInteger([1, 5, 7, 4, 5, 7, 4, 9, 3], [4, 2, 4, 1, 2, 6, 0]) == -3', 'assert minimumAddedInteger([4, 0, 2], [10]) == 6', 'assert minimumAddedInteger([1, 10, 6, 0, 10], [10, 1, 6]) == 0', 'assert minimumAddedInteger([9, 4, 6, 7, 6], [3, 2, 2]) == -4', 'assert minimumAddedInteger([9, 10, 3, 7, 1, 10, 9, 6, 8, 0], [7, 9, 10, 1, 0, 8, 6, 9]) == 0', 'assert minimumAddedInteger([5, 1, 9], [0]) == -9', 'assert minimumAddedInteger([9, 8, 9, 5, 6, 7, 9, 1, 1, 4], [1, 7, 5, 6, 9, 9, 4, 8]) == 0', 'assert minimumAddedInteger([7, 10, 4, 4, 9, 8, 2, 8, 4], [10, 6, 6, 4, 9, 6, 10]) == 2', 'assert minimumAddedInteger([9, 8, 4, 7, 3, 6, 9, 5, 1, 8], [9, 1, 8, 5, 7, 8, 4, 3]) == 0', 'assert minimumAddedInteger([1, 2, 5], [6]) == 1', 'assert minimumAddedInteger([2, 2, 0, 1], [8, 6]) == 6', 'assert minimumAddedInteger([6, 1, 2, 5, 6], [7, 7, 6]) == 1', 'assert minimumAddedInteger([9, 7, 1, 5, 7], [2, 6, 4]) == -3', 'assert minimumAddedInteger([10, 0, 3, 8, 5, 8, 8], [5, 0, 10, 3, 8]) == 0', 'assert minimumAddedInteger([0, 5, 6], [7]) == 1', 'assert minimumAddedInteger([7, 7, 3, 0, 1, 9, 10], [9, 1, 0, 10, 3]) == 0', 'assert minimumAddedInteger([2, 1, 9, 3, 10], [2, 9, 8]) == -1', 'assert minimumAddedInteger([8, 9, 4, 1, 3], [6, 5, 0]) == -3', 'assert minimumAddedInteger([6, 4, 1, 10], [10, 4]) == 0', 'assert minimumAddedInteger([3, 2, 0, 10, 9, 9, 3, 8, 1], [1, 10, 8, 3, 9, 9, 0]) == 0', 'assert minimumAddedInteger([9, 2, 4, 5, 8, 3, 0, 2], [2, 8, 4, 9, 3, 5]) == 0', 'assert minimumAddedInteger([5, 10, 8, 2], [1, 7]) == -1', 'assert minimumAddedInteger([9, 9, 8, 7, 3, 10, 0, 1], [7, 1, 10, 3, 0, 9]) == 0', 'assert minimumAddedInteger([6, 5, 8, 4, 0, 5], [7, 10, 2, 6]) == 2', 'assert minimumAddedInteger([1, 3, 9, 7], [10, 2]) == 1', 'assert minimumAddedInteger([7, 10, 4, 6], [3, 5]) == -1', 'assert minimumAddedInteger([5, 0, 5], [4]) == -1', 'assert minimumAddedInteger([4, 8, 10], [10]) == 0', 'assert minimumAddedInteger([2, 0, 9], [7]) == -2', 'assert minimumAddedInteger([5, 3, 4, 4, 4, 9, 1, 7, 2, 3], [0, 3, 8, 6, 4, 2, 2, 3]) == -1', 'assert minimumAddedInteger([6, 3, 10, 6, 2, 9, 10, 3], [6, 3, 9, 10, 10, 3]) == 0', 'assert minimumAddedInteger([0, 7, 7, 10, 5, 5], [4, 9, 4, 6]) == -1', 'assert minimumAddedInteger([5, 3, 6, 4, 4], [6, 3, 4]) == 0', 'assert minimumAddedInteger([9, 8, 5, 7, 3, 1], [1, 8, 3, 5]) == 0', 'assert minimumAddedInteger([7, 7, 7], [10]) == 3', 'assert minimumAddedInteger([8, 5, 3, 4, 7, 8, 5], [4, 1, 0, 3, 4]) == -4', 'assert minimumAddedInteger([10, 0, 7, 7, 8, 0, 0], [0, 7, 10, 0, 8]) == 0', 'assert minimumAddedInteger([8, 4, 6, 5], [6, 7]) == 1', 'assert minimumAddedInteger([1, 8, 4, 9, 0], [3, 2, 10]) == 2', 'assert minimumAddedInteger([5, 4, 0, 3, 6], [7, 8, 10]) == 4', 'assert minimumAddedInteger([10, 8, 2, 6, 3], [7, 9, 2]) == -1', 'assert minimumAddedInteger([5, 5, 0, 0, 5, 4, 10, 10, 5, 6], [10, 4, 0, 0, 5, 5, 10, 5]) == 0', 'assert minimumAddedInteger([5, 4, 4, 6, 2, 1, 4, 3, 3, 2], [7, 7, 9, 7, 4, 5, 6, 8]) == 3', 'assert minimumAddedInteger([1, 5, 1, 9, 3, 3, 1, 9, 4, 9], [6, 2, 10, 10, 2, 10, 4, 4]) == 1', 'assert minimumAddedInteger([2, 8, 2, 8, 6, 8, 3, 10, 7], [8, 3, 9, 3, 7, 9, 4]) == 1', 'assert minimumAddedInteger([7, 0, 8, 10, 7, 4, 8, 2], [8, 7, 10, 0, 2, 4]) == 0', 'assert minimumAddedInteger([6, 10, 1, 0, 2, 7, 9], [10, 2, 1, 0, 6]) == 0', 'assert minimumAddedInteger([71, 24, 60, 23, 74, 77, 62, 50, 46, 94, 32, 15, 78, 10, 92, 28, 26, 73, 36, 93, 94, 44, 82, 73, 70, 3, 36, 67, 79, 12, 97, 10, 29, 14, 64, 33, 3, 91, 76, 85, 27, 48, 68, 23, 2, 66], [73, 3, 14, 60, 62, 66, 10, 26, 79, 67, 50, 27, 12, 68, 36, 23, 71, 92, 74, 46, 29, 76, 85, 93, 33, 3, 15, 64, 91, 44, 2, 32, 36, 28, 94, 94, 48, 82, 23, 70, 78, 24, 10, 73]) == 0', 'assert minimumAddedInteger([3, 23, 61, 86, 85, 44, 50, 19, 94, 20, 22, 1, 44, 17, 74, 40, 64, 57, 77, 19, 48, 99, 77, 33, 35, 31, 99, 87, 73, 24, 82, 26, 44, 48], [45, 41, 62, 25, 36, 20, 4, 100, 78, 83, 45, 75, 87, 65, 51, 49, 78, 21, 34, 49, 45, 88, 86, 2, 24, 95, 18, 27, 74, 58, 32, 23]) == 1', 'assert minimumAddedInteger([11, 60, 51, 29, 27, 38, 21, 39, 22, 34, 13, 13], [34, 48, 55, 60, 34, 72, 32, 50, 59, 43]) == 21', 'assert minimumAddedInteger([51, 47, 99, 19, 16, 80, 19, 60, 38, 68, 13, 17, 23, 1, 96, 60, 72, 67, 47], [60, 13, 47, 1, 17, 60, 96, 80, 38, 16, 68, 47, 19, 72, 67, 23, 99]) == 0', 'assert minimumAddedInteger([17, 6, 45, 96, 5, 19, 45, 96, 90, 23, 89, 28, 11, 18, 93], [18, 1, 12, 91, 88, 91, 6, 40, 84, 40, 85, 0, 14]) == -5', 'assert minimumAddedInteger([70, 61, 18, 89, 89, 94, 62, 35, 46, 88, 60, 26, 58, 90, 52, 14, 91, 39, 13, 46, 94, 99, 8, 100, 32, 19, 56, 44, 18, 29, 28, 63, 92, 3, 80, 92, 96, 73], [60, 86, 1, 33, 6, 44, 94, 54, 89, 97, 42, 78, 37, 98, 12, 27, 50, 68, 90, 90, 24, 92, 16, 87, 87, 56, 58, 11, 59, 16, 88, 71, 61, 44, 17, 30]) == -2', 'assert minimumAddedInteger([57, 17, 3, 94, 77, 52, 93, 50, 0, 96, 12, 83, 28, 4], [94, 55, 50, 48, 2, 26, 1, 81, 91, 10, 15, 92]) == -2', 'assert minimumAddedInteger([23, 64, 17, 72, 29, 25, 58, 55, 89, 83, 16, 34, 31, 95, 96, 69, 84, 97, 34, 40], [10, 22, 27, 90, 27, 65, 48, 89, 33, 51, 82, 18, 9, 62, 57, 24, 88, 77]) == -7', 'assert minimumAddedInteger([43, 16, 1, 9, 53, 52, 79, 70, 1, 19, 0, 85, 61, 91, 43, 28, 3, 85, 0, 60, 22, 73, 37, 23, 65, 20, 11, 57, 62, 28, 80, 25, 51, 25, 27, 62], [19, 85, 27, 52, 53, 16, 57, 25, 61, 43, 20, 1, 65, 37, 70, 28, 91, 62, 73, 1, 43, 22, 23, 62, 79, 28, 25, 3, 85, 80, 51, 0, 60, 11]) == 0', 'assert minimumAddedInteger([21, 24, 91, 96, 57, 36, 54, 41, 94, 17, 55, 31, 96, 84, 45, 82, 17, 33, 8, 45, 96, 86, 38, 47, 11], [93, 51, 14, 30, 83, 42, 93, 42, 52, 5, 28, 44, 81, 91, 8, 88, 33, 38, 14, 54, 18, 93, 79]) == -3', 'assert minimumAddedInteger([86, 34, 62, 68, 6, 63, 39, 43, 70, 74], [84, 64, 91, 83, 60, 27, 95, 89]) == 21', 'assert minimumAddedInteger([20, 51, 18, 28, 81, 30, 18, 0, 25, 76, 35, 91, 4, 54, 84, 48, 56, 31, 69, 77, 14, 99, 87, 99, 80, 54, 77, 17, 11, 4, 49, 36, 1, 17, 66, 74, 62, 89, 93], [87, 74, 89, 14, 11, 76, 31, 18, 56, 99, 25, 4, 1, 51, 77, 80, 77, 99, 81, 93, 54, 84, 66, 28, 48, 0, 91, 49, 62, 4, 17, 35, 54, 17, 18, 20, 30]) == 0', 'assert minimumAddedInteger([23, 74, 42, 57, 21, 65, 28, 2, 19, 36, 37, 14, 0, 26, 86, 5, 48, 97, 89, 36, 57, 42, 88, 98, 91, 99, 44, 29, 72, 71], [91, 89, 65, 97, 44, 21, 29, 71, 26, 14, 19, 72, 57, 2, 36, 5, 37, 48, 88, 42, 36, 0, 86, 57, 28, 23, 98, 99]) == 0', 'assert minimumAddedInteger([39, 6, 100, 81, 29, 46, 46, 32, 1, 49, 25, 80, 86, 78, 67, 46, 50, 28, 10, 21, 74, 58], [49, 70, 52, 32, 24, 77, 31, 28, 4, 84, 13, 81, 83, 9, 49, 61, 89, 35, 49, 53]) == 3', 'assert minimumAddedInteger([11, 79, 44, 35, 78, 76, 56, 60, 86, 52], [26, 44, 52, 1, 22, 45, 18, 42]) == -34', 'assert minimumAddedInteger([19, 42, 74, 26, 10, 62, 20, 57, 76, 81, 63, 98, 38, 70, 73, 62, 13, 59, 81, 8, 61, 76, 29, 71, 19, 10, 29, 60, 42, 92], [96, 61, 60, 40, 79, 72, 6, 71, 59, 8, 74, 57, 18, 74, 55, 60, 68, 58, 27, 36, 69, 79, 17, 27, 17, 8, 90, 11]) == -2', 'assert minimumAddedInteger([57, 79, 26, 29, 25, 85, 48, 28, 28, 34, 42, 76, 45, 65, 12, 87, 39, 16, 0, 27, 62, 79, 51, 57, 27, 11, 64, 25, 98, 45, 17, 57, 85], [79, 17, 29, 65, 85, 64, 34, 27, 28, 57, 57, 16, 28, 87, 26, 25, 51, 27, 0, 42, 12, 45, 76, 98, 85, 79, 62, 25, 48, 57, 45]) == 0', 'assert minimumAddedInteger([33, 8, 56, 60, 69, 17, 44, 12, 47, 94, 45, 85, 80, 49, 63, 7, 62, 73, 39, 0, 10, 9, 72, 2, 3, 65, 16, 3, 42, 5, 82], [17, 82, 60, 9, 73, 65, 12, 62, 69, 8, 44, 16, 42, 72, 56, 7, 80, 3, 49, 94, 0, 33, 2, 10, 45, 47, 5, 85, 3]) == 0', 'assert minimumAddedInteger([17, 63, 76, 83, 67, 5, 53, 10, 26, 97, 92, 41, 37, 26, 87, 16, 95, 31, 69, 66, 13, 62, 51, 94, 5], [22, 42, 18, 10, 99, 81, 31, 10, 92, 72, 74, 36, 67, 71, 21, 100, 88, 15, 31, 97, 58, 56, 68]) == 5', 'assert minimumAddedInteger([22, 10, 68, 3, 36, 32, 53, 20, 89, 59, 77, 31, 76, 41, 9, 18, 30, 66, 59, 18, 18, 97, 0, 92, 12, 68, 65, 97, 87, 80, 68, 89, 88, 14, 37, 2, 84, 30, 19, 55, 58, 81, 47, 75, 59, 7], [16, 38, 83, 67, 34, 61, 91, 24, 70, 99, 33, 57, 5, 70, 60, 70, 20, 78, 12, 68, 89, 22, 20, 90, 99, 77, 14, 21, 82, 20, 86, 43, 11, 49, 94, 32, 61, 2, 32, 4, 9, 55, 61, 39]) == 2', 'assert minimumAddedInteger([257, 165, 288, 10, 16, 255, 115, 253, 305, 370, 97, 303, 298, 215, 335, 293, 339, 452, 61, 360, 418, 320, 87, 104, 62, 264, 348, 215, 27, 472, 305, 311, 318, 108, 294, 372, 176, 33, 116, 112, 464, 153, 18, 384, 399, 433, 116, 208, 319, 357, 7, 36, 21, 278, 43, 189, 317, 167, 212, 310, 365, 101, 374, 228, 205, 189, 315, 270, 247, 26, 149, 470, 295, 27, 224, 467, 234, 300, 388, 329, 374, 400, 460, 142, 169, 364, 364, 329, 228, 366, 268], [321, 470, 195, 335, 274, 33, 27, 240, 261, 173, 405, 323, 13, 311, 155, 118, 122, 214, 466, 122, 230, 67, 234, 93, 259, 370, 276, 270, 363, 218, 306, 326, 42, 284, 372, 311, 371, 458, 378, 39, 335, 22, 211, 263, 376, 32, 24, 195, 107, 439, 294, 221, 309, 16, 148, 33, 114, 341, 175, 253, 159, 103, 121, 325, 304, 300, 366, 478, 406, 476, 171, 316, 221, 424, 390, 394, 182, 473, 380, 68, 380, 345, 301, 299, 370, 110, 234, 354, 49]) == 6', 'assert minimumAddedInteger([380, 270, 357, 35, 156, 133, 84, 363, 225, 0, 44, 459, 124, 330, 97, 227, 258, 279, 145, 300, 222, 457, 220, 487, 344, 261, 302, 107, 398, 106, 181, 374, 272, 338, 458, 398, 34, 279, 72, 211, 163, 95, 214, 20, 443, 2, 97, 61, 341, 310, 85, 352, 32, 482, 310, 294, 369, 433, 141, 303, 495, 391, 162, 239, 162, 113, 382, 101, 264, 68, 283, 176, 431, 113, 175, 200, 368, 283, 439, 446, 82, 105, 191, 179, 204, 176, 363], [126, 147, 108, 87, 281, 393, 4, 312, 84, 365, 216, 46, 497, 178, 332, 281, 36, 272, 97, 177, 285, 115, 107, 304, 305, 384, 448, 376, 441, 74, 260, 202, 86, 302, 400, 164, 461, 22, 109, 445, 143, 400, 158, 103, 213, 193, 343, 489, 181, 484, 227, 371, 460, 229, 222, 459, 241, 183, 115, 2, 296, 354, 37, 285, 340, 70, 370, 63, 312, 206, 99, 382, 99, 34, 346, 433, 164, 224, 178, 365, 165, 263, 135, 274, 266]) == 2', 'assert minimumAddedInteger([37, 78, 190, 66, 315, 254, 428, 230, 107, 336, 224, 430, 377, 319, 370, 161, 129, 268, 397, 393, 347, 31, 71, 245, 153, 222, 44, 34, 199, 364, 8, 93, 498, 244, 66, 268, 295, 491, 417, 427, 440, 322, 14, 199, 206, 282, 342, 43, 327, 231, 213, 445, 79, 272, 29, 412, 455, 317, 184, 275, 415, 458, 114, 408, 87, 274, 68, 485, 68, 84, 103, 165, 27, 51, 416, 223, 42, 96, 2, 493, 441, 122, 241, 87, 214, 387, 290, 80, 52, 82, 52, 475, 270, 388, 451, 287, 451, 362], [392, 369, 198, 318, 43, 243, 67, 281, 411, 316, 65, 274, 189, 416, 70, 102, 67, 454, 450, 415, 314, 78, 341, 269, 273, 51, 81, 444, 492, 51, 213, 222, 65, 286, 321, 1, 205, 326, 497, 335, 164, 426, 121, 490, 152, 376, 42, 86, 267, 92, 363, 387, 106, 50, 386, 79, 427, 223, 414, 253, 361, 41, 30, 36, 183, 271, 440, 457, 113, 429, 229, 346, 294, 212, 28, 7, 26, 95, 77, 221, 160, 484, 439, 240, 474, 83, 396, 33, 289, 244, 407, 86, 128, 450, 230, 267]) == -1', 'assert minimumAddedInteger([77, 440, 389, 231, 337, 367, 194, 184, 265, 478, 36, 233, 136, 368, 446, 384, 46, 310, 164, 186, 9, 452, 7, 196, 210, 96, 19, 146, 313, 311, 91, 289, 228, 33, 236, 24, 135, 161, 256, 10, 425, 352, 22, 206, 343, 98, 484, 444, 28, 60, 108, 392, 411, 302, 221, 375, 275, 154, 104, 265, 278, 105, 1, 46, 71, 173, 442, 119, 292, 321, 222, 38, 89, 69, 476, 328, 244, 44], [325, 211, 426, 307, 326, 86, 104, 61, 459, 123, 352, 390, 251, 151, 243, 43, 237, 59, 201, 188, 134, 51, 499, 24, 209, 39, 382, 16, 75, 169, 383, 221, 367, 61, 358, 455, 179, 25, 248, 119, 304, 113, 22, 176, 199, 106, 280, 225, 92, 399, 161, 259, 111, 328, 467, 84, 457, 493, 280, 53, 48, 34, 336, 271, 491, 293, 440, 236, 317, 120, 290, 407, 150, 343, 461, 37]) == 15', 'assert minimumAddedInteger([271, 410, 33, 327, 200, 256, 402, 102, 257, 75, 233, 406, 12, 470, 167, 295, 336, 461, 260, 213, 112, 320, 295, 432, 46, 64, 316, 459, 468, 182, 259, 324, 495, 434, 423, 228, 464, 257, 467, 306, 131, 325, 33, 53, 375, 82, 163, 327, 460, 60, 483, 37, 101, 298, 289, 355, 201, 497, 116, 110, 262], [456, 160, 30, 34, 253, 72, 420, 407, 322, 107, 431, 292, 230, 50, 461, 317, 324, 494, 259, 458, 254, 98, 210, 372, 99, 30, 399, 109, 257, 492, 9, 286, 256, 464, 292, 268, 61, 295, 313, 467, 480, 457, 303, 197, 179, 43, 57, 324, 321, 164, 113, 128, 352, 79, 429, 254, 198, 333, 403]) == -3', 'assert minimumAddedInteger([332, 333, 235, 58, 468, 153, 300, 316, 473, 117, 126, 68, 410, 252, 365, 23, 204, 498, 474, 184, 450, 454, 473, 307, 341, 51, 428, 26, 130, 75, 341, 438, 289, 366, 395, 322, 50, 286, 312, 168, 357, 477, 92, 302, 423, 256, 340, 453, 219, 227, 281, 429, 146, 182, 248, 337, 122, 376, 241, 264, 261, 375, 323, 475, 224, 367, 218, 77, 461, 427, 444, 43, 183, 264, 119, 97, 494, 93, 53, 85, 424, 22, 467, 346, 103, 152, 101, 144, 387, 239, 405, 34, 323, 331, 6, 435, 75, 431, 416, 134], [371, 439, 88, 352, 445, 307, 430, 236, 311, 48, 326, 234, 17, 361, 219, 87, 318, 199, 178, 18, 463, 418, 251, 422, 72, 45, 472, 469, 295, 336, 1, 121, 370, 222, 29, 317, 63, 96, 411, 98, 129, 400, 213, 179, 390, 141, 259, 53, 448, 362, 423, 256, 117, 139, 259, 281, 424, 405, 335, 163, 470, 302, 318, 456, 468, 489, 38, 230, 276, 419, 462, 177, 70, 21, 125, 426, 341, 433, 328, 92, 332, 80, 214, 70, 360, 327, 468, 336, 297, 243, 284, 449, 46, 493, 114, 112, 147, 382]) == -5', 'assert minimumAddedInteger([430, 215, 269, 14, 261, 3, 51, 68, 351, 87, 29, 147, 494, 170, 233, 107, 423, 13, 290, 475, 394, 155, 8, 137, 455, 226, 255, 217, 252, 2, 169, 284, 250, 258, 235, 246, 348, 327, 164, 268, 457, 106, 196, 337, 138, 117, 357, 53, 210, 395, 103, 182, 9, 100, 124, 186, 416, 136, 118, 492, 41, 100, 450, 101, 240, 412, 240, 114, 227, 170, 367, 366, 427, 430, 186, 340], [165, 137, 115, 88, 328, 269, 104, 69, 395, 493, 187, 358, 4, 118, 256, 338, 216, 349, 428, 10, 42, 139, 101, 108, 171, 413, 197, 259, 171, 138, 218, 241, 228, 431, 102, 262, 495, 451, 156, 396, 291, 119, 3, 211, 341, 424, 251, 9, 476, 227, 253, 270, 236, 352, 170, 107, 285, 417, 101, 52, 125, 431, 187, 14, 54, 368, 456, 15, 30, 241, 183, 458, 148, 247]) == 1', 'assert minimumAddedInteger([36, 233, 371, 92, 14, 324, 44, 305, 29, 333, 88, 336, 315, 439, 389, 95, 135, 283, 436, 211, 167, 396, 232, 483, 279, 431, 489, 208, 322, 126, 88, 235, 215, 297, 24, 274, 425, 41, 99, 422, 93, 95, 153, 179, 431, 365, 115, 164, 182, 143, 31, 25, 106], [421, 273, 78, 198, 85, 429, 169, 223, 143, 89, 82, 201, 85, 386, 96, 473, 295, 19, 361, 133, 116, 222, 105, 154, 355, 21, 323, 14, 26, 269, 314, 83, 205, 326, 426, 264, 479, 15, 305, 34, 415, 412, 31, 287, 4, 172, 421, 225, 78, 125, 312]) == -10', 'assert minimumAddedInteger([251, 343, 281, 423, 20, 469, 484, 365, 489, 410, 84, 221, 208, 92, 174, 250, 194, 228, 395, 465, 430, 207, 264, 30, 209, 393, 17, 497, 311, 323, 104, 467, 304, 210, 13, 63, 295, 488, 47, 301, 87, 380, 278, 198, 252, 399, 349, 222, 265, 17, 338, 223, 59, 187, 91, 311, 330, 28, 493, 385, 359, 146, 21, 8, 306, 192, 191, 275, 421, 299, 11, 248, 148, 290, 414, 361, 295, 336, 377, 324, 193], [203, 167, 354, 23, 294, 304, 21, 14, 392, 1, 490, 200, 13, 482, 414, 407, 187, 245, 403, 288, 336, 299, 77, 423, 215, 274, 52, 283, 486, 288, 10, 297, 56, 221, 202, 184, 257, 292, 10, 141, 186, 97, 388, 317, 462, 477, 268, 373, 358, 416, 304, 258, 84, 243, 378, 191, 458, 352, 185, 342, 241, 80, 329, 323, 216, 271, 40, 4, 139, 316, 180, 6, 481, 85, 370, 214, 460, 331, 386]) == -7', 'assert minimumAddedInteger([445, 349, 126, 133, 126, 149, 163, 146, 496, 177, 225, 480, 50, 416, 456, 256, 181, 434, 129, 224, 30, 17, 303, 238, 385, 383, 100, 399, 391, 125, 486, 81, 145, 356, 318, 192, 364, 497, 56, 330, 19, 351, 475, 84, 444, 198, 287, 30, 441, 255, 76, 33, 31, 453, 440, 47, 377, 383, 127, 351, 22, 216, 349, 355, 464, 296], [183, 117, 287, 340, 294, 431, 10, 425, 321, 120, 246, 38, 347, 374, 309, 432, 22, 466, 278, 340, 116, 355, 346, 21, 47, 91, 67, 444, 455, 376, 488, 136, 229, 189, 124, 342, 390, 342, 8, 368, 382, 21, 118, 374, 75, 487, 215, 13, 435, 477, 247, 137, 154, 24, 168, 471, 140, 72, 216, 41, 172, 117, 207, 436]) == -9', 'assert minimumAddedInteger([993, 672, 498, 460, 677, 286, 101, 865, 368, 969, 839, 963, 105, 139, 46, 149, 245, 205, 176, 950, 2, 653, 495, 660, 922, 174, 847, 451, 414, 795, 202, 569, 561, 480, 685, 984, 628, 929, 733, 816, 847, 264, 213, 838, 59, 861, 923, 432, 545, 124, 773, 504, 242, 244, 550, 95, 565, 646, 92, 145, 917, 685, 145, 15, 818, 143, 51, 931, 748, 103, 919, 621, 130, 468, 280, 620, 110, 174], [863, 94, 849, 178, 841, 622, 126, 434, 97, 919, 215, 132, 797, 151, 462, 775, 687, 112, 370, 105, 4, 655, 623, 246, 61, 497, 679, 840, 244, 552, 563, 965, 921, 147, 662, 925, 500, 849, 630, 867, 145, 207, 547, 818, 48, 687, 416, 282, 141, 147, 820, 971, 931, 506, 674, 482, 266, 204, 648, 17, 735, 107, 247, 176, 470, 453, 986, 176, 933, 924, 750, 567, 952, 571, 288, 53]) == 2', 'assert minimumAddedInteger([880, 103, 380, 279, 312, 137, 625, 154, 23, 335, 421, 799, 7, 289, 550, 410, 258, 380, 388, 877, 153, 979, 827, 158, 874, 8, 179, 648, 955, 421, 358, 140, 187, 171, 749, 832, 943, 950, 966, 333, 911, 117, 504, 398, 367, 746, 423, 475, 374, 448, 217, 285, 651, 291, 399, 612, 177, 178, 195, 163, 848, 793, 75], [607, 405, 153, 938, 362, 330, 906, 416, 620, 286, 280, 416, 869, 744, 945, 822, 545, 284, 149, 158, 499, 173, 307, 2, 274, 353, 383, 470, 827, 98, 393, 112, 788, 369, 646, 375, 872, 950, 418, 328, 212, 643, 135, 148, 166, 172, 394, 974, 182, 70, 794, 253, 174, 843, 443, 132, 875, 190, 741, 3, 961]) == -5', 'assert minimumAddedInteger([335, 533, 395, 69, 858, 778, 104, 808, 725, 691, 862, 390, 112, 815, 156, 712, 102, 69, 11, 958, 328, 984, 682, 202, 650, 766, 616, 500, 917, 761, 891, 93, 504, 511, 884, 926, 726, 367, 946, 575, 989, 624, 146, 226, 141, 747, 735, 333, 283, 447, 339, 801, 466, 142, 988, 678, 751, 509, 817, 946, 756, 349, 357, 39, 272, 792, 346, 284, 299, 131, 839, 414, 242, 928, 78, 763, 596, 19, 298, 88, 798, 648, 191, 739, 324, 34, 842, 39, 597, 171, 705, 591, 206], [509, 288, 207, 994, 362, 596, 419, 752, 963, 39, 109, 993, 740, 151, 820, 304, 933, 922, 867, 806, 822, 896, 372, 621, 247, 16, 44, 783, 683, 744, 653, 538, 696, 989, 601, 340, 771, 277, 211, 516, 146, 580, 710, 847, 176, 107, 803, 289, 730, 629, 231, 44, 74, 161, 24, 74, 717, 136, 344, 400, 351, 452, 813, 655, 514, 147, 471, 303, 354, 761, 338, 844, 329, 731, 931, 602, 768, 333, 687, 83, 863, 797, 889, 98, 196, 505, 766, 951, 951, 117, 756]) == 5', 'assert minimumAddedInteger([259, 695, 50, 655, 676, 227, 222, 703, 387, 289, 514, 570, 890, 549, 907, 565, 50, 113, 752, 833, 283, 278, 721, 525, 312, 666, 579, 906, 525, 190, 352, 431, 490, 583, 777, 224, 12, 779, 772, 512, 832, 980, 207, 83, 697, 261, 829, 844, 296, 601, 240, 134, 17, 79, 968, 685, 182, 822, 311, 142, 465, 580, 765, 52, 576, 345, 681, 111, 1000, 354, 803, 85, 835, 987, 974, 514, 100, 255], [767, 302, 671, 172, 421, 555, 180, 825, 675, 212, 560, 819, 977, 73, 42, 273, 762, 687, 769, 480, 656, 990, 822, 645, 455, 230, 7, 2, 515, 970, 897, 249, 812, 896, 286, 685, 834, 793, 693, 335, 591, 217, 823, 268, 711, 504, 964, 742, 301, 573, 504, 90, 75, 880, 245, 569, 197, 132, 344, 40, 279, 666, 342, 502, 69, 515, 40, 755, 377, 124, 539, 101, 214, 958, 566, 570]) == -10', 'assert minimumAddedInteger([455, 726, 553, 382, 251, 95, 838, 153, 987, 726, 44, 861, 646, 23, 807, 168, 133, 152, 491, 967, 974, 407, 135, 217, 527, 343, 868, 750, 345, 483, 340, 563, 653, 235, 284, 204, 709, 855, 160, 509, 540, 346, 599, 871, 910, 807, 96, 466, 701, 133, 461, 688, 934, 548, 700, 845, 24, 479, 666, 812, 353, 564, 429, 533, 909, 30, 802, 205], [32, 176, 141, 469, 571, 104, 815, 995, 869, 361, 143, 717, 696, 853, 474, 390, 141, 517, 734, 415, 561, 348, 734, 160, 541, 212, 548, 661, 463, 168, 52, 810, 535, 674, 437, 654, 709, 708, 103, 213, 572, 259, 607, 499, 38, 225, 982, 942, 975, 243, 876, 917, 556, 161, 354, 353, 351, 292, 31, 487, 846, 820, 863, 758, 918, 815]) == 8', 'assert minimumAddedInteger([706, 784, 804, 127, 523, 465, 832, 468, 916, 603, 934, 332, 436, 796, 835, 804, 588, 198, 502, 574, 811, 852, 668, 798, 745, 405, 72, 937, 24, 787, 673, 312, 173, 31, 755, 770, 717, 348, 272, 71, 965, 352, 438, 386, 572, 388, 384, 970, 187, 219, 130, 874, 152, 727, 853, 97, 185, 544, 369, 715, 889, 52, 296, 275, 690, 144, 643, 899, 714, 28, 123, 829, 718, 356, 180, 611, 175, 534, 772, 386, 645, 581, 779, 758, 883, 344], [807, 441, 730, 919, 75, 315, 855, 790, 299, 968, 877, 468, 838, 389, 835, 856, 973, 591, 355, 100, 537, 178, 74, 126, 775, 717, 721, 832, 886, 130, 133, 801, 526, 335, 278, 807, 505, 773, 584, 648, 787, 814, 176, 351, 606, 183, 693, 676, 718, 155, 782, 275, 147, 940, 892, 31, 614, 359, 575, 372, 937, 439, 748, 27, 222, 761, 577, 799, 188, 646, 190, 55, 547, 902, 720, 671, 391, 347, 387, 34, 709, 389, 471, 758]) == 3', 'assert minimumAddedInteger([258, 403, 671, 402, 290, 397, 932, 94, 959, 248, 760, 924, 838, 190, 274, 2, 136, 725, 773, 765, 903, 250, 212, 55, 23, 908, 704, 368, 69, 489, 293, 149, 647, 174, 86, 198, 477, 655, 942, 324, 2, 720, 198, 194, 926, 645, 149, 615, 488, 796, 518, 290, 282, 302, 884, 221, 357, 879, 315, 421, 485, 337, 131, 707, 339, 504, 11, 297, 887, 113, 637, 838], [228, 803, 534, 962, 32, 345, 288, 179, 938, 161, 868, 116, 398, 242, 387, 667, 750, 332, 320, 53, 933, 645, 32, 755, 320, 685, 675, 220, 143, 99, 737, 312, 228, 427, 433, 790, 914, 909, 515, 734, 224, 85, 518, 204, 369, 179, 367, 124, 917, 868, 972, 166, 251, 677, 795, 826, 323, 432, 548, 507, 519, 327, 451, 954, 280, 41, 956, 278, 354, 304]) == 30', 'assert minimumAddedInteger([311, 306, 386, 980, 618, 408, 900, 751, 530, 842, 648, 625, 688, 602, 107, 820, 625, 797, 989, 370, 75, 757, 909, 586, 336, 897, 175, 174, 338, 370, 41, 426, 70, 136, 73, 915, 607, 67, 872, 891, 198, 844, 952, 399, 625, 600, 276, 793, 816, 99, 764, 445, 357, 378, 64, 617, 499, 505, 876, 800, 279, 754, 915, 365, 896, 393, 220, 935, 993, 465, 567, 159, 62, 931, 255, 429, 759, 236, 276, 700, 717, 509, 26, 552, 889, 585, 599, 855, 352, 420], [566, 139, 723, 879, 275, 582, 63, 757, 300, 5, 784, 342, 334, 581, 138, 240, 357, 219, 316, 819, 329, 516, 836, 761, 494, 652, 321, 372, 664, 861, 334, 39, 681, 100, 26, 384, 31, 28, 363, 393, 718, 721, 879, 469, 37, 240, 409, 944, 895, 162, 243, 612, 200, 550, 853, 916, 840, 549, 806, 184, 764, 473, 390, 350, 855, 302, 34, 531, 270, 563, 463, 860, 123, 953, 564, 571, 957, 808, 873, 589, 728, 715, 899, 589, 71, 864, 429, 780]) == -36', 'assert minimumAddedInteger([739, 379, 801, 921, 840, 8, 200, 406, 564, 825, 958, 286, 237, 51, 336, 118, 370, 856, 968, 517, 72, 226, 786, 795, 642, 395, 901, 642, 540, 556, 167, 989, 738, 958, 635, 19, 133, 932, 228, 18, 528, 949, 483, 819, 168, 624, 835, 63, 232, 524, 440, 510, 743, 374, 909, 613, 525, 727, 106, 988, 132, 370, 787, 503, 506, 1, 199, 157, 653, 826, 953, 372, 405, 952, 400, 887], [754, 999, 867, 297, 383, 451, 738, 912, 239, 749, 74, 494, 797, 19, 646, 1000, 514, 381, 963, 551, 539, 385, 920, 964, 653, 943, 846, 248, 406, 837, 653, 168, 806, 535, 536, 567, 179, 528, 664, 237, 83, 969, 798, 411, 521, 830, 210, 144, 381, 416, 979, 243, 117, 898, 390, 178, 750, 12, 347, 969, 417, 62, 30, 575, 143, 129, 960, 836, 29, 851, 517, 812, 635, 624]) == 11', 'assert minimumAddedInteger([898, 439, 572, 622, 268, 498, 25, 183, 573, 916, 469, 383, 467, 663, 201, 52, 625, 347, 788, 586, 66, 860, 807, 862, 335, 634, 833, 96, 264, 946, 729, 974, 511, 575, 596, 805, 592, 537, 332, 252, 976, 156, 821, 549, 676, 751, 905, 804, 378, 965, 993, 877, 931, 590, 72, 47, 263, 522, 525, 35, 546, 745, 414, 772, 539, 197, 120, 298, 312, 235, 711, 347, 940, 585, 871, 600, 833, 351, 18, 91, 989, 164, 316, 918, 547, 747, 639], [853, 421, 234, 621, 582, 956, 574, 529, 913, 165, 34, 842, 711, 947, 658, 786, 246, 54, 146, 578, 360, 554, 787, 217, 521, 645, 555, 815, 887, 7, 844, 78, 727, 572, 789, 480, 493, 922, 733, 607, 567, 928, 245, 329, 138, 250, 314, 183, 693, 859, 958, 528, 17, 0, 179, 365, 616, 898, 451, 449, 102, 880, 504, 396, 900, 519, 815, 507, 770, 280, 298, 975, 333, 754, 971, 329, 73, 48, 803, 317, 604, 531, 568, 729, 294]) == -18', 'assert minimumAddedInteger([1, 5, 10, 3, 3, 5, 10, 9, 4, 4, 9, 3, 3, 8, 7, 3, 5, 1, 10, 8, 8, 4, 4, 6, 6, 6, 7, 1, 10, 5, 5, 1, 10, 8, 2, 9, 1, 6, 2, 8, 4, 1, 5, 8, 4, 5, 7, 4, 5, 9, 10, 5, 3, 7, 6, 2, 2, 2, 4, 6], [5, 8, 7, 1, 4, 3, 10, 7, 5, 1, 7, 4, 6, 4, 6, 3, 8, 1, 5, 1, 3, 8, 6, 6, 4, 8, 5, 9, 10, 9, 5, 5, 10, 5, 2, 4, 5, 8, 9, 7, 2, 4, 2, 10, 6, 3, 3, 4, 4, 1, 2, 8, 5, 9, 3, 2, 10, 1]) == 0', 'assert minimumAddedInteger([10, 6, 9, 6, 6, 1, 1, 2, 0, 0, 4, 10, 3, 7, 9, 0, 10, 2, 10, 1, 2, 0, 7, 6, 1, 9, 0, 7, 3, 8, 2, 3, 7, 3, 2, 2, 6, 6, 4, 9, 3, 2, 3, 6, 3, 7, 9, 2, 4, 8, 8, 0, 7, 10, 5, 1, 3, 7, 10, 2, 5, 1, 7, 4, 0, 4, 0, 7, 5, 6, 0, 2, 5, 6, 1, 6, 2, 5, 4, 7, 10, 10, 4, 8, 8, 8, 9, 7, 0, 9, 9, 9, 5], [10, 7, 5, 6, 9, 0, 0, 3, 0, 10, 3, 7, 7, 9, 1, 8, 8, 10, 6, 6, 7, 5, 4, 4, 4, 7, 2, 9, 0, 5, 10, 4, 2, 8, 1, 0, 7, 10, 9, 1, 2, 3, 10, 8, 5, 7, 2, 5, 9, 1, 2, 7, 6, 3, 6, 2, 0, 1, 3, 4, 7, 3, 2, 0, 6, 2, 0, 4, 2, 9, 4, 6, 6, 7, 3, 8, 8, 1, 9, 10, 3, 6, 2, 9, 6, 1, 2, 7, 5, 0, 9]) == 0', 'assert minimumAddedInteger([10, 10, 3, 5, 0, 6, 0, 7, 5, 5, 9, 9, 7, 0, 1, 5, 3, 10, 4, 4, 2, 7, 0, 5, 9, 1, 1, 9, 4, 5, 0, 1, 3, 3, 8, 0, 6, 3, 9, 6, 6, 7, 9, 0, 3, 1, 6, 4, 9, 0, 4, 0, 1, 9, 8, 5, 0, 8, 7, 6, 3, 2, 5, 9, 10, 7, 10, 6, 8, 10, 8, 9, 4, 7], [0, 9, 1, 0, 4, 6, 10, 9, 7, 6, 5, 3, 0, 3, 9, 0, 8, 8, 5, 7, 1, 2, 7, 1, 6, 7, 10, 5, 6, 0, 8, 7, 5, 5, 5, 3, 10, 4, 6, 1, 6, 7, 9, 0, 3, 3, 8, 0, 6, 4, 5, 5, 9, 10, 0, 9, 7, 3, 10, 1, 9, 0, 10, 4, 9, 3, 0, 9, 2, 9, 4, 1]) == 0', 'assert minimumAddedInteger([0, 6, 1, 0, 3, 1, 3, 6, 1, 5, 0, 7, 2, 10, 9, 9, 9, 1, 10, 10, 6, 10, 6, 10, 8, 3, 3, 6, 4, 5, 5, 6, 7, 2, 9, 0, 9, 10, 8, 3, 3, 5, 10, 7, 8, 5, 8, 8, 3, 2, 0, 10, 6, 3, 7, 0, 4, 9, 9, 2, 10, 2, 9, 6, 9, 3, 2, 3, 1, 3, 5, 6, 6, 6, 5, 2, 9, 5, 7, 1, 2, 0, 1, 8, 2, 5, 5, 0, 4, 5], [6, 3, 0, 6, 2, 2, 6, 9, 10, 10, 3, 10, 8, 1, 2, 1, 5, 9, 9, 6, 10, 7, 1, 5, 1, 9, 7, 5, 7, 8, 8, 0, 2, 7, 8, 10, 2, 10, 2, 5, 3, 1, 6, 10, 1, 3, 2, 3, 9, 9, 5, 3, 9, 6, 8, 4, 10, 4, 0, 10, 3, 3, 6, 1, 2, 6, 0, 9, 5, 6, 9, 4, 6, 3, 3, 7, 0, 8, 2, 9, 5, 0, 5, 5, 0, 5, 5, 6]) == 0', 'assert minimumAddedInteger([0, 10, 8, 1, 2, 7, 6, 7, 0, 5, 7, 1, 5, 2, 0, 2, 2, 5, 5, 3, 2, 10, 2, 10, 6, 7, 5, 6, 7, 6, 1, 2, 6, 0, 6, 3, 10, 6, 4, 5, 0, 0, 10, 8, 9, 0, 3, 4, 2, 8, 1, 8, 6, 4, 5, 5, 0, 4, 1, 9, 5, 1, 6, 2, 10, 1, 10, 1, 7, 6, 1, 4, 3, 9, 9, 6, 8], [3, 1, 2, 1, 0, 4, 1, 9, 10, 6, 4, 4, 6, 1, 2, 7, 9, 10, 5, 0, 0, 2, 3, 6, 10, 7, 8, 5, 7, 6, 0, 9, 6, 3, 7, 2, 5, 6, 5, 4, 6, 2, 3, 6, 2, 1, 1, 10, 5, 7, 5, 10, 10, 0, 2, 1, 7, 1, 6, 1, 6, 10, 0, 0, 8, 5, 2, 8, 2, 5, 9, 8, 4, 8, 0]) == 0', 'assert minimumAddedInteger([225, 863, 994, 534, 866, 529, 97, 51, 648, 55, 379, 71, 750, 510, 152, 43, 652, 252, 669, 648, 654, 506, 482, 812, 579, 393, 382, 706, 745, 457, 953, 272, 366, 901, 763, 524, 165, 455, 22, 925, 469, 546, 644, 615, 768, 820, 935, 853, 762, 684, 799, 698, 173, 36, 256, 76, 19, 210, 209, 853, 956, 459, 630, 696, 301, 278, 450, 838, 924, 639, 231, 539, 66, 579, 193, 736, 436, 924, 304, 823, 815, 894, 931, 137, 105, 691, 404, 589, 44, 995, 551, 404, 226, 956, 356, 890, 545, 332, 389, 409, 245, 229, 906, 444, 492, 414, 281, 17, 142, 200, 999, 550, 881, 119, 394, 755, 457, 611, 716, 946, 755, 524, 164, 768, 49, 684, 666, 91, 74, 25, 236, 329, 863, 543, 809, 13, 909, 870, 59, 200, 683, 334, 964, 293, 704, 602, 110, 926, 849, 788, 419, 684, 622, 434, 382, 922, 724, 304, 408, 930, 318, 817, 975, 505, 657, 486, 949, 51, 354, 348, 717, 995, 126, 316, 299, 113, 480, 813, 296, 793, 473, 56, 830, 467, 878, 991, 637, 797, 723, 796, 676, 717, 506], [746, 446, 525, 62, 811, 692, 535, 546, 506, 350, 813, 805, 926, 415, 949, 502, 390, 300, 808, 640, 385, 161, 404, 680, 196, 430, 248, 547, 453, 751, 713, 455, 902, 539, 432, 952, 289, 866, 611, 389, 138, 314, 277, 897, 859, 942, 542, 133, 378, 330, 680, 764, 106, 920, 931, 927, 196, 687, 991, 626, 819, 410, 295, 672, 793, 541, 644, 633, 945, 795, 834, 530, 890, 274, 352, 189, 971, 826, 18, 252, 877, 952, 70, 405, 122, 862, 325, 344, 52, 400, 849, 109, 501, 700, 478, 789, 845, 920, 115, 40, 222, 221, 362, 476, 463, 607, 679, 51, 991, 39, 87, 713, 47, 160, 816, 45, 650, 874, 680, 719, 451, 488, 469, 15, 758, 482, 886, 378, 232, 665, 169, 598, 520, 694, 227, 300, 453, 764, 101, 662, 148, 741, 784, 268, 990, 751, 987, 67, 995, 921, 575, 400, 635, 440, 312, 585, 809, 328, 72, 13, 32, 648, 9, 905, 960, 55, 720, 375, 618, 47, 644, 759, 575, 653, 21, 732, 292, 792, 93, 206, 241, 859, 502, 849, 520, 205, 918, 712, 465, 702, 297]) == -4', 'assert minimumAddedInteger([538, 408, 873, 598, 592, 76, 51, 743, 139, 673, 165, 12, 436, 471, 348, 15, 180, 297, 732, 611, 867, 468, 880, 695, 673, 269, 625, 937, 317, 363, 453, 57, 935, 161, 119, 389, 906, 650, 423, 517, 34, 76, 457, 46, 418, 947, 652, 569, 184, 809, 839, 103, 164, 688, 845, 885, 557, 285, 640, 194, 198, 592, 813, 759, 567, 371, 966, 780, 858, 60, 679, 749, 353, 815, 255, 275, 228, 281, 161, 895, 420, 766, 980, 710, 472, 958, 400, 348, 792, 530, 33, 293, 781, 499, 554, 583, 921, 108, 682, 44, 427, 377, 314, 308, 667, 476, 554, 388, 409, 22, 951, 546, 92, 344, 321, 498, 495, 58, 968, 831, 632, 394, 702, 895, 60, 537, 584, 184, 141, 228, 279, 31, 326, 498, 69, 283, 865, 281, 717, 258, 22, 612, 623, 138, 587, 106, 994, 548, 967, 688, 556, 866, 255, 636, 607, 984, 807, 336, 659, 541, 786, 494, 234, 384, 484, 101, 211, 569, 945, 263, 573, 745, 844, 935, 779, 594, 641, 589, 577, 133, 883, 529, 863, 960, 279, 418, 230, 373, 201, 855, 457], [780, 275, 984, 495, 710, 873, 554, 119, 935, 807, 667, 702, 792, 883, 51, 194, 994, 471, 484, 15, 625, 389, 732, 749, 400, 44, 180, 650, 408, 494, 546, 569, 344, 743, 184, 33, 436, 717, 781, 529, 759, 228, 813, 865, 598, 607, 587, 263, 258, 863, 283, 453, 409, 211, 517, 184, 937, 468, 108, 786, 682, 636, 418, 377, 530, 476, 22, 348, 281, 279, 640, 659, 201, 92, 103, 457, 69, 228, 866, 498, 895, 641, 58, 46, 945, 569, 958, 34, 255, 584, 921, 76, 279, 594, 285, 420, 498, 60, 688, 632, 554, 592, 557, 141, 472, 348, 234, 76, 394, 960, 317, 537, 427, 815, 679, 695, 809, 967, 308, 314, 541, 611, 418, 577, 839, 371, 161, 567, 133, 880, 612, 573, 388, 548, 766, 363, 968, 855, 935, 673, 281, 845, 423, 293, 269, 230, 139, 255, 198, 384, 138, 499, 895, 951, 673, 966, 164, 161, 858, 745, 60, 556, 947, 101, 844, 583, 353, 688, 336, 457, 980, 589, 652, 165, 373, 22, 106, 623, 57, 12, 779, 31, 831, 297, 321, 906, 592, 885, 326]) == 0', 'assert minimumAddedInteger([536, 69, 114, 203, 221, 51, 172, 671, 540, 651, 390, 680, 863, 663, 122, 838, 366, 694, 399, 462, 873, 725, 75, 491, 25, 514, 895, 323, 857, 83, 281, 834, 281, 177, 235, 66, 830, 262, 259, 209, 534, 799, 228, 814, 747, 959, 123, 777, 889, 34, 449, 503, 697, 117, 269, 274, 655, 964, 552, 21, 370, 899, 607, 199, 38, 515, 57, 938, 807, 187, 489, 711, 72, 778, 119, 398, 0, 745, 146, 118, 865, 893, 235, 57, 685, 77, 14, 957, 949, 106, 865, 210, 369, 994, 320, 98, 825, 356, 685, 281, 954, 719, 813, 912, 477, 783, 555, 102, 347, 734, 920, 977, 936, 365, 32, 329, 755, 141, 569, 293, 386, 585, 893, 469, 43, 457, 411, 280, 507, 29, 36, 494, 866, 936, 119, 465, 842, 61, 590, 570, 814, 236, 754, 768, 917, 737, 260, 953, 990, 709, 997, 765, 158, 165, 462, 452, 265, 757], [23, 400, 832, 459, 542, 687, 454, 687, 367, 999, 827, 868, 865, 959, 331, 283, 464, 261, 938, 711, 749, 901, 517, 322, 727, 713, 282, 451, 516, 779, 262, 951, 16, 148, 609, 996, 479, 979, 45, 401, 120, 572, 491, 237, 85, 538, 283, 505, 371, 237, 736, 267, 785, 283, 392, 27, 464, 295, 956, 955, 867, 496, 815, 34, 100, 223, 59, 104, 77, 770, 31, 844, 189, 179, 992, 493, 699, 276, 59, 205, 922, 2, 121, 471, 536, 809, 557, 121, 211, 74, 836, 721, 167, 919, 174, 816, 938, 349, 801, 554, 108, 116, 212, 124, 160, 587, 840, 125, 767, 897, 657, 143, 238, 230, 63, 891, 780, 368, 966, 653, 961, 816, 467, 673, 757, 36, 358, 571, 756, 79, 895, 38, 875, 940, 53, 201, 682, 271, 759, 696, 388, 509, 119, 71, 40, 665, 739, 859, 372, 914, 413, 747, 867, 895, 68, 264]) == 2', 'assert minimumAddedInteger([94, 773, 121, 599, 987, 299, 475, 644, 429, 970, 889, 957, 833, 923, 260, 543, 554, 161, 746, 765, 991, 22, 364, 160, 464, 780, 569, 322, 406, 467, 329, 842, 447, 974, 864, 684, 229, 975, 723, 824, 334, 559, 447, 358, 570, 623, 719, 653, 381, 294, 781, 655, 788, 326, 399, 716, 938, 231, 229, 829, 120, 78, 453, 694, 755, 29, 454, 852, 146, 803, 347, 672, 873, 649, 841, 135, 449, 386, 150, 249, 776, 634, 304, 517, 890, 901, 604, 307, 440, 694, 542, 96, 783, 660, 825, 608, 411, 314, 850, 962, 586, 792, 683, 887, 631, 66, 963, 853, 889, 540, 292, 252, 258, 568, 820, 507], [981, 412, 453, 809, 678, 392, 446, 729, 752, 127, 779, 968, 858, 830, 237, 655, 944, 789, 592, 895, 614, 549, 847, 266, 689, 659, 907, 787, 523, 976, 637, 650, 895, 152, 826, 831, 167, 459, 610, 353, 870, 629, 255, 455, 305, 786, 35, 435, 102, 332, 661, 310, 963, 513, 574, 798, 370, 156, 565, 722, 782, 470, 405, 605, 848, 166, 879, 298, 460, 264, 835, 666, 893, 980, 969, 725, 364, 771, 126, 700, 690, 340, 481, 839, 896, 859, 387, 335, 235, 258, 548, 761, 700, 320, 576, 929, 997, 300, 473, 546, 575, 417, 993, 100, 856, 72, 84, 640, 328, 141, 453, 560, 313, 28]) == 6', 'assert minimumAddedInteger([86, 44, 206, 231, 63, 913, 552, 647, 677, 697, 786, 445, 634, 494, 813, 81, 677, 320, 268, 92, 196, 875, 862, 848, 903, 910, 167, 312, 905, 444, 778, 322, 622, 363, 78, 627, 713, 754, 789, 371, 930, 713, 94, 358, 956, 598, 536, 917, 226, 697, 541, 843, 680, 731, 182, 253, 53, 395, 171, 456, 994, 99, 76, 86, 686, 753, 630, 548, 666, 651, 482, 730, 403, 285, 991, 239, 450, 29, 688, 581, 640, 910, 381, 840, 500, 596, 118, 672, 41, 943, 305, 188, 351, 894, 221, 54, 91, 684, 375, 404, 192, 962, 605, 273, 481, 995, 935, 831, 220, 837, 753, 394, 77, 822, 693, 777, 842, 100, 257, 327, 704, 807, 814, 445, 41, 881, 759, 7, 127, 917, 855, 215, 232, 19, 721, 886, 614, 995, 464, 139, 448, 757, 970, 20, 224, 558, 719, 190, 233, 117, 80, 71, 685, 546, 400, 683, 649, 521, 458, 239, 375], [755, 353, 616, 56, 649, 715, 915, 642, 685, 102, 554, 877, 397, 190, 377, 484, 816, 365, 22, 686, 46, 833, 241, 538, 779, 446, 997, 636, 788, 233, 79, 905, 583, 223, 402, 674, 119, 682, 688, 824, 679, 222, 937, 43, 733, 31, 629, 466, 217, 607, 287, 912, 695, 120, 141, 919, 96, 723, 699, 234, 88, 883, 844, 756, 307, 721, 314, 226, 600, 208, 996, 815, 496, 169, 761, 732, 65, 523, 405, 88, 270, 888, 82, 78, 43, 919, 406, 780, 83, 259, 93, 548, 396, 255, 907, 275, 679, 632, 377, 755, 598, 360, 94, 690, 715, 460, 483, 192, 550, 447, 839, 845, 129, 458, 373, 173, 964, 452, 993, 687, 194, 560, 502, 73, 383, 55, 668, 809, 241, 896, 447, 857, 324, 329, 864, 21, 322, 235, 997, 945, 912, 450, 198, 543, 624, 842, 9, 699, 101, 651, 958, 653, 932, 759, 706, 184, 972, 850, 228]) == 2', 'assert minimumAddedInteger([287, 475, 135, 52, 110, 115, 61, 478, 429, 129, 125, 123, 53, 200, 24, 106, 162, 200, 175, 402, 146, 402, 287, 420, 493, 429, 493, 115, 324, 300, 438, 396, 24, 320, 478, 423, 52, 244, 110, 127, 420, 300, 91, 91, 140, 316, 372, 149, 149, 396, 421, 320, 123, 400, 127, 492, 98, 244, 324, 284, 284, 25, 46, 129, 25, 394, 421, 125, 438, 135, 175, 347, 156, 394, 347, 186, 423, 429, 429, 372, 106, 92, 186, 200, 156, 316, 162, 490, 490, 492, 200, 53, 400, 98, 46, 475, 146, 140, 92, 61], [161, 484, 146, 475, 255, 153, 153, 375, 478, 476, 230, 182, 211, 371, 299, 116, 184, 451, 475, 484, 355, 484, 108, 147, 230, 241, 299, 190, 80, 101, 339, 184, 548, 201, 457, 427, 165, 211, 547, 204, 548, 379, 530, 204, 478, 402, 180, 339, 379, 451, 108, 178, 455, 101, 147, 161, 533, 402, 178, 180, 195, 547, 545, 457, 545, 146, 195, 449, 371, 493, 170, 427, 342, 375, 107, 255, 476, 217, 170, 355, 116, 449, 217, 165, 455, 255, 80, 493, 533, 342, 241, 201, 190, 484, 107, 530, 255, 182]) == 55', 'assert minimumAddedInteger([449, 303, 342, 304, 114, 229, 200, 201, 449, 249, 337, 139, 270, 114, 468, 304, 221, 431, 480, 34, 64, 38, 120, 388, 91, 434, 218, 249, 480, 64, 407, 250, 434, 259, 250, 253, 15, 169, 402, 40, 288, 388, 172, 227, 175, 38, 139, 426, 335, 346, 402, 253, 120, 288, 155, 218, 227, 212, 468, 201, 200, 337, 431, 213, 342, 155, 249, 221, 480, 229, 40, 175, 91, 270, 169, 15, 278, 249, 346, 221, 303, 228, 255, 221, 402, 212, 34, 448, 480, 448, 259, 228, 407, 213, 278, 402, 172, 426, 255, 335], [443, 256, 255, 314, 146, 390, 230, 462, 486, 95, 535, 443, 392, 481, 282, 224, 310, 333, 227, 273, 504, 392, 401, 95, 284, 358, 457, 93, 283, 308, 333, 523, 486, 503, 210, 119, 146, 276, 325, 457, 401, 267, 89, 305, 255, 276, 489, 304, 273, 267, 224, 503, 283, 457, 535, 308, 304, 358, 359, 256, 210, 276, 194, 462, 481, 276, 359, 304, 305, 89, 535, 282, 175, 268, 310, 489, 194, 523, 535, 343, 175, 169, 119, 304, 268, 230, 93, 314, 325, 390, 397, 504, 343, 457, 284, 397, 169, 227]) == 55', 'assert minimumAddedInteger([219, 98, 101, 463, 17, 394, 367, 301, 307, 196, 367, 11, 418, 445, 357, 377, 295, 380, 307, 224, 364, 390, 328, 59, 146, 463, 79, 461, 390, 377, 98, 380, 190, 79, 377, 430, 142, 27, 314, 101, 303, 32, 200, 333, 224, 357, 183, 295, 59, 219, 461, 200, 482, 445, 394, 289, 17, 49, 183, 65, 482, 433, 146, 470, 301, 142, 17, 190, 418, 96, 31, 32, 62, 314, 377, 96, 220, 418, 49, 62, 433, 65, 418, 430, 220, 11, 255, 303, 74, 333, 31, 364, 328, 255, 289, 196, 17, 470, 27, 74], [153, 488, 388, 72, 356, 445, 344, 251, 500, 422, 445, 350, 197, 537, 518, 422, 82, 435, 87, 383, 201, 473, 369, 518, 197, 412, 238, 120, 201, 473, 104, 473, 432, 473, 500, 238, 156, 356, 432, 72, 388, 369, 275, 245, 485, 245, 358, 153, 525, 114, 274, 129, 86, 274, 412, 310, 255, 82, 516, 255, 279, 516, 120, 362, 449, 156, 151, 350, 117, 114, 117, 310, 358, 525, 151, 432, 435, 432, 134, 72, 383, 362, 72, 485, 251, 279, 344, 104, 488, 537, 134, 275, 419, 86, 129, 449, 419, 87]) == 55', 'assert minimumAddedInteger([33, 185, 170, 323, 60, 259, 9, 270, 262, 407, 303, 106, 339, 314, 295, 212, 303, 47, 103, 99, 339, 185, 350, 136, 33, 314, 379, 47, 346, 129, 170, 276, 132, 79, 348, 28, 12, 60, 160, 134, 447, 44, 323, 500, 395, 129, 79, 346, 198, 9, 160, 373, 258, 4, 282, 370, 160, 160, 143, 319, 134, 373, 299, 258, 132, 500, 348, 282, 259, 212, 380, 136, 262, 28, 276, 319, 380, 99, 143, 370, 103, 85, 12, 350, 395, 85, 370, 295, 270, 44, 447, 198, 334, 299, 334, 407, 106, 370, 4, 379], [267, 405, 354, 337, 240, 425, 198, 317, 67, 378, 184, 102, 253, 555, 314, 158, 158, 325, 394, 325, 350, 191, 317, 215, 314, 253, 428, 313, 191, 140, 378, 215, 134, 354, 67, 369, 64, 99, 403, 401, 401, 435, 189, 154, 337, 88, 428, 502, 187, 555, 215, 225, 434, 83, 134, 450, 405, 64, 358, 115, 99, 369, 435, 331, 403, 140, 502, 88, 154, 189, 425, 462, 161, 358, 434, 102, 161, 187, 240, 425, 389, 425, 83, 267, 389, 184, 374, 198, 313, 350, 394, 450, 331, 225, 215, 462, 115, 374]) == 55', 'assert minimumAddedInteger([436, 66, 393, 483, 419, 182, 257, 88, 293, 398, 105, 439, 26, 14, 347, 176, 182, 193, 136, 393, 274, 14, 74, 406, 376, 348, 176, 377, 106, 431, 105, 251, 406, 15, 474, 123, 348, 259, 385, 44, 397, 127, 173, 116, 499, 88, 377, 418, 136, 74, 293, 354, 106, 168, 168, 344, 328, 322, 370, 398, 495, 483, 251, 44, 370, 157, 274, 55, 193, 499, 495, 385, 173, 347, 439, 123, 344, 116, 328, 376, 436, 15, 127, 66, 471, 259, 471, 322, 418, 26, 157, 431, 257, 354, 366, 397, 366, 55, 419, 474], [312, 110, 178, 237, 329, 529, 529, 491, 178, 403, 212, 409, 377, 228, 431, 440, 312, 143, 526, 432, 191, 425, 231, 453, 248, 486, 461, 399, 448, 110, 409, 452, 538, 161, 191, 421, 452, 129, 550, 161, 486, 314, 399, 538, 231, 474, 550, 171, 121, 474, 160, 223, 228, 473, 421, 383, 402, 461, 306, 99, 431, 383, 248, 348, 81, 70, 329, 160, 494, 129, 348, 171, 182, 554, 473, 81, 70, 554, 99, 453, 314, 402, 494, 306, 448, 425, 491, 526, 432, 223, 121, 237, 403, 377, 143, 182, 212, 440]) == 55', 'assert minimumAddedInteger([3, 3, 5, 5, 7, 7, 9, 9], [10, 10, 12, 12, 14, 14]) == 5', 'assert minimumAddedInteger([1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == -1000', 'assert minimumAddedInteger([3, 3, 5, 5, 7, 7, 9, 9], [8, 10, 10, 12, 14, 14]) == 5']
correct = 0
for t in tests:
    try:
        exec(t)
        correct+=1
    except:
        print(t)
        break
        #pass
success = len(tests) == correct
print(correct,'/',len(tests))
print(success)
