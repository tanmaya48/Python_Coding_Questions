from question import maximumTotalDamage
tests = ['assert maximumTotalDamage([1, 1, 3, 4]) == 6', 'assert maximumTotalDamage([7, 1, 6, 6]) == 13', 'assert maximumTotalDamage([7, 1, 6, 3]) == 10', 'assert maximumTotalDamage([5, 9, 2, 10, 2, 7, 10, 9, 3, 8]) == 31', 'assert maximumTotalDamage([3, 3, 1, 2, 3, 3, 1, 2, 1]) == 12', 'assert maximumTotalDamage([2, 1, 2, 3, 3, 1, 4, 4]) == 10', 'assert maximumTotalDamage([4, 3]) == 4', 'assert maximumTotalDamage([5, 1, 4]) == 6', 'assert maximumTotalDamage([1, 1, 1, 1, 1, 1]) == 6', 'assert maximumTotalDamage([3, 2, 2, 1, 1, 2, 2, 4, 1, 1]) == 8', 'assert maximumTotalDamage([3, 1, 1, 1, 3]) == 6', 'assert maximumTotalDamage([3, 3]) == 6', 'assert maximumTotalDamage([3, 2, 4, 2, 3, 3, 1, 3, 2]) == 12', 'assert maximumTotalDamage([3, 4, 8, 10, 8, 8, 3]) == 30', 'assert maximumTotalDamage([6, 3, 8, 2]) == 11', 'assert maximumTotalDamage([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 10', 'assert maximumTotalDamage([1, 4, 3, 1, 1, 2, 3, 2, 1, 3]) == 9', 'assert maximumTotalDamage([8, 7, 3, 7, 6, 6]) == 17', 'assert maximumTotalDamage([10]) == 10', 'assert maximumTotalDamage([6, 2]) == 8', 'assert maximumTotalDamage([5, 2, 8, 1, 8, 7, 6]) == 23', 'assert maximumTotalDamage([3, 4, 2, 1, 5, 3, 4, 4]) == 13', 'assert maximumTotalDamage([2, 1, 3, 1, 3, 3, 1, 3]) == 12', 'assert maximumTotalDamage([3]) == 3', 'assert maximumTotalDamage([1, 1, 3, 2, 3, 4, 5, 2, 3, 3]) == 12', 'assert maximumTotalDamage([2, 1, 2, 3, 2, 2, 1, 2]) == 10', 'assert maximumTotalDamage([1, 2, 1, 1, 1, 3, 3, 1, 1]) == 6', 'assert maximumTotalDamage([2, 1, 1, 1, 2, 1, 1, 2]) == 6', 'assert maximumTotalDamage([3, 2, 2]) == 4', 'assert maximumTotalDamage([5, 5, 1, 2, 2, 3, 3, 5, 4, 1]) == 19', 'assert maximumTotalDamage([6, 4, 1, 6, 7, 1, 4, 7]) == 24', 'assert maximumTotalDamage([3, 4, 4, 5]) == 8', 'assert maximumTotalDamage([2, 2]) == 4', 'assert maximumTotalDamage([1, 3, 3, 3]) == 9', 'assert maximumTotalDamage([6, 8, 2, 3, 8, 3, 5, 8, 5, 2]) == 38', 'assert maximumTotalDamage([3, 4, 7, 3, 3, 1, 1]) == 16', 'assert maximumTotalDamage([2]) == 2', 'assert maximumTotalDamage([2, 1, 2, 2]) == 6', 'assert maximumTotalDamage([4, 2, 5, 1, 2, 4]) == 9', 'assert maximumTotalDamage([4, 5, 5, 6, 3, 6, 5, 3, 4]) == 18', 'assert maximumTotalDamage([2, 3, 2, 4, 1, 3, 1, 2, 3, 2]) == 9', 'assert maximumTotalDamage([3, 1, 2, 2, 2, 1]) == 6', 'assert maximumTotalDamage([1, 1, 1, 1]) == 4', 'assert maximumTotalDamage([1, 4, 2, 2, 3, 1, 2, 4]) == 10', 'assert maximumTotalDamage([2, 3, 2, 2, 3, 3, 1, 1, 1, 2]) == 9', 'assert maximumTotalDamage([1, 4, 3, 3, 2, 2, 3, 3, 4]) == 12', 'assert maximumTotalDamage([2, 9, 10]) == 12', 'assert maximumTotalDamage([1, 1, 2, 5]) == 7', 'assert maximumTotalDamage([7, 3, 1, 7, 5, 3, 7, 2, 4, 7]) == 34', 'assert maximumTotalDamage([6]) == 6', 'assert maximumTotalDamage([4, 3, 4, 3, 1, 3, 3, 1, 3]) == 15', 'assert maximumTotalDamage([6, 7, 1, 7, 6, 4, 5, 7]) == 26', 'assert maximumTotalDamage([4]) == 4', 'assert maximumTotalDamage([5, 6, 7, 4, 1, 7]) == 19', 'assert maximumTotalDamage([1, 1, 1]) == 3', 'assert maximumTotalDamage([8]) == 8', 'assert maximumTotalDamage([1, 2, 1, 1, 2, 2, 2, 1, 2]) == 10', 'assert maximumTotalDamage([1, 2, 2, 2, 3, 3, 1, 1]) == 6', 'assert maximumTotalDamage([7]) == 7', 'assert maximumTotalDamage([6, 4, 6, 3, 6, 2, 2]) == 22', 'assert maximumTotalDamage([2, 2, 2, 2, 2, 3, 1, 3, 3, 3]) == 12', 'assert maximumTotalDamage([10, 2, 1, 9, 7, 8, 2]) == 21', 'assert maximumTotalDamage([1, 1, 3, 2, 1, 2]) == 4', 'assert maximumTotalDamage([1, 6, 6, 1, 1, 5, 4, 3, 7, 7]) == 21', 'assert maximumTotalDamage([6, 4, 4, 4, 3, 3, 2, 3]) == 15', 'assert maximumTotalDamage([8, 5, 4, 5, 2, 8]) == 28', 'assert maximumTotalDamage([5, 1]) == 6', 'assert maximumTotalDamage([3, 3, 2, 2, 1, 3, 2, 1, 1]) == 9', 'assert maximumTotalDamage([5, 5, 2]) == 12', 'assert maximumTotalDamage([4, 5, 5, 5, 5, 9]) == 29', 'assert maximumTotalDamage([5, 2, 4, 5, 3]) == 12', 'assert maximumTotalDamage([2, 1, 4, 3, 1, 1, 1, 5]) == 9', 'assert maximumTotalDamage([9, 3, 7, 6]) == 18', 'assert maximumTotalDamage([2, 1, 2, 1, 2]) == 6', 'assert maximumTotalDamage([2, 1, 6]) == 8', 'assert maximumTotalDamage([1, 1, 1, 1, 1]) == 5', 'assert maximumTotalDamage([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9', 'assert maximumTotalDamage([3, 3, 9, 3, 6, 6, 3, 2]) == 33', 'assert maximumTotalDamage([4, 9]) == 13', 'assert maximumTotalDamage([4, 2, 2, 9, 8, 2, 9, 3]) == 24', 'assert maximumTotalDamage([3, 1, 2, 4, 1, 5, 3]) == 7', 'assert maximumTotalDamage([6, 9, 4, 3, 1, 8]) == 18', 'assert maximumTotalDamage([3, 2, 1, 2, 1]) == 4', 'assert maximumTotalDamage([7, 5, 6, 1, 3, 3, 3, 7, 5, 3]) == 26', 'assert maximumTotalDamage([4, 4, 5, 5, 9]) == 19', 'assert maximumTotalDamage([10, 6, 6, 9, 2, 1, 9, 6, 7, 5]) == 38', 'assert maximumTotalDamage([5, 3, 6, 2, 1, 3]) == 12', 'assert maximumTotalDamage([7, 5, 5, 4, 10, 6, 2, 2]) == 24', 'assert maximumTotalDamage([4, 6, 1, 1, 2, 2, 10]) == 20', 'assert maximumTotalDamage([6, 5, 4, 9, 7, 8, 9, 3, 7]) == 27', 'assert maximumTotalDamage([8, 8, 8, 4, 4, 7, 6, 10, 7, 6]) == 32', 'assert maximumTotalDamage([3, 1, 1, 2, 4]) == 6', 'assert maximumTotalDamage([6, 4, 2, 4, 3, 2, 4, 5, 3]) == 12', 'assert maximumTotalDamage([7, 2]) == 9', 'assert maximumTotalDamage([2, 6, 2, 1, 6]) == 16', 'assert maximumTotalDamage([1, 3, 3]) == 6', 'assert maximumTotalDamage([2, 1]) == 2', 'assert maximumTotalDamage([6, 4, 1, 2, 7, 7, 5, 6, 3]) == 19', 'assert maximumTotalDamage([4, 5, 5, 2, 4, 4, 5, 2, 5, 5]) == 29', 'assert maximumTotalDamage([1, 1]) == 2', 'assert maximumTotalDamage([2, 2, 3, 6, 4, 6, 1, 9, 4]) == 25', 'assert maximumTotalDamage([1, 4, 5, 2, 5]) == 12', 'assert maximumTotalDamage([1, 4, 2, 5, 3, 2, 4, 2, 4, 2]) == 13', 'assert maximumTotalDamage([2, 2, 2]) == 6', 'assert maximumTotalDamage([7, 4, 7]) == 18', 'assert maximumTotalDamage([4, 1, 2, 5]) == 7', 'assert maximumTotalDamage([2, 3, 4, 2, 3, 5, 2, 5, 5, 4]) == 21', 'assert maximumTotalDamage([3, 1]) == 3', 'assert maximumTotalDamage([5]) == 5', 'assert maximumTotalDamage([8, 9, 7, 9, 2, 7, 2, 7]) == 25', 'assert maximumTotalDamage([2, 1, 1, 2, 1, 2, 1, 1, 1]) == 6', 'assert maximumTotalDamage([2, 1, 2]) == 4', 'assert maximumTotalDamage([2, 3, 2]) == 4', 'assert maximumTotalDamage([1]) == 1', 'assert maximumTotalDamage([2, 2, 5, 2]) == 11', 'assert maximumTotalDamage([2, 2, 7, 1]) == 11', 'assert maximumTotalDamage([4, 6, 5, 1, 4, 5, 7, 6, 4]) == 20', 'assert maximumTotalDamage([3, 3, 6, 3, 8, 8, 7, 7, 4]) == 25', 'assert maximumTotalDamage([2, 1, 1, 2, 2]) == 6', 'assert maximumTotalDamage([5, 7, 3, 5, 8, 5, 7, 5, 6, 7]) == 28', 'assert maximumTotalDamage([4, 3, 4, 5, 8, 7, 7, 5, 8]) == 26', 'assert maximumTotalDamage([2, 4, 6, 6, 3]) == 15', 'assert maximumTotalDamage([1, 3, 2, 2]) == 4', 'assert maximumTotalDamage([3, 1, 2, 2, 3, 2]) == 6', 'assert maximumTotalDamage([3, 1, 3, 4, 1, 3, 2, 3, 1]) == 12', 'assert maximumTotalDamage([8, 10]) == 10', 'assert maximumTotalDamage([4, 9, 6, 1, 4]) == 18', 'assert maximumTotalDamage([7, 1, 1, 1, 6, 3, 3]) == 13', 'assert maximumTotalDamage([5, 9, 9]) == 23', 'assert maximumTotalDamage([1, 2, 1, 2, 2, 2, 6, 4, 2]) == 16', 'assert maximumTotalDamage([1, 3, 1, 3]) == 6', 'assert maximumTotalDamage([6, 2, 3, 3, 5, 4]) == 12', 'assert maximumTotalDamage([8, 4, 3, 7, 5, 4]) == 16', 'assert maximumTotalDamage([1, 1, 1, 1, 1, 1, 1]) == 7', 'assert maximumTotalDamage([4, 1, 3, 4, 5, 2, 2]) == 9', 'assert maximumTotalDamage([3, 3, 3, 1, 4]) == 9', 'assert maximumTotalDamage([5, 2, 3, 4]) == 7', 'assert maximumTotalDamage([3, 1, 5, 4, 3, 6, 5, 3]) == 15', 'assert maximumTotalDamage([2, 6]) == 8', 'assert maximumTotalDamage([1, 2, 1, 3, 2]) == 4', 'assert maximumTotalDamage([2, 1, 7, 3, 3, 1, 4, 6]) == 13', 'assert maximumTotalDamage([7, 4, 6, 10, 3]) == 21', 'assert maximumTotalDamage([6, 3]) == 9', 'assert maximumTotalDamage([7, 1, 2, 5, 6, 7, 5, 2, 2, 1]) == 20', 'assert maximumTotalDamage([1, 3, 5, 2, 6, 5]) == 12', 'assert maximumTotalDamage([4, 4, 4, 4, 1, 5, 2, 4, 3]) == 21', 'assert maximumTotalDamage([1, 3, 9, 3, 4, 9, 2, 5]) == 25', 'assert maximumTotalDamage([4, 3, 5, 6, 1]) == 9', 'assert maximumTotalDamage([3, 3, 2, 5]) == 7', 'assert maximumTotalDamage([2, 2, 2, 2, 1, 1, 1]) == 8', 'assert maximumTotalDamage([3, 5, 5, 6, 5]) == 15', 'assert maximumTotalDamage([4, 1, 2, 2, 6, 2, 5, 3]) == 12', 'assert maximumTotalDamage([4, 1, 1, 1, 3, 1, 2]) == 8', 'assert maximumTotalDamage([6, 1, 1, 9]) == 17', 'assert maximumTotalDamage([2, 5, 6, 4, 7, 3, 6]) == 15', 'assert maximumTotalDamage([2, 5]) == 7', 'assert maximumTotalDamage([4, 1, 3, 3, 4, 1]) == 10', 'assert maximumTotalDamage([4, 1, 1, 5, 4, 5, 3]) == 12', 'assert maximumTotalDamage([4, 5, 5, 3, 5, 4, 2, 5, 4]) == 22', 'assert maximumTotalDamage([3, 3, 7, 1, 2, 7]) == 20', 'assert maximumTotalDamage([3, 6, 6, 2]) == 15', 'assert maximumTotalDamage([6, 9, 2, 3, 5, 4, 1, 4, 5]) == 21', 'assert maximumTotalDamage([6, 5, 4, 7, 5, 3, 4, 3]) == 15', 'assert maximumTotalDamage([4, 4, 2, 3, 4, 4, 1]) == 17', 'assert maximumTotalDamage([5, 8, 1, 6, 7, 3]) == 14', 'assert maximumTotalDamage([4, 2, 3, 4, 4, 3]) == 12', 'assert maximumTotalDamage([7, 4, 8, 3, 7, 7, 4, 8, 7]) == 36', 'assert maximumTotalDamage([5, 6, 3, 6, 4, 5, 1, 3]) == 18', 'assert maximumTotalDamage([2, 2, 4]) == 4', 'assert maximumTotalDamage([3, 1, 2, 2, 1]) == 4', 'assert maximumTotalDamage([3, 1, 2, 1]) == 3', 'assert maximumTotalDamage([3, 2, 2, 1, 3, 3, 2, 1]) == 9', 'assert maximumTotalDamage([1, 7]) == 8', 'assert maximumTotalDamage([3, 7, 2]) == 10', 'assert maximumTotalDamage([2, 4, 5, 5, 5, 1]) == 17', 'assert maximumTotalDamage([1, 1, 1, 1, 1, 1, 1, 1]) == 8', 'assert maximumTotalDamage([3, 1, 2, 3, 2, 1]) == 6', 'assert maximumTotalDamage([2, 2, 3, 4]) == 4', 'assert maximumTotalDamage([2, 2, 1, 2]) == 6', 'assert maximumTotalDamage([1, 2, 2, 1]) == 4', 'assert maximumTotalDamage([1, 2, 1, 3, 2, 3, 3]) == 9', 'assert maximumTotalDamage([3, 2]) == 3', 'assert maximumTotalDamage([2, 4, 7]) == 11', 'assert maximumTotalDamage([3, 2, 2, 3, 3]) == 9', 'assert maximumTotalDamage([1, 2, 1, 2, 1, 2, 2, 2, 2, 2]) == 14', 'assert maximumTotalDamage([2, 2, 2, 2, 2, 3, 1, 3, 1]) == 10', 'assert maximumTotalDamage([4, 3, 3, 3, 4, 4, 1, 5, 2]) == 13', 'assert maximumTotalDamage([1, 1, 1, 2]) == 3', 'assert maximumTotalDamage([2, 2, 2, 1, 2, 1]) == 8', 'assert maximumTotalDamage([1, 3, 3, 1, 1]) == 6', 'assert maximumTotalDamage([1, 2]) == 2', 'assert maximumTotalDamage([2, 8, 6, 2, 6, 3, 3, 2]) == 18', 'assert maximumTotalDamage([1, 1, 2, 4, 2, 2, 1]) == 7', 'assert maximumTotalDamage([3, 2, 3, 7, 6, 4]) == 13', 'assert maximumTotalDamage([1, 1, 6, 6, 7, 4]) == 14', 'assert maximumTotalDamage([1, 1, 2, 1, 1, 1, 1, 1, 1, 2]) == 8', 'assert maximumTotalDamage([4, 4, 3, 2, 4, 4, 6, 4]) == 20', 'assert maximumTotalDamage([3, 4, 3, 8, 4, 7, 2, 2, 5]) == 17', 'assert maximumTotalDamage([2, 1, 1, 2, 1, 1, 2, 1, 3, 2]) == 8', 'assert maximumTotalDamage([5, 5, 3, 2]) == 12', 'assert maximumTotalDamage([6, 4, 1, 6, 3, 4, 2, 3, 1, 4]) == 18', 'assert maximumTotalDamage([4, 1, 1]) == 6', 'assert maximumTotalDamage([7, 4, 5, 3]) == 11', 'assert maximumTotalDamage([1, 2, 6, 4, 3, 4]) == 9', 'assert maximumTotalDamage([2, 4, 1, 6, 1, 2]) == 10', 'assert maximumTotalDamage([3, 6, 6, 6]) == 21', 'assert maximumTotalDamage([1, 3, 3, 3, 2]) == 9', 'assert maximumTotalDamage([2, 4]) == 4', 'assert maximumTotalDamage([2, 6, 7, 6, 6, 5, 6, 3]) == 27', 'assert maximumTotalDamage([3, 4, 6]) == 9', 'assert maximumTotalDamage([2, 2, 3, 2, 3]) == 6', 'assert maximumTotalDamage([5, 8, 4, 1, 8, 4, 2, 7]) == 25', 'assert maximumTotalDamage([7, 4]) == 11', 'assert maximumTotalDamage([2, 5, 4, 3, 2, 1, 3]) == 9', 'assert maximumTotalDamage([8, 2, 6, 4, 2]) == 12', 'assert maximumTotalDamage([1, 1, 2, 4, 1, 4, 2]) == 11', 'assert maximumTotalDamage([7, 4, 10, 9, 7, 9, 9, 2, 3, 9]) == 40', 'assert maximumTotalDamage([1, 1, 4, 5, 6, 5, 4, 5, 5, 4]) == 22', 'assert maximumTotalDamage([1, 1, 2, 3]) == 3', 'assert maximumTotalDamage([3, 6, 6, 9, 3]) == 27', 'assert maximumTotalDamage([3, 5, 1]) == 6', 'assert maximumTotalDamage([1, 1, 1, 2, 2, 2, 2, 2, 2]) == 12', 'assert maximumTotalDamage([1, 3, 2, 4, 1, 1, 1, 1, 4, 4]) == 17', 'assert maximumTotalDamage([2, 3, 2, 3, 1, 2]) == 6', 'assert maximumTotalDamage([4, 2, 7, 7, 2]) == 18', 'assert maximumTotalDamage([5, 4, 10, 5, 3, 7, 8, 2]) == 22', 'assert maximumTotalDamage([1, 7, 5, 4, 2, 2]) == 12', 'assert maximumTotalDamage([1, 3, 6, 2, 2, 3, 1, 4]) == 12', 'assert maximumTotalDamage([7, 3, 2, 3, 7, 6, 5, 5, 6, 3]) == 23', 'assert maximumTotalDamage([2, 5, 3, 3, 6, 4, 5, 1, 3, 4]) == 15', 'assert maximumTotalDamage([1, 4, 3, 2, 3, 6, 5]) == 12', 'assert maximumTotalDamage([2, 4, 3, 2]) == 4', 'assert maximumTotalDamage([1, 2, 1, 2, 2, 2, 1]) == 8', 'assert maximumTotalDamage([2, 3, 2, 4, 2, 1]) == 6', 'assert maximumTotalDamage([3, 4, 3, 3, 4, 2, 4, 1]) == 13', 'assert maximumTotalDamage([3, 1, 1, 3, 1, 2]) == 6', 'assert maximumTotalDamage([6, 2, 4, 6, 1, 7, 4, 5]) == 16', 'assert maximumTotalDamage([9, 2]) == 11', 'assert maximumTotalDamage([1, 6, 4, 5, 2, 3, 3, 10]) == 22', 'assert maximumTotalDamage([6, 8, 3, 6, 1, 4, 9]) == 24', 'assert maximumTotalDamage([5, 6, 3, 1, 2, 5, 2, 4, 3]) == 14', 'assert maximumTotalDamage([2, 1, 5]) == 7', 'assert maximumTotalDamage([1, 1, 2, 1, 2, 3, 2, 2]) == 8', 'assert maximumTotalDamage([4, 4, 3, 1, 5, 6, 1]) == 10', 'assert maximumTotalDamage([1, 1, 1, 2, 3]) == 3', 'assert maximumTotalDamage([5, 7]) == 7', 'assert maximumTotalDamage([1, 5, 3, 5, 6]) == 11', 'assert maximumTotalDamage([3, 1, 4, 4, 4, 2, 6, 7, 5, 1]) == 21', 'assert maximumTotalDamage([2, 5, 5, 6, 7, 7, 1]) == 16', 'assert maximumTotalDamage([4, 1, 7]) == 12', 'assert maximumTotalDamage([2, 2, 1]) == 4', 'assert maximumTotalDamage([4, 4, 1, 4]) == 13', 'assert maximumTotalDamage([1, 1, 1, 1, 2, 1, 2]) == 5', 'assert maximumTotalDamage([4, 4, 2, 2, 1]) == 9', 'assert maximumTotalDamage([3, 2, 3, 3, 1, 4, 2]) == 9', 'assert maximumTotalDamage([6, 3, 3, 5, 6, 6, 5, 3, 1]) == 27', 'assert maximumTotalDamage([1, 1, 2, 2]) == 4', 'assert maximumTotalDamage([5, 2, 4, 2, 4, 1]) == 9', 'assert maximumTotalDamage([9, 10, 5, 4, 6, 2, 1, 8]) == 18', 'assert maximumTotalDamage([2, 4, 3, 3, 3, 4]) == 9', 'assert maximumTotalDamage([1, 2, 3, 3, 3, 2, 3, 2, 3, 1]) == 15', 'assert maximumTotalDamage([1, 1, 2, 3, 1]) == 3', 'assert maximumTotalDamage([4, 5, 2, 4, 4, 6, 1, 1, 6]) == 14', 'assert maximumTotalDamage([3, 3, 4, 1, 2, 3, 1, 2, 3, 4]) == 12', 'assert maximumTotalDamage([5, 6, 6, 5]) == 12', 'assert maximumTotalDamage([2, 1, 1, 1, 2, 2, 2, 1, 2, 1]) == 10', 'assert maximumTotalDamage([1, 1, 6, 1, 3, 8, 4]) == 15', 'assert maximumTotalDamage([1, 3, 3, 3, 1, 3, 3, 2]) == 15', 'assert maximumTotalDamage([2, 3, 2, 2, 3, 2, 2]) == 10', 'assert maximumTotalDamage([1, 5, 4, 2, 3, 5]) == 12', 'assert maximumTotalDamage([4, 1, 3]) == 5', 'assert maximumTotalDamage([1, 1, 2, 1, 2, 2]) == 6', 'assert maximumTotalDamage([2, 2, 3, 2, 1, 1, 1, 2]) == 8', 'assert maximumTotalDamage([1, 3, 2, 8, 4, 6, 8, 9, 1]) == 22', 'assert maximumTotalDamage([6, 4]) == 6', 'assert maximumTotalDamage([5, 5, 5, 4, 2, 4, 4, 1, 4, 4]) == 21', 'assert maximumTotalDamage([7, 7]) == 14', 'assert maximumTotalDamage([4, 1, 5, 7, 2, 4]) == 16', 'assert maximumTotalDamage([4, 3, 2, 1]) == 5', 'assert maximumTotalDamage([2, 5, 3, 2, 3]) == 9', 'assert maximumTotalDamage([5, 5, 7, 4, 2]) == 12', 'assert maximumTotalDamage([3, 8]) == 11', 'assert maximumTotalDamage([3, 6, 7, 9, 2, 7, 5, 3, 5, 1]) == 21', 'assert maximumTotalDamage([3, 3, 2, 1, 2, 1, 2, 3, 3]) == 12', 'assert maximumTotalDamage([1, 2, 2]) == 4', 'assert maximumTotalDamage([7, 3, 9, 8]) == 12', 'assert maximumTotalDamage([5, 5, 3, 7, 5, 4, 3, 9]) == 24', 'assert maximumTotalDamage([5, 5, 1]) == 11', 'assert maximumTotalDamage([5, 6, 5, 2]) == 12', 'assert maximumTotalDamage([4, 3, 4, 3, 1, 2, 1, 4, 1, 2]) == 15', 'assert maximumTotalDamage([9]) == 9', 'assert maximumTotalDamage([1, 4, 1, 2, 2, 5, 3]) == 9', 'assert maximumTotalDamage([1, 3, 3, 1, 2, 2]) == 6', 'assert maximumTotalDamage([10, 4]) == 14', 'assert maximumTotalDamage([2, 2, 1, 1, 1, 2, 1, 1, 1]) == 6', 'assert maximumTotalDamage([2, 2, 2, 1, 1, 2, 1, 1, 1]) == 8', 'assert maximumTotalDamage([3, 9, 4, 1, 6, 6, 1, 8]) == 24', 'assert maximumTotalDamage([1, 2, 2, 1, 1, 1, 2, 1]) == 6', 'assert maximumTotalDamage([2, 6, 4, 8]) == 12', 'assert maximumTotalDamage([2, 5, 4, 2]) == 9', 'assert maximumTotalDamage([3, 5]) == 5', 'assert maximumTotalDamage([4, 6, 6, 3, 3, 2, 1, 2, 1, 6]) == 24', 'assert maximumTotalDamage([6, 5, 6, 6, 3, 2, 5, 7, 5, 7]) == 21', 'assert maximumTotalDamage([4, 2, 4]) == 8', 'assert maximumTotalDamage([4, 4, 6, 7, 1, 7, 2, 5, 1, 5]) == 24', 'assert maximumTotalDamage([5, 1, 5, 5, 9, 5, 6, 10, 7, 9]) == 39', 'assert maximumTotalDamage([1, 2, 4, 3]) == 5', 'assert maximumTotalDamage([4, 3, 4, 2, 5, 3, 3, 2, 3, 3]) == 15', 'assert maximumTotalDamage([5, 10, 4, 1]) == 16', 'assert maximumTotalDamage([4, 2, 1]) == 5', 'assert maximumTotalDamage([1, 3, 1, 5, 9, 6, 4, 2, 4]) == 19', 'assert maximumTotalDamage([4, 1, 4, 4, 4]) == 17', 'assert maximumTotalDamage([1, 6, 7, 3, 8, 4, 3, 7, 2]) == 20', 'assert maximumTotalDamage([2, 2, 1, 1, 2]) == 6', 'assert maximumTotalDamage([3, 1, 2, 4]) == 5', 'assert maximumTotalDamage([5, 3, 4, 3, 5, 3]) == 10', 'assert maximumTotalDamage([3, 1, 3, 3]) == 9', 'assert maximumTotalDamage([9, 6, 5, 2]) == 17', 'assert maximumTotalDamage([4, 5, 1, 1, 4]) == 10', 'assert maximumTotalDamage([1, 4, 4, 4]) == 13', 'assert maximumTotalDamage([2, 1, 2, 2, 1]) == 6', 'assert maximumTotalDamage([8, 1, 5, 4, 5, 8, 6]) == 27', 'assert maximumTotalDamage([2, 4, 3, 3, 6, 3, 4]) == 15', 'assert maximumTotalDamage([1, 3, 1, 3, 3, 3, 1, 2, 4, 1]) == 12', 'assert maximumTotalDamage([3, 2, 3]) == 6', 'assert maximumTotalDamage([5, 8, 3]) == 13', 'assert maximumTotalDamage([5, 3, 5, 4, 7]) == 11', 'assert maximumTotalDamage([1, 5, 1]) == 7', 'assert maximumTotalDamage([5, 9, 9, 2, 9, 7, 7, 4]) == 34', 'assert maximumTotalDamage([1, 1, 1, 2, 1, 1, 2]) == 5', 'assert maximumTotalDamage([6, 7, 4, 5, 4, 5, 4, 3]) == 19', 'assert maximumTotalDamage([8, 4, 2, 1, 9, 3, 8]) == 21', 'assert maximumTotalDamage([6, 8, 3, 1, 9]) == 18', 'assert maximumTotalDamage([5, 4, 1, 2, 3]) == 7', 'assert maximumTotalDamage([2, 7, 4, 5, 6, 3]) == 11', 'assert maximumTotalDamage([6, 4, 3, 1, 2]) == 9', 'assert maximumTotalDamage([5, 5, 2, 4, 1, 4, 4, 1]) == 14', 'assert maximumTotalDamage([3, 2, 6, 4, 5, 4, 5, 6]) == 15', 'assert maximumTotalDamage([4, 1, 1, 5, 3]) == 7', 'assert maximumTotalDamage([3, 3, 1, 1, 1]) == 6', 'assert maximumTotalDamage([2, 7, 3, 7, 1]) == 17', 'assert maximumTotalDamage([8, 7]) == 8', 'assert maximumTotalDamage([3, 5, 3, 4, 5]) == 10', 'assert maximumTotalDamage([5, 7, 5, 2, 2, 7]) == 18', 'assert maximumTotalDamage([7, 6, 9, 8, 1, 2, 6]) == 23', 'assert maximumTotalDamage([3, 5, 7]) == 10', 'assert maximumTotalDamage([4, 6, 4, 8, 4, 5, 3, 6]) == 20', 'assert maximumTotalDamage([3, 5, 1, 2, 1, 3, 2, 2, 4]) == 11', 'assert maximumTotalDamage([4, 1]) == 5', 'assert maximumTotalDamage([2, 2, 3, 2, 2, 3, 1, 1, 3]) == 9', 'assert maximumTotalDamage([2, 1, 2, 4, 4, 4]) == 13', 'assert maximumTotalDamage([6, 6, 6, 3, 3, 4, 6, 5]) == 30', 'assert maximumTotalDamage([2, 2, 3, 1, 3, 3, 3, 3, 2]) == 15', 'assert maximumTotalDamage([6, 7, 1]) == 8', 'assert maximumTotalDamage([4, 7, 5, 1, 1, 5, 1, 5, 5, 3]) == 23', 'assert maximumTotalDamage([7, 8]) == 8', 'assert maximumTotalDamage([3, 1, 1, 3, 2, 3, 2]) == 9', 'assert maximumTotalDamage([4, 5, 5, 2, 1, 5, 1, 1, 5, 2]) == 24', 'assert maximumTotalDamage([4, 4, 2, 5]) == 8', 'assert maximumTotalDamage([6, 4, 1, 3, 3, 3, 2]) == 15', 'assert maximumTotalDamage([7, 9]) == 9', 'assert maximumTotalDamage([4, 2, 2, 4, 3, 1, 1, 6, 1]) == 11', 'assert maximumTotalDamage([3, 4, 1, 2, 8, 2, 6, 3]) == 14', 'assert maximumTotalDamage([5, 1, 5, 7, 3, 5, 6, 10, 9]) == 26', 'assert maximumTotalDamage([1, 4, 5, 4, 5, 3, 4, 3, 4, 4]) == 21', 'assert maximumTotalDamage([1, 4]) == 5', 'assert maximumTotalDamage([7, 5, 4, 5, 2, 9]) == 21', 'assert maximumTotalDamage([2, 8, 2, 8, 3, 5, 2, 4]) == 27', 'assert maximumTotalDamage([7, 4, 6, 4, 4, 2, 4, 4, 8]) == 28', 'assert maximumTotalDamage([9, 8, 1, 2, 5, 4, 2, 2, 9, 3]) == 29', 'assert maximumTotalDamage([5, 4, 3, 5]) == 10', 'assert maximumTotalDamage([2, 10, 7, 4, 1, 8, 4, 1, 9]) == 27', 'assert maximumTotalDamage([4, 2, 4, 1, 2, 2, 5]) == 11', 'assert maximumTotalDamage([1, 2, 2, 2, 1]) == 6', 'assert maximumTotalDamage([1, 1, 1, 1, 1, 2, 2]) == 5', 'assert maximumTotalDamage([3, 1, 3, 7, 1, 7]) == 20', 'assert maximumTotalDamage([2, 3, 4, 3, 4, 5, 5]) == 12', 'assert maximumTotalDamage([2, 2, 2, 7, 7, 3, 2, 9, 4, 1]) == 22', 'assert maximumTotalDamage([2, 1, 2, 1, 2, 1, 1]) == 6', 'assert maximumTotalDamage([1, 2, 3, 1, 2, 3, 2]) == 6', 'assert maximumTotalDamage([4, 5]) == 5', 'assert maximumTotalDamage([1, 1, 3, 2, 2, 1, 1]) == 4', 'assert maximumTotalDamage([10, 5]) == 15', 'assert maximumTotalDamage([3, 3, 5, 2]) == 7', 'assert maximumTotalDamage([1, 1, 3, 1, 4, 1, 1, 3, 1, 1]) == 11', 'assert maximumTotalDamage([2, 1, 1, 1, 1, 2, 1]) == 5', 'assert maximumTotalDamage([2, 1, 1, 2, 3, 3, 2, 2, 2, 1]) == 10', 'assert maximumTotalDamage([2, 1, 2, 2, 2, 2]) == 10', 'assert maximumTotalDamage([1, 1, 2, 4, 2, 1, 3, 3, 2, 4]) == 11', 'assert maximumTotalDamage([4, 2, 4, 2, 1, 1, 4, 1, 1, 1]) == 17', 'assert maximumTotalDamage([1, 8, 7, 5, 7, 5, 9, 6, 2]) == 21', 'assert maximumTotalDamage([2, 3, 1]) == 3', 'assert maximumTotalDamage([5, 2, 3, 6, 1, 6, 3, 3, 1]) == 21', 'assert maximumTotalDamage([6, 5, 1, 5, 2, 5]) == 17', 'assert maximumTotalDamage([2, 4, 2, 2]) == 6', 'assert maximumTotalDamage([2, 2, 2, 1, 2, 2, 2]) == 12', 'assert maximumTotalDamage([8, 4]) == 12', 'assert maximumTotalDamage([1, 4, 1, 1, 4, 4, 2]) == 15', 'assert maximumTotalDamage([8, 9, 10, 6, 5, 7, 8, 9, 9, 3]) == 36', 'assert maximumTotalDamage([2, 5, 2, 3, 2, 2, 2]) == 15', 'assert maximumTotalDamage([1, 2, 1, 2, 1, 1, 1, 2, 1]) == 6', 'assert maximumTotalDamage([2, 9, 4, 2, 1, 4, 8, 3]) == 18', 'assert maximumTotalDamage([23, 10, 9, 34, 6, 34, 4, 20, 7, 6, 34, 27, 17, 12, 11, 11, 17, 21, 8, 21, 22, 22, 29, 7, 14, 8, 25, 10, 9, 22, 27, 23, 6, 16, 23, 15, 10, 30, 21, 4, 26, 11, 32, 18, 3, 24, 11, 13, 23, 20]) == 434', 'assert maximumTotalDamage([8, 14, 10, 5, 7, 12, 5, 5, 14, 1, 9]) == 54', 'assert maximumTotalDamage([5, 58, 45, 54, 60, 6, 34, 26, 3, 64, 47, 58, 13, 31, 41, 32, 49, 10, 51, 27, 12, 24, 37, 15, 11, 29, 6, 41, 10, 61, 17, 6, 23, 36, 63, 58, 50, 64, 55, 52, 46, 13, 33, 64, 27, 41, 65, 27, 11, 27, 59, 53, 60, 37, 66, 10, 28, 32, 38, 26, 9, 45, 55, 9, 48, 22, 22, 61, 62, 8, 41, 14, 23, 61, 40, 40, 5, 42, 60, 4, 55, 50, 30, 3, 58, 33, 27, 25, 6, 32, 8, 33, 16, 34, 20, 14, 7, 19, 22]) == 1652', 'assert maximumTotalDamage([4, 18, 20, 13, 6, 5, 14, 12, 4, 1, 13, 9, 20, 17, 19, 24, 2, 15, 9, 3, 12, 4]) == 138', 'assert maximumTotalDamage([31, 76, 37, 35, 25, 18, 59, 57, 75, 82, 69, 41, 9, 53, 24, 54, 54, 17, 45, 46, 45, 27, 39, 17, 29, 56, 37, 57, 29, 32, 28, 74]) == 812', 'assert maximumTotalDamage([69, 49, 21, 72, 64, 17, 24, 42, 10, 82, 33, 57, 69, 43, 64, 21, 82, 41, 32, 73, 77, 46, 69, 41, 75, 65, 42, 35, 8, 7]) == 1052', 'assert maximumTotalDamage([6, 8, 73, 20, 29, 77, 14, 9, 79, 41, 32, 72, 72, 23, 66, 12, 20, 11, 95, 38, 42, 49, 99, 70, 21, 67, 7, 63, 95, 85, 20, 98, 94, 92, 69, 84, 68, 49, 7, 60, 86, 67, 15, 10, 16, 27, 35, 19, 89, 91, 15, 83, 29, 47, 86, 86, 3, 91, 69, 86, 97, 85, 37, 21, 20, 37, 13, 31, 21]) == 1915', 'assert maximumTotalDamage([35, 28, 48, 16, 13, 12, 4, 42, 11, 7, 23, 43, 56, 50, 27, 7, 44]) == 283', 'assert maximumTotalDamage([20, 15, 15, 16, 7, 52, 42, 45, 45, 49, 5, 25, 29, 46, 23, 11]) == 355', 'assert maximumTotalDamage([9, 61, 37, 12, 55, 98, 14, 59, 78, 52, 93, 29, 38, 21, 100, 39, 34, 39, 54, 71, 67, 10, 100, 49, 60, 36, 57, 45, 93, 92, 55, 11, 71, 59, 33, 13, 65, 66, 14, 46, 94, 86, 60, 92, 56, 93, 30, 77, 73, 58, 90, 47, 11, 43, 35, 45, 81, 42, 88, 99, 62]) == 1794', 'assert maximumTotalDamage([31, 50, 91, 51, 64, 66, 77, 44, 2, 53, 55]) == 417', 'assert maximumTotalDamage([19, 44, 47, 46, 28, 45, 44, 41, 34, 14, 44, 55, 45, 20, 58, 45, 55, 23, 50, 47, 5, 18, 13, 7]) == 611', 'assert maximumTotalDamage([35, 30, 83, 60, 81, 74, 72, 68, 60, 76, 56, 79, 26, 17, 38, 10, 75, 77, 62, 66, 38, 38, 32, 7, 48, 4, 60, 49, 22, 55, 68, 58, 69, 15, 48, 73, 37, 40, 21, 73, 48, 55, 24, 44, 70, 66, 62, 81, 35, 68, 40, 82, 14, 28, 73, 13, 39, 85, 30, 75, 71, 20, 39, 74, 56, 2, 64, 85, 19, 7, 82, 31, 15, 39, 19, 3]) == 1847', 'assert maximumTotalDamage([4, 80, 75, 89, 76, 53, 82, 1, 73, 32, 46, 72, 50, 75, 61, 85, 50, 46, 68, 83, 25, 69, 80, 28, 80, 50, 1, 50, 20, 37, 69, 33, 11, 63, 21, 79, 62, 89, 51, 2, 70, 20, 61, 46, 17, 44, 38, 89, 88, 82, 63, 72, 57, 56, 38, 1, 78, 30, 66, 68, 26, 44, 1, 67, 47, 74, 8, 50, 19, 36, 88, 35, 50, 43, 76, 16, 51, 24, 50, 42, 55, 19, 9, 51, 55, 88, 1, 26, 84, 60, 14, 27, 50, 64, 22]) == 2272', 'assert maximumTotalDamage([3, 24, 12, 10, 34, 41, 27, 32, 14, 7, 32, 17, 9, 43, 8, 19, 14, 5, 7, 44, 13, 15, 44, 1, 20, 16, 18, 31, 36, 1, 7, 20, 3, 40, 43, 10, 36, 22, 26, 43, 3, 43, 11]) == 534', 'assert maximumTotalDamage([4, 10, 3, 11, 12, 11, 3, 6, 4, 7, 12, 13, 6, 11, 15, 4, 13, 12, 12, 12, 15, 3, 10, 2, 7, 15, 11, 8, 4, 9, 4, 1, 6, 13, 2, 8, 7, 3, 12, 3, 10, 7, 5, 2, 1, 5, 13, 14, 4, 5, 7, 11, 4, 3, 13, 12, 10, 4, 10, 1, 13, 2]) == 199', 'assert maximumTotalDamage([66, 50, 66, 60, 87, 65, 13, 19, 79, 16, 10, 59, 85, 12, 49, 27, 79, 5, 31, 51, 47, 27, 37, 36, 9, 84, 82, 10, 10, 21, 30, 86, 41]) == 867', 'assert maximumTotalDamage([2, 13, 4, 5, 7, 3, 7, 15, 11, 14, 4, 6, 11, 7, 5, 13, 14, 12, 7]) == 86', 'assert maximumTotalDamage([30, 74, 37, 3, 7, 13, 24, 76, 42, 65, 33, 43, 24, 71, 55, 60, 40, 13, 47, 56, 58, 57, 2, 48, 47, 68, 74, 63, 66, 39, 14, 43, 1, 67]) == 873', 'assert maximumTotalDamage([36, 34, 30, 19, 4, 1, 34, 15, 3, 28, 22, 32, 25]) == 184', 'assert maximumTotalDamage([218, 147, 318, 350, 403, 189, 361, 11, 170, 437, 387, 396, 250, 388, 110, 166, 93, 315, 300, 281, 252, 47, 410, 336, 316, 247, 217, 215, 115, 58, 290, 379, 48, 80, 470, 433, 235, 492, 370, 196, 416, 122, 205, 130, 394, 321, 380, 258, 453, 314, 119, 83, 48, 307, 258, 199, 476, 463, 339, 456, 198, 443, 162, 89, 273, 217, 331, 29, 491, 125, 432, 256, 456, 406, 106, 389, 183, 151, 159, 14, 4, 98, 427, 252, 236, 212, 79, 71, 142, 109, 388, 133, 421, 470, 463, 193, 408, 455, 381, 288, 257, 5, 362, 75, 55, 472, 324, 333, 111, 379, 263, 224, 166, 191, 260, 335, 75, 434, 308, 44, 455, 438, 484, 378, 241, 179, 21, 462, 194, 58, 98, 45, 465, 312, 100, 377, 442, 436, 140, 142, 88, 196, 154, 418, 38, 325, 313, 324, 233, 322, 200, 211, 302, 164, 172, 418, 77, 46, 86, 401, 366, 242, 235, 14, 154, 97, 214, 412, 252, 331, 3, 270, 381, 64, 290, 162, 446, 405, 484, 428, 199, 365, 292, 275, 247, 236, 405, 430, 386, 251, 89, 13, 54, 13, 161, 398, 363, 260, 400, 382, 402, 25, 236, 406, 374, 431, 110, 438, 448, 278, 386, 111, 334, 399, 288, 210, 155, 360, 163, 141, 417, 365, 53, 31, 244, 435, 271, 119, 89, 188, 157, 219, 122, 368, 24, 233, 27, 251, 473, 355, 415, 330, 421, 261, 351, 99, 68, 185, 129, 410, 166, 419, 357, 451, 35, 473, 211, 69, 432, 9, 422, 328, 93, 490, 162, 352, 127, 437, 100, 284, 484, 149, 139, 213, 282, 310, 190, 240, 437, 103, 482, 221, 438, 97, 421, 473, 54, 488, 302, 60, 269, 184, 360, 280, 245, 478, 388, 484, 37, 348, 147, 210, 366, 471, 96, 123, 123, 273, 361, 271, 63, 383, 149, 358, 131, 173, 28, 62, 285, 148, 374, 404, 478, 436, 71, 386, 233, 193, 459, 247, 447, 232, 444, 395, 175, 415, 287, 442, 286, 91, 88, 306, 201, 183, 396, 385, 434, 112, 420, 83, 389, 362, 96, 246, 220, 416, 185, 204, 267, 104, 307, 355, 379, 358, 121, 455, 273, 379, 121, 402, 85, 38, 57, 118, 308, 363, 232, 66, 111, 157, 322, 163, 326, 113, 318, 431, 59, 202, 352, 455, 382, 371, 116, 8, 431, 450, 476, 452, 426, 290, 275, 463, 394, 128, 355, 133, 198, 273, 166, 236, 329, 12, 138, 422, 270, 224, 395, 254, 345, 138, 475, 317, 383, 74, 487, 229, 199, 464, 330, 191, 54, 424, 319, 37, 255, 416, 477, 305, 408, 203, 426, 411, 144, 336, 304, 220, 212, 48, 34, 165, 232, 202, 486, 260, 299, 175, 232, 271, 117, 245, 412, 423, 71, 305, 426, 399, 325, 393, 80, 488, 62, 350, 134, 169, 173, 76, 22, 436, 79, 141, 443, 335, 292, 157, 350, 247, 358, 362, 436, 233, 5, 438, 295, 464, 177, 128, 76, 267, 85, 249, 236, 162, 91, 132, 248, 321, 288, 492, 26, 36, 411, 204, 242, 14, 450, 299, 473, 250, 434, 24, 417, 110, 204, 64, 423, 120, 406, 108, 365, 250, 252, 76, 379, 401, 370, 368, 82, 95, 471, 91, 375, 310, 272, 372, 201, 486, 21, 70, 40, 267, 321, 365, 438, 217, 94, 229, 63, 156, 457, 252, 435, 373, 183, 345, 56, 79, 215, 311, 201, 57, 316, 354, 158, 52, 203, 307, 423, 310, 75, 481, 227, 74, 434, 77, 236, 125, 76, 304, 303, 302, 115, 372, 298, 109, 353, 339, 358, 81, 228, 276, 445, 265, 134, 213, 146, 370, 475, 237, 47, 427, 349, 360, 241, 408, 381, 207, 87, 74, 242, 261, 214, 234, 484, 375, 379, 348, 127, 38, 218, 470, 173, 82, 462, 291, 48, 448, 393, 490, 415, 277, 354, 194, 50, 462, 136, 309, 77, 79, 407, 298, 358, 173, 192, 294, 309, 126, 279, 302, 313, 195, 198, 276, 481, 449, 310, 172, 273, 86, 402, 128, 466, 267, 464, 258, 151, 201, 13, 443, 84, 105, 328, 244, 48, 340, 246, 238, 480, 430, 267, 380, 61, 87, 395, 12, 20, 63, 52, 416, 140, 50, 162, 285, 339, 483, 80, 408, 214, 428, 386, 265, 360, 137, 238, 483, 88, 341, 308, 154, 441, 463, 53, 416, 328, 350, 228, 374, 343, 152, 249, 477, 426, 305, 228, 311, 466, 6, 395, 1, 53, 14, 403, 385, 330, 211, 229, 320, 241, 112, 240, 147, 152, 303, 56, 204, 9, 301, 91, 189, 442, 478, 18, 342, 361, 283, 40, 106, 272, 234, 379, 377, 389, 101, 319, 91, 492, 364, 14, 431, 421, 358, 435, 303, 332, 156, 55, 374, 161, 149, 490, 37, 443, 217, 6, 170, 355, 229, 43, 350, 105, 385, 242, 86, 404, 255, 481, 167, 3, 48, 216, 218, 114, 120, 474, 420, 7, 343, 410, 365, 259, 461, 330, 168, 385, 78, 250, 314, 222, 473, 162, 93, 134, 73, 97, 321, 384, 61, 232, 295, 258, 322, 84, 238, 4, 434, 408, 412, 159, 135, 122, 26, 430, 342, 214, 486, 468, 203, 164, 89, 319, 265, 231, 19, 312, 102, 231, 379, 284, 443, 106, 162, 447, 332, 410, 59, 71, 477, 71, 262, 472, 188, 371, 151, 44, 79, 300, 188, 234, 412, 316, 442, 12, 66, 361, 491, 326, 420, 110, 247, 211, 188, 36, 202, 309, 19, 35, 210, 246, 110, 258, 148, 401, 278, 391, 284, 118, 234, 290, 304, 75, 14, 152, 234, 106, 117, 235, 191, 65]) == 109897', 'assert maximumTotalDamage([690, 290, 435, 88, 777, 765, 508, 87, 418, 137, 564, 305, 547, 193, 365, 427, 85, 171, 197, 704, 186, 135, 136, 323, 122, 31, 179, 396, 629, 445, 149, 91, 778, 356, 698, 575, 391, 775, 283, 437, 190, 626, 765, 58, 706, 18, 412, 591, 356, 565, 335, 378, 546, 469, 662, 619, 472, 98, 51, 358, 470, 183, 477, 359, 679, 336, 302, 32, 169, 277, 62, 647, 766, 647, 78, 190, 21, 512, 119, 337, 720, 16, 450, 473, 149, 78, 61, 133, 391, 209, 285, 388, 118, 504, 190, 417, 663, 297, 779, 308, 526, 19, 294, 607, 242, 14, 643, 128, 643, 211, 329, 522, 509, 276, 314, 461, 279, 350, 729, 115, 637, 271, 680, 374, 713, 303, 267, 322, 173, 30, 715, 641, 287, 232, 778, 420, 297, 325, 165, 75, 223, 608, 557, 704, 66, 724, 767, 747, 377, 721, 478, 342, 105, 179, 365, 459, 226, 536, 642, 42, 474, 424, 714, 356, 380, 316, 664, 349, 450, 575, 727, 48, 63, 172, 751, 634, 55, 111, 134, 149, 1, 712, 381, 616, 412, 333, 403, 249, 410, 523, 379, 170, 22, 397, 69, 767, 656, 750, 630, 18, 230, 45, 96, 240, 103, 510, 406, 258, 430, 5, 527, 156, 335, 260, 347, 307, 298, 343, 116, 176, 306, 634, 451, 303, 602, 68, 296, 222, 408, 747, 646, 717, 556, 736, 53, 422, 578, 450, 82, 645, 188, 690, 216, 122, 36, 349, 533, 66, 692, 10, 438, 516, 238, 757, 52, 481, 300, 359, 568, 741, 342, 652, 595, 389, 181, 586, 40, 638, 28, 113, 236, 618, 760, 358, 616, 490, 131, 522, 226, 11, 112, 642, 251, 683, 499, 763, 269, 755, 247, 212, 222, 78, 279, 213, 405, 683, 33, 93, 708, 221, 346, 70, 205, 404, 715, 457, 768, 566, 179, 358, 663, 508, 336, 416, 363, 48, 616, 741, 326, 468, 588, 39, 136, 612, 742, 473, 284, 353, 10, 21, 748, 493, 712, 517, 157, 710, 660, 176, 312, 539, 746, 457, 715, 72, 575, 560, 466, 570, 675, 193, 426, 290, 474, 771, 244, 624, 171, 440, 64, 216, 755, 16, 400, 124, 711, 222, 554, 633, 394, 63, 204, 329, 418, 404, 697, 281, 644, 162, 655, 171, 675, 711, 698, 112, 243, 97, 677, 429, 12, 377, 733, 770, 76, 180, 719, 374, 45, 328, 688, 629, 691, 99, 365, 597, 151, 667, 430, 674, 502, 675, 339, 211, 187, 165, 639, 264, 73, 550, 299, 387, 482, 438, 356]) == 98178', 'assert maximumTotalDamage([52, 165, 123, 188, 18, 113, 142, 205, 43, 9, 32, 31, 190, 92, 130, 62, 4, 153, 31, 157, 95, 134, 105, 167, 115, 195, 54, 96, 134, 94, 198, 155, 130, 184, 10, 149, 96, 180, 144, 163, 120, 124, 42, 205, 128, 191, 127, 5, 103, 106, 139, 64, 163, 192, 35, 130, 21, 152, 190, 82, 167, 136, 165, 12, 128, 88, 43, 137, 49, 166, 81, 106, 106, 196, 46, 142, 126, 126, 165, 146, 176, 105, 36, 202, 69, 40, 84, 184, 68, 9, 45, 173, 107, 122, 171, 107, 36, 13, 118, 81, 141, 74, 85, 172, 183, 12, 25, 141, 96, 171, 24, 150, 22, 91, 43, 168, 96, 61, 76, 146, 109, 167, 98, 138, 9, 97, 52, 5, 131, 50, 34, 107, 81, 48, 191, 2, 60, 195, 57, 153, 50, 88, 34, 75, 12, 79, 68, 132, 78, 6, 155, 18, 73, 193, 56, 107, 182, 157, 17, 143, 190, 110, 58, 65, 40, 69, 78, 14, 161, 23, 188, 127, 164, 44, 28, 162, 89, 134, 157, 41, 153, 171, 75, 105, 15, 193, 53, 29, 130, 40, 68, 5, 18, 160, 60, 123, 135]) == 10814', 'assert maximumTotalDamage([710, 228, 399, 72, 336, 311, 540, 515, 592, 403, 369, 536, 18, 639, 726, 166, 756, 117, 313, 11, 42, 309, 691, 519, 12, 656, 620, 177, 96, 464, 582, 717, 628, 563, 82, 509, 284, 724, 437, 230, 332, 351, 155, 386, 744, 724, 751, 550, 82, 242, 115, 286, 567, 90, 385, 562, 497, 392, 734, 82, 727, 139, 457, 45, 57, 180, 602, 218, 490, 226, 431, 407, 725, 659, 287, 664, 486, 761, 701, 264, 87, 454, 259, 545, 406, 493, 108, 71, 479, 70, 68, 208, 319, 340, 424, 665, 133, 546, 656, 514, 268, 418, 200, 725, 499, 673, 93, 533, 115, 553, 266, 148, 188, 683, 668, 298, 415, 167, 658, 140, 469, 560, 384, 153, 638, 414, 383, 396, 153, 407, 166, 332, 356]) == 42352', 'assert maximumTotalDamage([511, 696, 15, 19, 408, 273, 814, 407, 7, 881, 682, 893, 618, 224, 453, 186, 523, 641, 264, 405, 424, 827, 680, 420, 60, 880, 741, 85, 438, 891, 356, 466, 195, 814, 36, 317, 881, 666, 52, 643, 352, 573, 761, 428, 611, 19, 797, 446, 150, 440, 889, 83, 778, 3, 371, 747, 146, 804, 88, 580, 832, 45, 890, 497, 185, 836, 461, 599, 339, 747, 825, 61, 302, 689, 568, 889, 584, 71, 712, 785, 680, 250, 893, 429, 217, 396, 386, 593, 832, 785, 117, 869, 187, 281, 396, 347, 84, 600, 7, 500, 511, 854, 818, 185, 22, 610, 306, 801, 58, 144, 170, 734, 336, 145, 218, 544, 458, 554, 794, 57, 58, 389, 176, 601, 819, 908, 126, 574, 561, 371, 816, 308, 123, 314, 807, 370, 182, 702, 42, 770, 291, 914, 352, 80, 832, 797, 825, 653, 913, 347, 697, 267, 391, 528, 899, 26, 408, 717, 489, 700, 433, 408, 730, 521, 295, 898, 803, 793, 473, 117, 169, 302, 484, 806, 405, 817, 825, 438, 169, 641, 613, 98, 175, 726, 771, 40, 596, 757, 882, 431, 356, 585, 45, 146, 87, 11, 565, 42, 306, 422, 62, 453, 133, 831, 200, 716, 606, 617, 444, 385, 660, 759, 809, 545, 733, 422, 409, 657, 555, 19, 306, 138, 486, 704, 764, 205, 197, 521, 292, 619, 120, 452, 620, 104, 266, 583, 171, 735, 787, 349, 91, 534, 664, 691, 380, 409, 124, 141, 689, 724, 251, 78, 98, 28, 799, 105, 394, 530, 7, 617, 272, 192, 708, 310, 625, 387, 495, 370, 619, 263, 774, 653, 555, 492, 511, 543, 903, 503, 495, 687, 604, 914, 691, 697, 162, 750, 624, 833, 127, 28, 301, 617, 624, 296, 811, 278, 99, 651, 149, 376, 213, 622, 802, 287, 764, 483, 490, 525, 48, 432, 815, 453, 30, 462, 60, 53, 776, 591, 808, 516, 820, 481, 672, 730, 15, 385, 704, 81, 360, 713, 379, 111, 253, 668, 725, 641, 438, 775, 57, 857, 186, 879, 88, 149, 452, 419, 421, 206, 802, 298, 167, 904, 519, 498, 668, 504, 124, 601, 408, 657, 523, 644, 710, 808, 624, 553, 387]) == 108444', 'assert maximumTotalDamage([685, 402, 39, 381, 477, 11, 158, 72, 89, 55, 362, 412, 241, 450, 630, 671, 85, 3, 430, 653, 172, 396, 383, 389, 561, 553, 191, 159, 532, 578, 224, 199, 382, 483, 601, 662, 301, 641, 352, 544, 471, 361, 75, 186, 255, 570, 26, 557, 625, 416, 640, 476, 453, 150, 524, 529, 283, 473, 546, 536, 277, 366, 531, 542, 333, 219, 679, 682, 153, 79, 191, 156, 592, 365, 121, 684, 443, 381, 625, 381, 89, 336, 393, 561, 441, 661, 216, 274, 421, 99, 676, 198, 554, 290, 241, 429, 553, 664, 380, 386, 239, 648, 377, 209, 631, 193, 369, 22, 80, 316, 52, 69, 535, 145, 594, 191, 454, 380, 79, 81, 614, 186, 93, 593, 87, 501, 530, 211, 359, 601, 9, 205, 464, 693, 26, 435, 15, 498, 94, 440, 422, 375, 256, 493, 230, 648, 289, 538, 544, 519, 417, 604, 579, 150, 481, 682, 531, 452, 425, 541, 281, 437, 72, 460, 266, 157, 308, 487, 559, 343, 142, 583, 201, 597, 121, 432, 206, 71, 444, 417, 487, 102, 519, 97, 485, 565, 271, 288, 532, 581, 591, 40, 109, 129, 137, 608, 252, 55, 605, 332, 415, 237, 363, 619, 222, 351, 378, 436, 582, 629, 249, 168, 124, 495, 253, 184, 224, 265, 19, 522, 31, 513, 487, 331, 413, 109, 186, 477, 77, 637, 370, 183, 297, 236, 285, 287, 349, 458, 674, 305, 502, 346, 36, 239, 388, 127, 22, 343, 516, 350, 660, 27, 589, 664, 619, 494, 178, 431, 486, 292, 670, 425, 425, 162, 660, 161, 512, 700, 233, 48, 431, 368, 541, 173, 215, 97, 510, 531, 189, 648, 663, 385, 620, 294, 114, 108, 446, 256, 497, 104, 656, 322, 490, 534, 57, 323, 278, 469, 239, 539, 251, 529, 114, 558, 442, 324, 482, 627, 43, 110, 210, 598, 347, 402, 394, 633, 494, 304, 345, 462, 182, 139, 495, 369, 122, 397, 457, 599, 20, 435, 619, 211, 405, 106, 367, 136, 491, 425, 134, 111, 174, 229, 189, 650, 534, 688, 686, 54, 112, 649, 677, 600, 347, 289, 543, 64, 101, 25, 318, 409, 258, 203, 155, 637, 153, 466, 128, 225, 170, 43, 459, 73, 318, 604, 383, 460, 318, 552, 181, 47, 146, 341, 222, 90, 301, 454, 252, 228, 174, 38, 40, 624, 441, 193, 682, 378, 315, 402, 554, 408, 386, 473, 697, 60, 455, 138, 207, 619, 284, 552, 578, 195, 221, 72, 20, 207, 316, 444, 180, 49, 550, 364, 621, 464, 229, 74, 360, 435, 595, 373, 586, 366, 573, 66, 464, 99, 159, 270, 332, 292, 191, 423, 433, 474, 652, 505, 147, 337, 563, 193, 448, 575, 531, 255, 260, 295, 346, 535, 695, 127, 550, 690, 573, 536, 314, 562, 544, 544, 366, 595, 496, 144, 381, 231, 121, 598, 423, 448, 391, 151, 450, 397, 632, 611, 437, 226, 332, 251, 363, 516, 4, 139, 543, 263, 488, 548, 476, 625, 79, 644, 536, 490, 686, 329, 682, 365, 312, 620, 631, 429, 420, 270, 433, 649, 309, 415, 304, 339, 533, 618, 557, 481, 276, 608, 454, 378, 14, 102, 455, 44, 269, 682, 502, 220, 17, 199, 275, 310, 223, 136, 151, 552, 613, 349, 312, 150, 35, 662, 443, 223, 167, 410, 673, 393, 315, 541, 366, 555, 643, 583, 87, 381, 650, 314, 215, 514, 117, 307, 609, 341, 358, 583, 112, 171, 470, 542, 359, 98, 480, 572, 232, 578, 175, 313, 480, 528, 54, 546, 298, 519, 402, 515, 499, 649, 225, 96, 482, 320, 168, 235, 245, 369, 205, 693, 316, 522, 414, 221, 522, 630, 62, 596, 657, 210, 61, 482, 55, 542, 152, 481, 609, 567, 379, 222, 19, 515, 487, 675, 476, 628, 537, 1, 178, 239, 142, 445, 391, 503, 1, 360, 221, 671, 473, 615, 427, 584, 314, 171, 486, 296, 61, 468, 632, 241, 103, 190, 376, 565, 454, 489, 286, 156, 475, 649, 447, 261, 684, 143, 614, 275, 52, 414, 330, 386, 438, 659, 592, 198, 394, 122, 199, 190, 108, 560, 1, 1, 653, 668, 469, 508, 298, 53, 330, 63, 221, 163, 343, 649, 119, 24, 344, 67, 166, 43, 98, 298, 53, 318, 494, 205, 133, 441, 291, 167, 531, 220, 432, 502, 385, 308, 96, 395, 635, 451, 340, 690, 647, 648, 599, 477, 126, 170, 619, 213, 8, 438, 289, 354, 451, 87, 531, 224, 133, 298, 549, 404, 399, 38, 313, 109, 343]) == 139145', 'assert maximumTotalDamage([122, 247, 277, 322, 79, 169, 376, 324, 145, 114, 71, 180, 102, 304, 16, 34, 296, 159, 349, 375, 221, 362, 31, 31, 210, 229, 282, 128, 190, 85, 8, 194, 80, 210, 73, 90, 160, 260, 336, 363, 40, 79, 176, 27, 375, 91, 111, 361, 198, 331, 152, 213, 135, 331, 110, 145, 366, 361, 186, 95, 93, 74, 201, 208, 326, 368, 58, 284, 305, 42, 308, 25, 249, 47, 221, 124, 115, 280, 148, 304, 336, 255, 211, 61, 299, 126, 47, 68, 93, 85, 80, 46, 127, 253, 362, 135, 120, 227, 38, 374, 259, 199, 90, 266, 164, 64, 113, 24, 17, 53, 298, 256, 182, 72, 240, 278, 209, 76, 37, 94, 137, 86, 11, 173, 339, 205, 196, 2, 156, 152, 2, 108, 154, 362, 68, 100, 211, 208, 42, 183, 104, 153, 227, 102, 31, 212, 153, 18, 281, 64, 168, 168, 171, 79, 282, 48, 334, 138, 268, 19, 315, 10, 310, 223, 77, 56, 14, 14, 194, 216, 280, 358, 283, 288, 374, 23, 6, 353, 159, 149, 12, 169, 275, 72, 233, 286, 66, 335, 200, 179, 72]) == 19615', 'assert maximumTotalDamage([72, 97, 140, 174, 207, 54, 187, 135, 76, 198, 229, 163, 139, 204, 42, 69, 128, 204, 143, 63, 229, 138, 40, 47, 96, 127, 20, 208, 66, 127, 44, 155, 154, 26, 153, 215, 59, 70, 18, 110, 76, 91, 134, 90, 34, 18, 62, 131, 37, 27, 144, 87, 100, 22, 213, 10, 163, 151, 31, 66, 25, 58, 121, 72, 197, 118, 217, 142, 81, 50, 199, 124, 141, 196, 150, 174, 57, 183, 220, 165, 40, 204, 184, 63, 94, 125, 78, 47, 206, 198, 146, 227, 42, 192, 129, 133, 32, 120, 160, 54, 213, 182, 5, 147, 127, 64, 38, 192, 65, 159, 102, 76, 44, 160, 150, 70, 219, 133, 200, 98, 136, 46, 202, 40, 27, 33, 11, 201, 99, 199, 126, 207, 57, 225, 134, 217, 160, 31, 58, 101, 223, 198, 115, 149, 91, 185, 56, 83, 56, 206, 12, 81, 77, 167, 43, 141, 129, 20, 120, 89, 153, 96, 10, 61, 94, 123, 25, 25, 144, 176, 145, 35, 169, 114, 187, 127, 7, 77, 17, 121, 153, 27, 156, 81, 40, 83, 170, 205, 54, 165, 195, 208, 23, 4, 150, 143, 100, 28, 202, 21, 23, 69, 101, 125, 131, 57, 214, 224, 99, 11, 91, 134, 48, 132, 181, 185, 176, 143, 79, 210, 125, 205, 73, 9, 147, 95, 34, 208, 18, 152, 20, 146, 223, 53, 158, 137, 52, 203, 192, 181, 223, 201, 118, 195, 105, 62, 161, 5, 134, 112, 80, 212, 79, 140, 24, 220, 28, 64, 137, 218, 166, 40, 150, 135, 83, 88, 129, 25, 41, 145, 33, 210, 231, 155, 182, 81, 218, 121, 48, 15, 87, 113, 12, 155, 75, 30, 179, 197, 185, 122, 12, 26, 154, 99, 87, 91, 66, 171, 205, 186, 102, 19, 49, 144, 123, 68, 123, 159, 85, 19, 64, 58, 138, 107, 158, 32, 31, 189, 177, 67, 225, 73, 219, 64, 43, 148, 160, 146, 190, 161, 141, 208, 210, 141, 231, 24, 56, 144, 177, 212, 180, 192, 206, 169, 65, 112, 32, 185, 12, 54, 47, 192, 33, 75, 200, 18, 200, 143, 85, 195, 99, 142, 56, 214, 184, 100, 175, 223, 21, 8, 4, 151, 128, 149, 46, 124, 41, 3, 133, 159, 79, 206, 33, 170, 229, 154, 30, 225, 231, 165, 34, 129, 114, 25, 89, 34, 93, 162, 186, 28, 42, 146, 42, 194, 134, 155, 210, 188, 78, 37, 52, 228, 166, 14, 23, 150, 170, 50, 148, 91, 88, 10, 1, 161, 94, 218, 137, 118, 146, 27, 91, 138, 164, 39, 158, 111, 81, 62, 168, 174, 210, 123, 11, 17, 147, 218, 153, 147, 113, 59, 147, 148, 135, 194, 230, 179, 173, 146, 86, 54, 219, 184, 153, 178, 12, 142, 125, 84, 36, 143, 23, 166, 53, 77, 31, 19, 117, 120, 204, 160, 107, 46, 167, 93, 85, 122, 114, 146, 194, 161, 142, 116, 175, 148, 129, 97, 218, 191, 109, 30, 179, 105, 180, 51, 170, 208, 53, 112, 18, 60, 123, 81, 8, 53, 12, 134, 51, 72, 225, 213, 73, 165, 142, 11, 141, 137, 215, 179, 213, 110, 210, 112, 229, 93, 120, 161, 177, 129, 10, 203, 124, 94, 113, 95, 128, 165, 158, 57, 111, 21, 60, 110, 139, 3, 87, 87, 135, 10, 116, 87, 176, 165, 53, 88, 22, 149, 224, 139, 155, 180, 54, 119, 21, 230, 195, 127, 174, 88, 221, 213, 70, 52, 116, 115, 140, 169, 175, 137, 107, 15, 18, 111, 26, 63, 110, 74, 163, 85, 15, 81, 82, 169, 205, 156, 56, 105, 201, 49, 45, 196, 73, 112, 222, 152, 19, 109, 128, 68, 83, 100, 3, 152, 99, 64, 135, 158, 62, 81, 69, 170, 46, 204, 112, 3, 137, 163, 129, 88, 23, 118, 26, 73, 169, 165, 33, 39, 157, 119, 69, 39, 225, 73, 213, 231, 78, 95, 54, 160, 205, 75, 230, 167, 80, 231, 132, 1, 190, 225, 186, 160, 150, 193, 38, 191, 55, 216, 210, 143, 191, 121, 184, 58, 228, 99, 55, 205, 28, 196, 86, 42, 222, 197, 166, 223, 25, 170, 145, 193, 168, 167, 145, 28, 61, 86, 120, 121, 204, 47, 36, 176, 141, 1, 34, 146, 172, 101, 2, 9, 223, 184, 101, 43, 144, 214, 172, 23, 196, 9, 55, 98, 113, 56, 217, 188, 106, 21, 219, 145, 231, 187, 58, 186, 109, 221, 111, 21, 6, 4, 194, 107, 130, 177, 216, 43, 47, 64, 149, 59, 211, 68, 44, 180, 11, 60, 58, 35, 227, 38, 141, 189, 69, 205, 1, 220, 137, 11, 111, 47, 110, 167, 224, 112, 178, 101, 148, 54, 107, 60, 64, 102, 43, 100, 210, 7, 12, 77, 124, 44, 81, 220, 32, 215, 141, 65, 127, 138, 209, 8, 146, 231, 121, 52, 121, 52, 225, 145, 172, 173, 61, 10, 173, 33, 196, 22, 46, 196, 205, 66, 53, 52, 169, 207, 78, 60, 150, 66, 141, 152, 23, 203, 171, 210, 19, 3, 10, 68, 206, 115, 185, 75, 202, 1, 222, 119, 33, 65, 181, 146, 143, 21, 227, 101, 71, 193, 19, 138, 226, 129, 75, 62, 157, 153, 198, 116, 73, 177, 24, 13, 138, 118, 126, 209, 45, 6, 18, 81]) == 40897', 'assert maximumTotalDamage([34, 801, 346, 493, 75, 730, 656, 99, 731, 431, 577, 966, 763, 369, 132, 640, 96, 100, 298, 632, 224, 72, 361, 882, 5, 144, 402, 609, 830, 566, 152, 63, 895, 507, 871, 433, 443, 276, 387, 172, 222, 63, 576, 488, 927, 498, 120, 756, 908, 301, 959, 569, 248, 720, 673, 872, 590, 202, 358, 609, 447, 520, 571, 603, 468, 459, 765, 99, 682, 87, 791, 74, 693, 770, 524, 505, 598, 165, 247, 788, 737, 358, 868, 8, 88, 470, 698, 602, 844, 965, 359, 597, 347, 35, 98, 526, 152, 167, 944, 47, 935, 373, 424, 984, 310, 459, 761, 579, 72, 150, 387, 94, 140, 451, 652, 231, 353, 923, 109, 353, 357, 759, 255, 945, 620, 200, 84, 214, 799, 900, 976, 500, 159, 230, 181, 126, 298, 484, 23, 484, 155, 870, 899, 99, 585, 430, 643, 350, 882, 869, 69, 898, 447, 491, 613, 260, 540, 285, 271, 620, 820, 131, 530, 339, 543, 237, 490, 443, 647, 812, 30, 685, 161, 11, 761, 423, 672, 183, 632, 185, 296, 777, 323, 343, 177, 536, 982, 473, 465, 742, 65, 73, 671, 699, 686, 559, 503, 370, 512, 312, 743, 459, 193, 970, 704, 160, 549, 952, 524, 388, 689, 17, 611, 12, 310, 45, 416, 408, 169, 884, 934, 742, 871, 194, 872, 258, 426, 796, 708, 660, 118, 328, 896, 11, 372, 64, 778, 887, 105, 521, 440, 510, 826, 876, 833, 508, 249, 620, 663, 87, 857, 381, 776, 569, 922, 581, 687, 397, 151, 817, 904, 164, 520, 805, 897, 261, 471, 538, 838, 224, 832, 956, 551, 406, 426, 376, 172, 650, 927, 475, 163, 688, 159, 86, 365, 443, 441, 128, 924, 214, 552, 801, 43, 466, 272, 174, 268, 847, 291, 206, 568, 786, 219, 600, 872, 463, 238, 367, 755, 860, 132, 719, 436, 591, 251, 365, 770, 939, 141, 232, 166, 947, 41, 562, 126, 9, 194, 433, 924, 770, 43, 573, 783, 899, 131, 638, 594, 506, 911, 482, 184, 74, 605, 659, 236, 657, 528, 829, 574, 616, 651, 655, 785, 376, 141, 926, 755, 600, 186, 451, 388, 399, 168, 396, 852, 976, 355, 322, 122, 519, 3, 434, 66, 387, 164, 749, 499, 123, 139, 579, 77, 467, 445, 8, 236, 295, 717, 947, 348, 736, 316, 16, 942, 914, 833, 611, 139, 798, 285, 717, 175, 157, 364, 341, 336, 424, 442, 8, 709, 495, 868, 518, 713, 427, 197, 12, 698, 361, 34, 351, 376, 531, 805, 460, 136, 911, 821, 921, 192, 906, 771, 440, 135, 792, 502, 157, 591, 218, 913, 732, 675, 355, 617, 890, 442, 243, 959, 561, 856, 838, 564, 470, 575, 633, 469, 693, 718, 142, 498, 144, 388, 266, 459, 732, 596, 383, 37, 615, 929, 693, 780, 549, 592, 241, 441, 1, 208, 59, 919, 277, 50, 315, 391, 807, 106, 313, 905, 826, 397, 300, 257, 122, 342, 579, 810, 585, 809, 866, 231, 761, 550, 567, 100, 140, 53, 299, 720, 338, 204, 327, 563, 557, 550, 963, 122, 848, 631, 615, 341, 30, 620, 392, 766, 237, 755, 144, 363, 496, 846, 797, 633, 628, 268, 906, 596, 357, 728, 464, 677, 701, 942, 154, 759, 539, 77, 644, 849, 7, 51, 309, 388, 941, 685, 695, 86, 202, 172, 675, 51, 501, 499, 864, 381, 979, 201, 594, 226, 202, 507, 825, 628, 928, 102, 461, 126, 169, 435, 967, 557, 560, 328, 76, 151, 206, 918, 431, 594, 567, 66, 837, 565, 958, 840, 97, 971, 798, 874, 965, 553, 807, 362, 865, 553, 678, 945, 640, 512, 468, 664, 682, 383, 233, 884, 412, 595, 187, 376, 782, 747, 924, 585, 68, 57, 798, 709, 738, 801, 481, 226, 227, 438, 712, 39, 41, 449, 10, 124, 163, 641, 736, 67, 788, 125, 242, 772, 231, 443, 627, 718, 646, 369, 322, 42, 366, 97, 966, 247, 832, 543, 468, 385, 233, 928, 707, 422, 387, 311, 600, 525, 273, 231, 402, 701, 90, 747, 743, 166, 132, 885, 912, 303, 628, 893, 131, 718, 224, 810, 149, 540, 225, 413, 769, 930, 584, 412, 392, 61, 714, 251]) == 186053', 'assert maximumTotalDamage([409, 481, 524, 289, 234, 346, 38, 222, 523, 41, 354, 491, 184, 417, 492, 224, 96, 138, 132, 147, 385, 266, 476, 178, 309, 243, 232, 416, 265, 154, 123, 249, 151, 48, 430, 329, 403, 157, 430, 459, 133, 522, 237, 139, 387, 79, 369, 177, 84, 356, 215, 103, 519, 413, 453, 161, 324, 342, 161, 296, 201, 476, 57, 439, 402, 467, 237, 463, 99, 504, 501, 146, 495, 460, 335, 332, 129, 512, 28, 191, 498, 265, 391, 241, 293, 286, 202, 207, 132, 443, 78, 152, 69, 122, 447, 450, 349, 444, 352, 102, 77, 438, 205, 42, 95, 334, 205, 257, 281, 166, 271, 501, 524, 79, 80, 115, 452, 159, 403, 57, 528, 452, 361, 478, 268, 105, 67, 210, 389, 95, 247, 138, 23, 257, 347, 83, 211, 530, 525, 56, 540, 420, 71, 98, 447, 67, 438, 305, 516, 350, 441, 275, 117, 176, 479, 308, 358, 280, 435, 317, 62, 513, 12, 162, 192, 363, 458, 8, 264, 249, 320, 142, 422, 14, 494, 170, 204, 375, 385, 137, 128, 308, 487, 387, 444, 389, 378, 413, 133, 431, 446, 138, 102, 293, 297, 186, 356, 244, 174, 215, 537, 393, 424, 464, 500, 441, 59, 510, 86, 510, 446, 279, 504, 292, 286, 478, 537, 86, 411, 408, 422, 396, 189, 488, 366, 445, 125, 531, 160, 380, 267, 272, 353, 57, 23, 418, 294, 91, 405, 481, 187, 120, 505, 96, 466, 81, 285, 92, 51, 305, 197, 188, 527, 343, 481, 254, 509, 505, 77, 319, 431, 524, 207, 197, 415, 113, 531, 519, 288, 258, 342, 364, 432, 336, 292, 510, 147, 209, 523, 506, 536, 235, 95, 249, 111, 78, 292, 245, 53, 238, 524, 57, 4, 139, 438, 55, 257, 75, 59, 298, 470, 161, 498, 234, 316, 273, 156, 109, 338, 269, 465, 341, 539, 420, 276, 81, 447, 180, 348, 338, 278, 377, 135, 478, 302, 20, 304, 131, 426, 409, 226, 32, 179, 152, 505, 468, 503, 536, 226, 434, 501, 367, 208, 285, 106, 519, 531, 240, 500, 39, 496, 442, 218, 51, 305, 136, 161, 57, 467, 169, 434, 7, 533, 29, 280, 215, 345, 441, 238, 169, 520, 463, 49, 344, 382, 56, 519, 208, 344, 532, 211, 54, 348, 123, 178, 377, 430, 204, 335, 516, 196, 302, 18, 440, 238, 257, 473, 395, 158, 49, 157, 461, 66, 276, 402, 513, 507, 46, 368, 322, 115, 206, 31, 314, 117, 413, 169, 76, 485, 403, 377, 273, 356, 492, 316, 535, 3, 86, 536, 325, 205, 337, 329, 462, 502, 375, 402, 54, 84, 215, 233, 144, 441, 263, 177, 464, 237, 378, 457, 259, 265, 47, 90, 264, 199, 518, 6, 277, 35, 301, 148, 474, 441, 454, 447, 69, 208, 510, 199, 74, 406, 65, 509, 252, 6, 250, 31, 407, 217, 49, 454, 420, 75, 129, 119, 283, 245, 322, 428, 529, 430, 374, 314, 91, 6, 152, 532, 31, 47, 14, 267, 312, 516, 310, 219, 480, 161, 358, 53, 146, 446, 312, 428, 45, 324, 524, 225, 224, 12, 230, 281, 420, 420, 77, 315, 512, 474, 420, 171, 227, 435, 424, 97, 374, 2, 56, 275, 359, 420, 190, 33, 227, 333, 176, 173, 480, 142, 417, 262, 148, 401, 173, 341, 343, 443, 189, 71, 199, 15, 382, 314, 160, 264, 64, 172, 243, 52, 332, 194, 419, 497, 487, 113, 3, 98, 148, 420, 333, 119, 149, 495, 428, 473, 210, 389, 175, 541, 233, 409, 360, 69, 470, 194, 110, 141, 196, 386, 173, 15, 408, 459, 498, 513, 518, 526, 8, 268, 442, 48, 172, 101, 498, 370, 411, 91, 1, 378, 362, 197, 96, 1, 340, 306, 253, 214, 405, 30, 220, 409, 297, 313, 342, 326, 282, 101, 211, 284, 164, 252, 41, 366, 252, 425, 173, 258, 374, 460, 433, 254, 1, 358, 500, 203, 512, 5, 160, 375, 251, 107, 217, 405, 402, 154, 319, 93, 130, 486, 193, 241, 237, 512, 296, 538, 283, 246, 112, 185, 436, 323, 316, 24, 115, 275, 419, 319, 170, 206, 73, 407, 203, 332, 513, 521, 409, 7, 235, 208, 94, 355, 263, 204, 220, 492, 28, 44, 274, 220, 40, 439, 299, 379, 455, 490, 458, 200, 327, 442, 299, 284, 174, 256, 331, 318, 516, 236, 505, 283, 164, 485, 236, 20, 448, 447, 325, 400, 438, 534, 51, 114, 300, 166, 372, 100, 274, 179, 262, 362, 414, 219, 41, 288, 397, 471, 89, 121, 180, 511, 444, 140, 180, 160, 348]) == 105782']
correct = 0
for t in tests:
    try:
        exec(t)
        correct+=1
    except:
        pass
success = len(tests) == correct
print(correct,'/',len(tests))
print(success)